{"version":3,"sources":["providers/theme/theme.provider.tsx","pages/home/home.styles.ts","components/molecules/category-tags/category-tabs.styles.ts","providers/recipes/recipes.utils.ts","services/recipes/recipes.services.ts","providers/recipes/recipes.provider.tsx","providers/auth/auth.utilities.ts","providers/auth/auth.provider.tsx","components/molecules/category-tags/category-tags.component.tsx","components/atoms/main-section/main-section.styles.ts","components/atoms/main-section/main-section.component.tsx","components/molecules/featured-recipes/featured-recipes.styles.ts","components/atoms/rating/rating.styles.ts","components/atoms/rating/rating.component.tsx","providers/theme/themes.ts","components/atoms/form-button/form-button.component.tsx","components/atoms/recipe-card-item/recipe-card-item.styles.ts","components/atoms/recipe-card-item/recipe-card-item.component.tsx","components/molecules/featured-recipes/featured-recipes.component.tsx","components/molecules/spinner/spinner.styles.ts","components/molecules/spinner/spinner.component.tsx","pages/home/home.component.tsx","components/atoms/page-title/page-title.styles.ts","components/atoms/page-title/page-title.component.tsx","components/molecules/recipes-list/recipe-list.styles.ts","components/molecules/recipes-list/recipes-list.component.tsx","components/atoms/list-grid-toggle/list-grid-toggle.styles.ts","components/atoms/list-grid-toggle/list-grid-toggle.component.tsx","components/molecules/recipes-category-card-list/recipes-category-card-list.styles.ts","components/molecules/recipes-category-card-list/recipes-category-card-list.component.tsx","pages/recipes/recipes.styles.ts","components/atoms/empty-message/empty-message.styles.ts","components/atoms/empty-message/empty-message.component.tsx","pages/recipes/recipes.component.tsx","components/atoms/field-wrapper/field-wrapper.styles.ts","components/atoms/field-wrapper/field-wrapper.component.tsx","components/atoms/select-option-field/select-option-field.styles.ts","components/atoms/select-option-field/select-option-field.component.tsx","components/atoms/text-field/text-field.styles.ts","components/atoms/text-field/text-field.component.tsx","components/atoms/checkbox-field/checkbox-field.styles.ts","components/atoms/checkbox-field/checkbox-field.component.tsx","components/atoms/form-button/form-button.styles.ts","components/molecules/main-menu/main-menu.component.tsx","templates/add-recipe-form/add-recipe-form.styles.ts","templates/add-recipe-form/add-recipe-form.component.tsx","pages/add-recipe/add-recipe.component.tsx","pages/view-recipe/view-recipe.styles.ts","components/atoms/comments-list-item/comments-list-item.styles.ts","components/atoms/user-avatar/user-avatar.styles.ts","components/atoms/user-avatar/user-avatar.component.tsx","components/atoms/comments-list-item/comments-list-item.component.tsx","components/atoms/recipe-content-owner/recipe-content-owner.styles.ts","providers/users/users.utilities.ts","services/users/users.service.ts","providers/users/users.provider.tsx","components/atoms/recipe-content-owner/recipe-content-owner.component.tsx","components/molecules/recipe-view-details/recipe-view-details.styles.ts","templates/add-comment/add-comment.styles.ts","templates/add-comment/add-comment.component.tsx","components/molecules/recipe-view-details/recipe-view-details.component.tsx","components/molecules/confirm-dialog/confirm-dialog.styles.ts","components/molecules/confirm-dialog/confirm-dialog.component.tsx","components/atoms/recipe-action-bar/recipe-action-bar.styles.ts","components/atoms/recipe-action-bar/recipe-action-bar.component.tsx","pages/view-recipe/view-recipe.component.tsx","templates/edit-recipe-form/edit-recipe-form.styles.ts","templates/edit-recipe-form/edit-recipe-form.component.tsx","pages/edit-recipe/edit-recipe.component.tsx","pages/recipes-by-category/recipes-by-category.styles.ts","pages/recipes-by-category/recipes-by-category.component.tsx","templates/sign-in-form/sign-in-form.styles.ts","services/auth/auth.services.ts","templates/sign-in-form/sign-in-form.component.tsx","pages/sign-in-sign-up/sign-in-sign-up.styles.ts","pages/sign-in-sign-up/sign-in-sign-up.component.tsx","templates/sign-up-form/sign-up-form.styles.ts","templates/sign-up-form/sign-up-form.component.tsx","pages/sign-up/sign-up.component.tsx","components/molecules/user-card/user-card.styles.ts","components/molecules/user-card/user-card.component.tsx","components/molecules/users-list/users-list.styles.ts","components/molecules/users-list/users-list.component.tsx","pages/users/users.component.tsx","App.styles.tsx","components/atoms/nav-brand/nav-brand.styles.ts","components/atoms/nav-brand/nav-brand-component.tsx","components/molecules/sign-in-out/sign-in-out.styles.ts","components/atoms/backdrop/backdrop.styles.ts","components/atoms/backdrop/backdrop.component.tsx","components/atoms/sign-out/sign-out.styles.ts","components/atoms/sign-out/sign-out.component.tsx","components/molecules/sign-in-out/sign-in-out.component.tsx","components/atoms/menu-toggle/menu-toggle.styles.ts","components/atoms/menu-toggle/menu-toggle.component.tsx","components/atoms/close-button/close-button.styles.ts","components/atoms/close-button/close-button.component.tsx","components/molecules/theme-switcher/theme-switcher.styles.ts","components/molecules/theme-switcher/theme-switcher.component.tsx","components/molecules/main-menu/main-menu.styles.ts","components/molecules/primary-nav/primary.nav.styles.ts","components/molecules/primary-nav/primary.nav.component.tsx","pages/user-recipes/user-recipes.component.tsx","components/atoms/select-option-plain/select-option-plain.styles.ts","components/atoms/select-option-plain/select-option-plain.component.tsx","components/molecules/theme-palette-switcher/theme-palette-switcher.component.tsx","pages/setting/settings-page.component.tsx","App.tsx","reportWebVitals.ts","components/molecules/toasts/toasts-styles.ts","components/molecules/toasts/toasts.component.tsx","index.tsx"],"names":["Theme","HeroStyles","styled","h1","props","theme","fontSizes","large","colors","pageHighLight2","SpinnerWrapper","div","HeroSubTitle","h2","pageForeground1","HeroWrapper","pageBackground2","pageBackground1","navBarBackground","StyledHeroGraphic","Widgets","TagContainer","small","TagList","ul","getFeaturedRecipes","recipes","items","copy","slice","i","length","random","Math","floor","push","splice","getCategoryTags","temp","find","item","category","sort","a","b","addRecipeToList","recipe","editRecipe","index","findIndex","_id","updated","deleteRecipe","baseURL","process","endpoint","getRecipes","axios","get","resp","data","addRecipe","token","method","url","headers","Authorization","updateRecipe","removeRecipe","message","addRecipeComment","commentItem","recipeId","RecipesContext","createContext","recipeItems","recipeCount","setSpinner","setCount","isLoading","RecipesProvider","children","useState","setRecipeItems","setRecipeCount","makeRequest","setMakeRequest","setIsLoading","val","useEffect","then","setTimeout","catch","err","console","log","Provider","value","setUserAuth","user","expires","localStorage","setItem","JSON","stringify","expireAuth","getItem","parse","Date","getTime","removeItem","getUserAuth","authData","AuthContext","isLoggedIn","setLogin","setUserToken","setUserObject","expiration","setUserExpiration","AuthProvider","setUser","setIsLoggedIn","setToken","setExpiration","storageUser","CategoryTags","useContext","uniques","setUniques","filterList","filter","r","shared","user_id","userId","Fragment","map","key","to","cat_id","StyledMain","main","MainSection","CardList","StyledRatingContainer","StarFilled","Star","inverse","StarOutlined","StarBorder","RecipeRating","rating","title","idx","paletteItems","pink","purple","green","cyan","deepPurple","indigo","teal","blue","lightGreen","deepOrange","lightBlue","yellow","getLightTheme","palette","grey","pageBackground3","pageBorderColor1","pageLinkColor1","pageHighLight1","A100","A700","pageSecondaryColor1","pageToastSuccess","pageToastError","fonts","smallPlus","regular","medium","FormButtons","ThemeContext","Dark","setTheme","setPaletteDark","setPaletteLight","currentDark","currentLight","setCurrentDark","setCurrentLight","MyTheme","paletteDark","paletteLight","str","parsed","A200","CardItem","ThemeStyle","ThemEnum","Light","CardCopy","p","CardTitle","h3","CardBottomWrapper","CardMetaInfo","RecipeCardItem","r_name","steps","join","ChevronRight","FeaturedRecipes","featured","setFeatured","StyledCircularProgress","CircularProgress","SpinnerOuter","Spinner","HomePage","StyledPageTitle","PageTitle","StyledList","StyledListItem","li","RecipeList","StyledButton","button","StyledGridOnIcon","GridOn","StyledListIcon","List","ListGridToggleButton","grid","onClick","StyledCardContainer","RecipesCategoryCardList","StyledTitleWrapper","StyledSpinnerWrap","StyledEmptyMessage","EmptyMesssage","msg","RecipesPage","isGridView","setIsGridView","filteredRecipes","setFilteredRecipes","filteredItems","StyledFieldWrapper","FieldWrapper","StyledLabel","label","Required","StyledSelect","SelectOptionField","as","id","name","dataType","optionData","defaultOptionText","required","disabled","useField","field","setValue","htmlFor","className","datatype","StyledVisibility","Visibility","StyledVisibilityOff","VisibilityOff","StyledEyeButton","StyledInput","input","StyledEyeLabel","RecipeTextField","placeholder","type","onVisibilityChange","isVisible","CheckBoxIcon","Check","ison","StyledCheckBox","CheckBoxField","StyledPrimaryButton","FormButton","Primary","Icons","buttonText","StyledFormWrapper","StyledInputWrapper","InputButtonsWrap","FieldArrayItem","StyledAddInputBtn","StyledSubtractInputBtn","Field","StyledHRule","hr","StyledFieldArrayEmptyButton","AddRecipeForm","addToast","useToasts","catData","setCatData","currentRecipeItems","setCurrentRecipeItems","navigate","useNavigate","formValuesInitial","ingredients","comments","String","initialValues","onSubmit","values","setSubmitting","catName","Number","vals","appearance","autoDismiss","dirty","resetForm","isValid","render","arrayHelpers","remove","insert","comment","Secondary","AddRecipePage","DetailsTopWrapper","MetaInfoTop","MetaInfoBottom","pageForegroundColor1","MetaInfoWrapper","UserWrapper","StyledAvatar","span","UserAvatar","CommentItem","StyledDiv","addUserItem","userList","getUsers","UsersContext","userItems","userCount","UsersProvider","setUserItems","setUserCount","users","sorted","toUpperCase","RecipeContentOwner","action","findUser","u","StyledDetailsDiv","StyledH4","h4","StyledButtonToggle","AddCommentForm","handleSubmit","undefined","setFormValuesInitial","showForm","setShowForm","RecipeViewDetails","setRecipe","tempRecipe","StyledConfirmButton","StyledCancelButton","StyledDialog","Dialog","ConfirmDialog","confirmText","handleCancel","handleConfirm","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","StyledTextarea","textarea","StyledEditIcon","Edit","StyledDeleteIcon","Delete","StyledShareIcon","Share","StyledPrintIcon","Print","StyledRecipeActionBar","RecicipeActionBar","useParams","setOpen","copied","setCopied","isOwner","setIsOwner","onCopy","text","window","print","onChange","e","target","RecipeDetailPage","EditRecipeForm","foundRecipe","toString","EditRecipePage","RecipesByCategory","filtered","setFiltered","setCatName","param_id","parseInt","logInUser","email","password","post","signUpUser","SignInForm","StyledNavLink","NavLink","StyledSignUpContainer","SignInSignUpPage","SignUpForm","setIsVisable","userToAdd","SignUpPage","StyledUserCard","StyledNoSharedRecipes","UserCard","isContentOwner","StyledUserCardList","UsersList","authUser","setUsers","usersWithRecipe","UsersPage","StyledOuterDiv","StyledNavBrand","Restaurant","NavBrand","toggleClose","isOpen","StyledRightItemsWrapper","StyledRightListItem","StyledBackdrop","Backdrop","StyledAccountIcon","AccountCircle","StyledDropdownContainer","StyledAnchor","StyledDropDownWrapper","SignOutButton","setIsOpen","toggleExpanded","handleSignOut","SignInSignOut","StyledMenu","Menu","MenuToggle","toggleHandler","StyledClose","Close","CloseButton","closeHandler","StyledThemeButton","Settings","StyledLightModeIcon","LightMode","StyledDarkModeIcon","DarkMode","ThemeSwitcher","settingsPresentation","common","StyledHome","Home","StyledUsers","PeopleAlt","MenuBook","StyledWidget","StyledAddCircle","AddCircle","StyledSetting","StyledNavUl","StyledMenuHeader","StyledMenuOuter","MainMenu","toggleIsOpen","itemsWithIcons","icon","svgIcon","params","route","StyledNavBrandWrap","StyledNavBar","PrimaryNav","NAV_DATA","mainNavItems","setMainNavItems","handleIsOpen","auth","UserRecipesPage","usersRecipes","setUsersRecipes","setIsContentOwner","tempUser","select","SelectOptionPlain","handleChange","labelText","evt","o","ThemePaletteSwitcher","selectValDark","setSelectValDark","selectValLight","setSelectValLight","themeColors","setThemeColors","Object","keys","split","toLowerCase","SettingsPage","App","path","element","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StyledCloseIcon","StyledToast","Appearance","CustomToasts","onDismiss","ReactDOM","StrictMode","components","Toast","CustomToast","document","getElementById"],"mappings":"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","file":"static/js/main.1608f436.chunk.js","sourcesContent":["import React, { useContext, createContext, useState, FC, useEffect } from \"react\";\nimport { getDarkTheme, getLightTheme, paletteItems } from './themes';\nimport { ThemeProvider } from \"styled-components\";\n\nexport enum Theme {\n    Dark = 'Dark',\n    Light = 'Light',\n}\n\nexport type ThemeContextType = {\n    theme: Theme;\n    setTheme: (Theme: Theme) => void;\n    setPaletteDark: (val: any) => void;\n    setPaletteLight: (val: any) => void;\n    paletteItems: any;\n    currentDark: string;\n    currentLight: string;\n    setCurrentDark: (val: string) => void;\n    setCurrentLight: (val: string) => void;\n}\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const ThemeContext = createContext<ThemeContextType>({\n    theme: Theme.Dark,\n    setTheme: theme => { },\n    setPaletteDark: () => { },\n    setPaletteLight: () => { },\n    paletteItems,\n    currentDark: '',\n    currentLight: '',\n    setCurrentDark: (val: string) => { },\n    setCurrentLight: (val: string) => { }\n});\nexport const useTheme = () => useContext(ThemeContext);\n\nconst MyTheme: FC<Props> = ({ children }) => {\n    const [currentDark, setCurrentDark] = useState('pink');\n    const [currentLight, setCurrentLight] = useState('blue');\n    const [theme, setTheme] = useState(Theme.Dark);\n    const [paletteDark, setPaletteDark] = useState(paletteItems['pink']);\n    const [paletteLight, setPaletteLight] = useState(paletteItems['blue']);\n\n\n    useEffect(() => {\n        const str = localStorage.getItem('storedTheme');\n\n        if (str) {\n            const parsed = JSON.parse(str);\n            setPaletteLight(parsed.paletteLight);\n            setPaletteDark(parsed.paletteDark);\n            setCurrentDark(parsed.currentDark);\n            setCurrentLight(parsed.currentLight);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('storedTheme', JSON.stringify(({ currentDark, currentLight, paletteDark, paletteLight })))\n    }, [paletteDark, paletteLight, currentLight, currentDark]);\n\n\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme, setPaletteDark, setPaletteLight, paletteItems, currentDark, currentLight, setCurrentDark, setCurrentLight }}>\n            <ThemeProvider theme={theme === Theme.Dark ? getDarkTheme(paletteDark) : getLightTheme(paletteLight)}>{children}</ThemeProvider>\n        </ThemeContext.Provider>\n    );\n\n}\n\nexport default MyTheme;","import styled from 'styled-components';\nimport { Widgets } from '@material-ui/icons';\n\nexport const HeroStyles = styled.h1`\n    font-size: ${(props) => props.theme.fontSizes.large};\n    font-weight: 300;\n    line-height: 0.9em;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const HeroSubTitle = styled.h2`\n    font-size: 1.5rem;\n    font-weight: 300;\n    line-height: 1.2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const HeroWrapper = styled.div`\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.pageBackground2};\n    background: linear-gradient(\n        to right,\n        ${props => props.theme.colors.pageBackground1},\n        75%,\n        ${props => props.theme.colors.navBarBackground}\n    );\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledHeroGraphic = styled(Widgets)`\n    color: ${(props) => props.theme.colors.pageHighLight2};\n    font-size: 5.6rem !important;\n    margin: -6vw 1.25rem 0 -2.6rem;\n    @media (min-width: 576px) {\n        font-size: 11.6rem !important;\n        margin: 0 1.25rem 0 -1.25rem;\n    }\n`;","import styled from 'styled-components';\n\nexport const TagContainer = styled.div`\n    background-color: ${props => props.theme.colors.pageBackground2};\n    font-size: ${props => props.theme.fontSizes.small};\n    color: #fff;\n    padding: 1.5rem 1.5rem 0.75rem 1.5rem;\n`;\n\nexport const TagList = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    list-style: none;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    li {\n        background-color: ${props => props.theme.colors.pageHighLight2};\n        padding: 0.5rem 1rem;\n        margin: 0 0.5rem 1rem 0.5rem;\n        border-radius: 0 1rem 0 1rem;\n        @media (min-width: 1400px) {\n            &:nth-child(even) {\n                border-radius: 1rem 0 1rem 0;\n            }\n        }\n        a {\n            color: #fff;\n            text-decoration: none;\n        }\n    }\n`;","import React from 'react';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\n\n\nexport const getFeaturedRecipes = (recipes: iRecipe[]):iRecipe[] => {\n    const items: iRecipe[] = [];\n    const copy = recipes.slice(0);\n    const NUM = 3;\n\n    for (let i = copy.length; i > 0; i--) {\n        if (items.length < NUM) {\n            let random = Math.floor(Math.random() * copy.length);\n            items.push(copy[random]);\n            copy.splice(random, 1);\n        } else {\n            break;\n        }\n    }\n    return items;\n};\n\nexport const getCategoryTags = (recipes: iRecipe[]):iRecipe[] => {\n    const temp: iRecipe[] = [];\n\n    for (let i = 0; i < recipes.length; i++) {\n        if (!temp.find(item => recipes[i].category === item.category)) {\n            temp.push(recipes[i]);\n        }\n    }\n\n    return temp.sort((a, b) => {\n        if (a.category < b.category) {\n            return -1;\n        }\n        if (a.category > b.category) {\n            return 1;\n        }\n        return 0;\n    })\n}\n\nexport const addRecipeToList = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        recipes.push(recipe);\n        return recipes;\n    }\n}\n\nexport const editRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1, recipe);\n        return updated;\n    }\n}\n\nexport const deleteRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1);\n        return updated;\n    }\n}\n\n","import axios from 'axios';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_RECIPE_ENDPOINT;\nconst commentEndpoint = process.env.REACT_APP_RECIPE_COMMENT_ENDPOINT;\n\nexport const getRecipes = async () => {\n    try {\n\n        const resp = await axios.get<iRecipe[]>(`${baseURL}${endpoint}`);\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const addRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${endpoint}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const updateRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const removeRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        })\n\n        return resp.data.message;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const addRecipeComment = async (commentItem: { comment: string, user: string}, recipeId: string, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${commentEndpoint}/${recipeId}`,\n            data: commentItem,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n}\n","import React, { FC, createContext, useState, useEffect } from 'react';\nimport { getFeaturedRecipes, getCategoryTags, addRecipeToList, editRecipe, deleteRecipe } from './recipes.utils';\n\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { getRecipes } from '../../services/recipes/recipes.services';\n\ntype RecipeContextType = {\n    recipeItems: iRecipe[];\n    recipeCount: number;\n    getFeaturedRecipes: (recipes: iRecipe[]) => iRecipe[];\n    getCategoryTags: (recipes: iRecipe[]) => iRecipe[];\n    addRecipeToList: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    editRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    deleteRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    setSpinner: (val: boolean) => void;\n    setCount: (val: number) => void;\n    isLoading: boolean;\n}\n\nexport const RecipesContext = createContext<RecipeContextType>({\n    recipeItems: [],\n    recipeCount: 0,\n    getFeaturedRecipes: ([]) => [],\n    getCategoryTags: ([]) => [],\n    addRecipeToList: ([]) => [],\n    editRecipe: ([]) => [],\n    deleteRecipe: ([]) => [],\n    setSpinner: () => { },\n    setCount: () => { },\n    isLoading: true\n});\n\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst RecipesProvider: FC<Props> = ({ children }) => {\n    const [recipeItems, setRecipeItems] = useState<iRecipe[]>([]);\n    const [recipeCount, setRecipeCount] = useState<number>(0);\n    const [makeRequest, setMakeRequest] = useState<boolean>(true);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const setSpinner = (val = true) => setIsLoading(val);\n    const setCount = (val = 0) => setRecipeCount(val);\n\n    useEffect(() => {\n        if (makeRequest) {\n            // console.log('make request');\n            setMakeRequest(false);\n            getRecipes().then((resp) => {\n                // delay is to see spinner\n                setTimeout(() => {\n                    setSpinner(false);\n                    if (resp) {\n                        setRecipeItems(resp);\n                        setCount(resp.length);\n                    }\n                }, 1500);\n            }).catch((err) => {\n                setSpinner(false);\n                console.log(err);\n            })\n        }\n\n    }, [makeRequest])\n\n    return (<RecipesContext.Provider\n        value={{\n            recipeItems,\n            recipeCount,\n            getFeaturedRecipes,\n            getCategoryTags,\n            addRecipeToList,\n            editRecipe,\n            deleteRecipe,\n            setSpinner,\n            setCount,\n            isLoading\n        }}\n    >{children}</RecipesContext.Provider>)\n};\n\nexport default RecipesProvider;","\nimport { iUser } from '../../interfaces/user/user.interface';\n\nexport type StoredAuthType = {\n    user: iUser;\n    expires: number;\n}\n\nexport const setUserAuth = (user: iUser, expires: number):void => {\n\n    localStorage.setItem(\n        'userData',\n        JSON.stringify({\n            user,\n            expires\n        })\n    )\n}\n\nexport const expireAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        if (expires - currentTime < 0) {\n            localStorage.removeItem('userData');\n        }\n    } else {\n        localStorage.removeItem('userData');\n    }\n}\n\nexport const getUserAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        return expires - currentTime > 0 ? authData : null;\n    } else {\n        return null;\n    }\n}","import React, { FC, createContext, useState, useEffect } from 'react';\n\nimport { iUser } from '../../interfaces/user/user.interface';\nimport { setUserAuth, getUserAuth, expireAuth } from './auth.utilities';\n\ntype UserContextType = {\n    user: iUser | null;\n    isLoggedIn: boolean,\n    token: string | null;\n    setLogin: (val: boolean) => void;\n    setUserToken: (val: any) => void;\n    setUserObject: (val: any) => void;\n    setUserExpiration: (val: any) => void;\n    expiration: number | null;\n    setUserAuth: (user: iUser, expires: number) => void;\n    getUserAuth: () => void;\n    expireAuth: () => void;\n}\n\nexport const AuthContext = createContext<UserContextType>({\n    user: null,\n    isLoggedIn: false,\n    token: null,\n    setLogin: () => { },\n    setUserToken: (val) => { },\n    setUserObject: (val) => { },\n    expiration: null,\n    setUserExpiration: (val) => { },\n    setUserAuth: () => { },\n    getUserAuth: () => { },\n    expireAuth: () => { }\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst AuthProvider: FC<Props> = ({ children }) => {\n\n    const [user, setUser] = useState<iUser | null>(null);\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [token, setToken] = useState<string | null>(null);\n    const [expiration, setExpiration] = useState<number | null>(null);\n    const setLogin = (val = false) => setIsLoggedIn(val);\n    const setUserToken = (val = null) => setToken(val);\n    const setUserObject = (val = null) => setUser(val);\n    const setUserExpiration = (val = null) => setExpiration(val);\n\n    useEffect(() => {\n        expireAuth();\n        const storageUser = getUserAuth();\n\n        if (storageUser) {\n            setUser(storageUser.user);\n            setIsLoggedIn(true);\n            setToken(storageUser.user.token);\n            setExpiration(storageUser.expires);\n        }\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            isLoggedIn,\n            token,\n            expiration,\n            setLogin,\n            setUserToken,\n            setUserObject,\n            setUserExpiration,\n            setUserAuth,\n            getUserAuth,\n            expireAuth\n        }}>{children}</AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TagContainer, TagList } from './category-tabs.styles';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\nimport { UsersContext } from \"../../../providers/users/users.provider\";\n\nconst CategoryTags = () => {\n    const { recipeItems, getCategoryTags } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [uniques, setUniques] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setUniques(getCategoryTags(filterList))\n    }, [recipeItems, getCategoryTags, user])\n\n    return (\n        <React.Fragment>\n            {\n                uniques.length > 0 && (\n                    <TagContainer>\n                        <TagList>\n                            {\n                                uniques.map((item, key) => (<li key={key}>\n                                    <Link to={`/recipes/category/${item.cat_id}`}>{item.category}</Link>\n                                </li>))\n                            }\n                        </TagList>\n                    </TagContainer>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CategoryTags;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    padding: 0 1.5rem 1.5rem 1.5rem;\n    overflow: hidden;\n`;","import React, { FC } from \"react\";\nimport { StyledMain } from \"./main-section.styles\";\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const MainSection: FC<Props> = ({ children }) => (\n    <StyledMain children={children} />\n);","import styled from 'styled-components';\n\nexport const CardList = styled.div`\n    width: 100%;\n    margin: 0;\n    padding: 1.5rem 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;\n\n","import styled from \"styled-components\";\n\nimport { StarBorder, Star } from \"@material-ui/icons\";\nimport {Theme as ThemeEnum } from '../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle?: ThemeEnum;\n    inverse: string;\n}\n\nexport const StyledRatingContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    max-width: 90px;\n`;\n\nexport const StarFilled = styled(Star)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\nexport const StarOutlined = styled(StarBorder)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\n","import React, { FC } from \"react\";\nimport { StyledRatingContainer, StarFilled, StarOutlined } from \"./rating.styles\";\n\ninterface Props {\n    rating?: number;\n    inverse?: boolean;\n}\n\nconst RecipeRating: FC<Props> = ({ rating = 0, inverse = false }) => {\n    let stars: any[] = [true, true, true, true];\n\n    return (\n        <StyledRatingContainer title={`rated ${rating} stars`}>\n            {stars.map((item, idx) => idx < rating ?\n                (<StarFilled inverse={inverse ? 'yes' : 'no'} key={idx} />)\n                :\n                (<StarOutlined inverse={inverse ? 'yes' : 'no'} key={idx} />)\n            )}\n        </StyledRatingContainer>\n    );\n}\n\nexport default RecipeRating;","import {\n    grey,\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightBlue,\n    lightGreen,\n    yellow,\n    deepOrange\n} from 'material-colors-ts';\n\nexport const paletteItems = {\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightGreen,\n    deepOrange,\n    lightBlue,\n    yellow\n}\n\nexport const getDarkTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[900],\n            pageBackground2: grey[800],\n            pageBackground3: grey[700],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[50],\n            pageLinkColor1: palette.A200,\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}\n\nexport const getLightTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[50],\n            pageBackground2: grey[200],\n            pageBackground3: grey[300],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[900],\n            pageLinkColor1: palette[900],\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}","import React, { FC } from 'react';\n\nimport { StyledPrimaryButton } from './form-button.styles';\n\nexport enum FormButtons {\n    Primary = \"Primary\",\n    Secondary = \"Secondary\"\n}\n\ninterface Props {\n    buttonText: string;\n    type: 'button' | 'submit';\n    FormButton: FormButtons;\n    onClick?: () => void;\n    disabled?: boolean\n}\n\n\n\nconst FormButton: FC<Props> = ({ buttonText, type = 'button', FormButton, onClick, disabled = false }) => {\n    return (\n        <StyledPrimaryButton onClick={onClick} FormButton={FormButton} type={type} disabled={disabled}>{buttonText}</StyledPrimaryButton>\n    )\n}\n\nexport default FormButton;","import { Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CardItem = styled.div<iThemeStyleProp>`\n    background-color: ${(props) => props.theme.colors.pageSecondaryColor1};\n    padding: 1rem;\n    color: #fff;\n    min-height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        background-color: #fff;\n        border: 2px solid ${props.theme.colors.pageSecondaryColor1};\n        border-top: 0.5rem solid ${props.theme.colors.pageSecondaryColor1};\n        color: ${props.theme.colors.pageForeground1};\n    `}\n`;\n\nexport const CardCopy = styled.p`\n    font-weight: 300;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n`;\n\nexport const CardTitle = styled.h3`\nfont-weight: 400;\ndisplay: -webkit-box;\n-webkit-line-clamp: 2;\n-webkit-box-orient: vertical;  \noverflow: hidden;\n`;\n\nexport const CardBottomWrapper = styled.div<iThemeStyleProp>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    * { flex: 1}\n    a {\n        color: #fff;\n        text-decoration: none;\n        flex: 0 0 1;\n        text-align: right;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        svg {\n            flex: 0 0 24px;\n        }\n    }\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        a {\n            color: ${props.theme.colors.pageLinkColor1};\n        }\n    `}\n`;\n\nexport const CardMetaInfo = styled.div<iThemeStyleProp>`\n    display: flex;\n    align-items: top;\n    justify-content: left;\n    * {\n        flex: 1;\n    }\n\n    span {\n        position: relative;\n        padding-right: 8px;\n        margin-right: 8px;\n        flex: 0;\n        &:before {\n            position: absolute;\n            content: '';\n            right: 0;\n            width: 1px;\n            height: 100%;\n            background-color: #fff;\n            opacity: 0.5;\n        }\n        ${props => props.ThemeStyle === ThemEnum.Light && `\n            &::before {\n                background-color: ${props.theme.colors.pageForeground1};\n            }\n        `}\n    }\n`;","import React, { FC, useContext } from 'react';\n\nimport RecipeRating from '../../atoms/rating/rating.component';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight } from \"@material-ui/icons\";\n\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\nimport { CardItem, CardCopy, CardBottomWrapper, CardMetaInfo, CardTitle } from './recipe-card-item.styles';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ntype Props = {\n    item: iRecipe;\n}\n\n\nconst RecipeCardItem: FC<Props> = ({ item }) => {\n    const { theme } = useContext(ThemeContext)\n    return (\n        <CardItem ThemeStyle={theme}>\n            <CardTitle>{item.r_name}</CardTitle>\n            <CardCopy>{item?.steps?.join(' ')}</CardCopy>\n            <CardBottomWrapper ThemeStyle={theme}>\n                <CardMetaInfo ThemeStyle={theme}>\n                    <span>{item.category}</span>\n                    <RecipeRating inverse={theme === Theme.Light} rating={item.rating} />\n                </CardMetaInfo>\n                <Link to={`/recipes/${item._id}`}>View More <ChevronRight /></Link>\n            </CardBottomWrapper>\n        </CardItem>\n    );\n}\n\nexport default RecipeCardItem;","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { CardList } from \"./featured-recipes.styles\";\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\n\nconst FeaturedRecipes = () => {\n    const { recipeItems, getFeaturedRecipes } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [featured, setFeatured] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFeatured(getFeaturedRecipes(filterList));\n    }, [recipeItems, user, getFeaturedRecipes])\n\n\n    return (\n        <CardList>\n            {\n                featured.map((item, key) => (\n                    <RecipeCardItem key={key} item={item} />\n                ))\n            }\n        </CardList>\n    );\n}\n\nexport default FeaturedRecipes;","import React from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const SpinnerWrapper = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n    color: ${props => props.theme.colors.pageHighLight2} !important;\n`;\n\n\nexport const SpinnerOuter = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React from 'react';\n\nimport { SpinnerWrapper, StyledCircularProgress } from './spinner.styles';\n\n\nconst Spinner = () => (\n    <SpinnerWrapper>\n        <StyledCircularProgress />\n    </SpinnerWrapper>\n);\n\nexport default Spinner;","import React, { useContext } from \"react\";\n\nimport { HeroStyles, HeroSubTitle, HeroWrapper, StyledHeroGraphic, SpinnerWrapper } from \"./home.styles\";\nimport CategoryTags from '../../components/molecules/category-tags/category-tags.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport FeaturedRecipes from \"../../components/molecules/featured-recipes/featured-recipes.component\";\nimport { RecipesContext } from \"../../providers/recipes/recipes.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst HomePage = () => {\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <HeroWrapper>\n                <StyledHeroGraphic />\n                <div>\n                    <HeroStyles>Recipe Box</HeroStyles>\n                    <HeroSubTitle>A collection of my favorite recipes</HeroSubTitle>\n                </div>\n            </HeroWrapper>\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <FeaturedRecipes />\n                        <CategoryTags />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default HomePage;\n\n","import styled from 'styled-components';\n\nexport const StyledPageTitle = styled.h2`\n    font-size: ${(props) => props.theme.fontSizes.medium};\n    line-height: normal;\n    font-weight: 300;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;","import React, { FC } from 'react';\nimport { StyledPageTitle } from './page-title.styles';\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nconst PageTitle: FC<Props> = ({ children }) => (\n    <StyledPageTitle children={children} />\n);\n\nexport default PageTitle;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n    margin-top: 1rem;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75rem 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n    &>a {\n        color: ${(props) => props.theme.colors.pageLinkColor1};\n        text-decoration: none;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`;","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledList, StyledListItem } from './recipe-list.styles';\n\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipeList: FC<Props> = ({ recipes = [] }) => {\n\n    return (\n        <StyledList>\n            {\n                recipes.map(item => (\n                    <StyledListItem key={item._id}>\n                        <Link to={`/recipes/${item._id}`}>\n                            {item.r_name}\n                        </Link>\n                    </StyledListItem>\n                ))\n            }\n        </StyledList>\n    )\n}\n\nexport default RecipeList;","import styled from 'styled-components';\n\nimport {GridOn, List} from '@material-ui/icons';\n\nexport const StyledButton = styled.button`\n    background: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n`;\n\nexport const StyledGridOnIcon = styled(GridOn)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`\n\nexport const StyledListIcon = styled(List)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`\n","import React, { FC } from \"react\";\n\nimport { StyledGridOnIcon, StyledListIcon, StyledButton } from './list-grid-toggle.styles'\n\ninterface Props {\n    grid: boolean;\n    onClick: VoidFunction\n}\n\nconst ListGridToggleButton: FC<Props> = ({ grid, onClick }) => (\n    <StyledButton title={grid ? 'View list' : 'View cards'} onClick={onClick}>\n        {\n            grid ? (\n                <StyledListIcon />\n            ) : (\n                <StyledGridOnIcon />\n            )\n        }\n    </StyledButton>\n);\n\nexport default ListGridToggleButton;","import styled from 'styled-components';\n\nexport const StyledCardContainer = styled.div`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;","import React, { FC } from 'react';\n\nimport { StyledCardContainer } from './recipes-category-card-list.styles';\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipesCategoryCardList: FC<Props> = ({ recipes = [] }) => (\n    <StyledCardContainer>\n        {\n            recipes.map((item, key) => (<RecipeCardItem key={key} item={item} />))\n        }\n        {\n            recipes.length < 3 && (\n                <React.Fragment>\n                    <div></div>\n                    <div></div>\n                </React.Fragment>\n            )\n        }\n    </StyledCardContainer>\n\n);\n\nexport default RecipesCategoryCardList;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n","import styled from 'styled-components';\n\nexport const StyledEmptyMessage = styled.p`\n  text-align: center;\n  margin: 2rem 0;\n  color: ${props => props.theme.colors.pageBorderColor1};\n`;","import React, { FC } from 'react';\n\nimport { StyledEmptyMessage } from './empty-message.styles';\n\ninterface Props {\n    msg: string;\n}\n\nexport const EmptyMesssage: FC<Props> = ({ msg }) => (\n    <StyledEmptyMessage>\n        {msg}\n    </StyledEmptyMessage>\n)\n\nexport default EmptyMesssage;","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap } from './recipes.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst RecipesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [filteredRecipes, setFilteredRecipes] = useState<iRecipe[]>([]);\n    const { recipeItems, recipeCount, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n\n    const onButtonClick = () => setIsGridView(!isGridView);\n\n    useEffect(() => {\n        const filteredItems: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFilteredRecipes(filteredItems);\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Recipes ({filteredRecipes.length})</PageTitle>\n                <ListGridToggleButton grid={isGridView} onClick={onButtonClick} />\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={filteredRecipes} />\n                ) : (\n                    <RecipeList recipes={filteredRecipes} />\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length === 0 &&\n                <EmptyMesssage msg={'There are no recipes.'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipesPage;","import styled from 'styled-components';\n\nexport const StyledFieldWrapper = styled.div`\n    margin-bottom: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledFieldWrapper } from './field-wrapper.styles'\n\ninterface Props {\n    children?: React.ReactNode\n}\n\n\nconst FieldWrapper: FC<Props> = ({ children }) => {\n\n    return (\n        <StyledFieldWrapper>\n            {children}\n        </StyledFieldWrapper>\n    );\n}\n\nexport default FieldWrapper;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.div`\n    .select {\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n    }\n`;\n","import React, { useState, FC } from \"react\";\n\nimport { useField, Field } from \"formik\";\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledSelect, StyledLabel } from './select-option-field.styles';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    as?: string;\n    id: string;\n    label?: string;\n    name: string;\n    dataType?: string;\n    optionData: iKeyValuePair[] | undefined;\n    defaultOptionText?: string;\n    required?: boolean;\n    disabled?: boolean;\n}\n\nconst SelectOptionField: FC<Props> = ({\n    as,\n    id,\n    label,\n    name,\n    dataType,\n    optionData,\n    defaultOptionText,\n    required = false,\n    disabled = false,\n}) => {\n    const [field, meta, helpers] = useField({ name, id });\n    const { setValue } = helpers;\n\n    if (!optionData) {\n        optionData = [];\n    }\n\n    if (dataType === 'boolean') {\n        if (field.value === 'true' || field.value === 'false') {\n            field.value === 'true' ? setValue(true, false) : setValue(false, false);\n        }\n    }\n\n\n    return (\n        <FieldWrapper>\n            {label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledSelect>\n                <Field\n                    as=\"select\"\n                    className='select'\n                    {...field}\n                    id={id}\n                    name={name}\n                    datatype={dataType || \"string\"}\n                    disabled={disabled}\n                    required={required}\n                >\n                    {defaultOptionText && <option value=\"\">{defaultOptionText}</option>}\n                    {\n                        optionData.map((item: iKeyValuePair) => (\n                            <option key={item.id} value={item.id}>\n                                {item.name}\n                            </option>\n                        ))\n                    }\n                </Field>\n            </StyledSelect>\n        </FieldWrapper>\n    );\n}\n\nexport default SelectOptionField;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledVisibility = styled(Visibility)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledVisibilityOff = styled(VisibilityOff)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledEyeButton = styled.button`\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    width: 100%;\n    font-size: 1rem;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledEyeLabel = styled(StyledLabel)`\n    display: flex;\n    align-items: center;\n    > span {\n        margin-right: 0.5rem;\n    }\n`;\n","import React from 'react';\nimport { useField } from 'formik';\n\nimport { StyledInput, StyledLabel, StyledVisibility, StyledVisibilityOff, StyledEyeButton, StyledEyeLabel } from './text-field.styles';\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\n\ninterface iTextField {\n    name: string;\n    id: string;\n    placeholder?: string;\n    required?: boolean;\n    label?: string;\n    type?: 'text' | 'password';\n    isVisible?: boolean;\n    onVisibilityChange?: () => void;\n}\n\n\nconst RecipeTextField = ({\n    name, id, placeholder, type = \"text\", required = false, label, onVisibilityChange, isVisible }: iTextField) => {\n\n    const [field, meta] = useField({ name, id });\n    return (\n        <FieldWrapper>\n            {onVisibilityChange && (\n                <StyledEyeLabel Required={required} htmlFor={id}>\n                    <span>{label}</span>\n                    {\n                        isVisible ? (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"hide content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibilityOff />\n                            </StyledEyeButton>\n                        ) : (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"show content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibility />\n                            </StyledEyeButton>\n                        )\n                    }\n\n                </StyledEyeLabel>\n            )}\n            {!onVisibilityChange && label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledInput\n                id={id}\n                placeholder={placeholder}\n                required={required}\n                {...field}\n                type={type}\n            />\n        </FieldWrapper>\n    );\n}\n\nexport default RecipeTextField;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\ninterface iStyledProps {\n    ison: string;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    margin: 1.5rem 0 1rem 0;\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n`;\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;","import React, { FC } from 'react';\n\nimport { useField } from 'formik';\nimport FieldWrapper from '../field-wrapper/field-wrapper.component';\nimport { StyledFieldWrapper, StyledCheckBox, StyledLabel, CheckBoxIcon } from './checkbox-field.styles';\n\ninterface Props {\n    name: string;\n    required?: boolean;\n    label?: string;\n    id: string;\n}\n\nconst CheckBoxField: FC<Props> = ({ required = false, label, name, id }) => {\n    const [field, meta] = useField({ name, id, type: 'checkbox' });\n    return (\n        <StyledFieldWrapper>\n            {\n                label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)\n            }\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={field.value ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                required={required}\n                id={id}\n                {...field}\n            />\n        </StyledFieldWrapper>\n    )\n}\n\nexport default CheckBoxField;","import styled from 'styled-components';\n\nimport {FormButtons } from './form-button.component';\n\n\ninterface iButtonStyleProps {\n    FormButton: FormButtons\n}\n\nexport const StyledPrimaryButton = styled.button<iButtonStyleProps>`\n    margin: 0 0 1rem 0;\n    width: 100%;\n\n    @media (min-width: 414px) {\n        margin: 0 0 0 0;\n        margin-right: ${props => props.FormButton === FormButtons.Primary ? '1rem' : 0 };\n        width: auto;\n    }\n    font-size: ${props => props.theme.fontSizes.regular};\n    background-color: ${props => props.FormButton === FormButtons.Primary ?\n        props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n    border: 0;\n    padding: 0.5rem 1rem;\n    color: ${props => props.FormButton === FormButtons.Primary ?\n        '#fff' : props.theme.colors.pageForeground1};\n    cursor: pointer;\n    &:hover {\n        background-color: ${props => props.FormButton === FormButtons.Primary ?\n            props.theme.colors.pageHighLight2 : props.theme.colors.pageBorderColor1};\n    }\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        &:hover {\n            background-color: ${props => props.FormButton === FormButtons.Primary ?\n                props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n        }\n    }\n\n`;","import React, { FC, useContext } from 'react';\nimport { iMainNavItem } from '../../../interfaces/nav/nav.interface';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport CloseButton from '../../atoms/close-button/close-button.component';\nimport ThemeSwitcher from '../theme-switcher/theme-switcher.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport {\n    StyledMenuOuter,\n    StyledMenuHeader,\n    StyledNavUl,\n    StyledListItem,\n    StyledNavLink,\n    StyledHome, StyledUsers, StyledMenu, StyledWidget, StyledSetting, StyledAddCircle\n} from './main-menu.styles';\n\ntype Props = {\n    isOpen: boolean;\n    toggleIsOpen: () => void;\n    items: iMainNavItem[];\n}\n\nexport enum Icons {\n    home = 0,\n    users = 1,\n    list = 2,\n    my = 3,\n    add = 4,\n    settings = 5\n}\n\nconst returnIconsByKey = (id: Icons) => {\n    const map = {\n        \"0\": StyledHome,\n        \"1\": StyledUsers,\n        \"2\": StyledMenu,\n        \"3\": StyledWidget,\n        \"4\": StyledAddCircle,\n        \"5\": StyledSetting\n    };\n    return map[id] || null;\n}\n\nconst MainMenu: FC<Props> = ({ isOpen, toggleIsOpen, items }) => {\n    const { user } = useContext(AuthContext);\n\n    const itemsWithIcons = items.map((i, idx) => {\n        return {\n            ...i,\n            icon: returnIconsByKey(i.svgIcon)\n        }\n    });\n\n    return (\n        <StyledMenuOuter isOpen={isOpen}>\n            <div>\n                <StyledMenuHeader>\n                    <NavBrand isOpen={isOpen} toggleClose={toggleIsOpen} />\n                    <CloseButton closeHandler={toggleIsOpen} />\n                </StyledMenuHeader>\n                <StyledNavUl>\n                    {\n                        itemsWithIcons.map((item, idx) => (\n                            <StyledListItem key={`item${idx}`} onClick={() => toggleIsOpen()}>\n                                <StyledNavLink to={\n                                    item.params ? `${item.route}/${user?.userId}` : item.route\n                                }>\n                                    {item.icon !== null && <item.icon />}\n                                    {item.text}\n                                </StyledNavLink>\n                            </StyledListItem>\n                        ))\n                    }\n                </StyledNavUl>\n            </div>\n            <StyledNavUl>\n                <StyledListItem>\n                    <ThemeSwitcher />\n                </StyledListItem>\n            </StyledNavUl>\n        </StyledMenuOuter>\n    );\n}\n\nexport default MainMenu;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n`;\n\nexport const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledPrimaryButton = styled.button`\n    font-size: ${props => props.theme.fontSizes.regular};\n    background-color: ${props => props.theme.colors.navBarBackground};\n    border: 0;\n    padding: 0.5rem 1rem;\n    margin: 0 0 0 0;\n    color: #fff;\n    cursor: pointer;\n    &:hover {\n        background: ${props => props.theme.colors.pageHighLight2}\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 0.5rem 0;\n    cursor: pointer;\n`;\n\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton\n} from './add-recipe-form.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipe } from '../../services/recipes/recipes.services';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: {\n        comment: string;\n        user: string;\n    }[];\n}\n\nconst AddRecipeForm = () => {\n    const { addToast } = useToasts();\n    const { token, user } = useContext(AuthContext);\n    const { recipeItems, setCount, getCategoryTags, addRecipeToList } = useContext(RecipesContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n\n    let navigate = useNavigate();\n    const formValuesInitial = {\n        user_id: user?.userId || '1',\n        user: user ? user.name : 'none',\n        r_name: '',\n        shared: false,\n        rating: 0,\n        cat_id: '',\n        category: '',\n        ingredients: [''],\n        steps: [''],\n        comments: []\n    }\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n    }, [recipeItems, getCategoryTags]);\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n\n                    const catName = catData.find(i => i.id === values.cat_id);\n                    const cat_id = Number(values.cat_id);\n                    const vals = {\n                        ...values,\n                        category: catName?.name || '',\n                        cat_id: cat_id\n                    }\n\n                    addRecipe(vals, token).then((resp) => {\n                        setSubmitting(false);\n                        setCurrentRecipeItems(addRecipeToList(currentRecipeItems, resp));\n                        setCount(currentRecipeItems.length)\n                        addToast(\n                            'Success',\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"r_name\"\n                            label=\"Recipe Name\"\n                            name=\"r_name\"\n                            placeholder=\"Ex: Chocolate Cake\"\n                            required\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"cat_id\"\n                            name=\"cat_id\"\n                            label=\"Category\"\n                            required={true}\n                            defaultOptionText=\"Select Recipe Category\"\n                            optionData={catData}\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"rating\"\n                            name=\"rating\"\n                            label=\"Rating\"\n                            required={true}\n                            defaultOptionText=\"Ex: Four Stars\"\n                            optionData={[\n                                { id: '1', name: 'One Star' },\n                                { id: '2', name: 'Two Stars' },\n                                { id: '3', name: 'Three Stars' },\n                                { id: '4', name: 'Four Stars' }\n                            ]}\n                        />\n\n                        <CheckBoxField\n                            id=\"shared\"\n                            name=\"shared\"\n                            label=\"Share Recipe\"\n                        />\n\n                        <div>\n                            <FieldArray\n                                name=\"ingredients\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.ingredients && values.ingredients.length > 0 ? (\n                                            values.ingredients.map((item, index) => (\n                                                <StyledInputWrapper key={index}>\n                                                    <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                    <FieldArrayItem>\n                                                        <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                        <InputButtonsWrap>\n                                                            <StyledSubtractInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.remove(index)}\n                                                            >\n                                                                -\n                                                            </StyledSubtractInputBtn>\n                                                            <StyledAddInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.insert(index, '')}\n                                                            >\n                                                                +\n                                                            </StyledAddInputBtn>\n                                                        </InputButtonsWrap>\n                                                    </FieldArrayItem>\n                                                </StyledInputWrapper>\n                                            ))\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Ingredients\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"steps\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.steps && values.steps.length > 0 ? (\n                                            values.steps.map((item, index) => (\n                                                <StyledInputWrapper key={index}>\n                                                    <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                    <FieldArrayItem>\n                                                        <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                        <InputButtonsWrap>\n                                                            <StyledSubtractInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.remove(index)}\n                                                            >\n                                                                -\n                                                            </StyledSubtractInputBtn>\n                                                            <StyledAddInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.insert(index, '')}\n                                                            >\n                                                                +\n                                                            </StyledAddInputBtn>\n                                                        </InputButtonsWrap>\n                                                    </FieldArrayItem>\n                                                </StyledInputWrapper>\n                                            ))\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Steps\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"comments\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.comments && values.comments.length > 0 ? (\n                                            values.comments.map((item, index) => (\n                                                <StyledInputWrapper key={index}>\n                                                    <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                    <FieldArrayItem>\n                                                        <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                        <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                        <InputButtonsWrap>\n                                                            <StyledSubtractInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.remove(index)}\n                                                            >\n                                                                -\n                                                            </StyledSubtractInputBtn>\n                                                            <StyledAddInputBtn\n                                                                type=\"button\"\n                                                                onClick={() => arrayHelpers.insert(\n                                                                    index, { user: user?.name, comment: '' }\n                                                                )}\n                                                            >\n                                                                +\n                                                            </StyledAddInputBtn>\n                                                        </InputButtonsWrap>\n                                                    </FieldArrayItem>\n                                                </StyledInputWrapper>\n                                            ))\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push({ user: user?.name, comment: '' })\n                                                }>\n                                                Add comment\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Add Recipe'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                        <FormButton\n                            type=\"button\"\n                            buttonText={'Cancel'}\n                            FormButton={FormButtons.Secondary}\n                            onClick={() => navigate(`/`)}\n                            disabled={false}\n                        />\n                    </Form>\n\n                )}\n            </Formik>\n        </StyledFormWrapper >\n    );\n}\n\nexport default AddRecipeForm;\n","import React from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport AddRecipeForm from \"../../templates/add-recipe-form/add-recipe-form.component\";\n\nconst AddRecipePage = () => (\n    <MainSection>\n        <PageTitle>Add Recipe</PageTitle>\n        <AddRecipeForm />\n    </MainSection>\n);\n\nexport default AddRecipePage;","import styled from 'styled-components';\n\nexport const DetailsTopWrapper = styled.div`\n    position: relative;\n    > h2 {\n        max-width: 60%;\n    }\n`;\n\nexport const MetaInfoTop = styled.div`\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    min-width: 200px;\n    padding: 1rem;\n`;\n\nexport const MetaInfoBottom = styled.div`\n    padding: 1rem;\n    color: ${(props) => props.theme.colors.pageForegroundColor1};\n`;\n\nexport const MetaInfoWrapper = styled.div`\n    @media (min-width: 595px) {\n        position: absolute;\n        top: 0;\n        right: 0;\n    }\n    color: #fff;\n    padding: 0 0 1rem 0;\n`;","import styled from \"styled-components\";\n\nexport const StyledListItem = styled.li`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${(props) => props.theme.colors.pageBackground2};\n`;\n\nexport const UserWrapper = styled.div`\n    display: flex;\n    justify-conent: flex-start;\n    align-items: center;\n`;","import styled from 'styled-components';\n\nexport const StyledAvatar = styled.span`\n    text-transform: capitalize;\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    color: #fff;\n    font-size: 1.3em;\n    padding: 0.5rem;\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledAvatar } from './user-avatar.styles';\n\ninterface Props {\n    name: string;\n}\n\n\nconst UserAvatar: FC<Props> = ({ name }) => (\n    <StyledAvatar>{name.slice(0, 1)}</StyledAvatar>\n);\n\nexport default UserAvatar;","import React, { FC } from \"react\";\n\nimport { StyledListItem, UserWrapper } from \"./comments-list-item.styles\";\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\n\ninterface Props {\n    item: { comment: string, user: string }\n}\n\nconst CommentItem: FC<Props> = ({ item }) => {\n\n    const { user, comment } = item;\n    return (\n        <StyledListItem>\n            <UserWrapper>\n                <UserAvatar name={user} />\n                <div>\n                    <div>{user}</div>\n                    <div>\n                        {comment}\n                    </div>\n                </div>\n            </UserWrapper>\n        </StyledListItem>\n    );\n}\n\nexport default CommentItem;","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n    text-align: right;\n    font-size: 14px;\n    float: right;\n`;","import { iUserItem } from \"../../interfaces/users/users.interface\";\n\nexport const addUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   userList.push(user);\n   return userList\n}","import axios from 'axios';\nimport {iUserItem} from '../../interfaces/users/users.interface'\n\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USERS_ENDPOINT;\n\n\ninterface iGetUsersResp  {\n    users: iUserItem[];\n}\n\n\nexport const getUsers = async () => {\n    try {\n\n        const resp = await axios.get(`${baseURL}${endpoint}`);\n        return resp.data\n    } catch (err) {\n        throw(err)\n    }\n}","import React, { createContext, FC, useState, useEffect } from 'react';\n\nimport USERS_LIST from './users-collection.data.json';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { addUserItem } from './users.utilities';\nimport { getUsers } from '../../services/users/users.service';\n\n\ntype UsersContextType = {\n    userItems: iUserItem[];\n    isLoading: boolean;\n    userCount: number;\n    addUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n}\n\nexport const UsersContext = createContext<UsersContextType>({\n    userItems: [],\n    userCount: 0,\n    isLoading: true,\n    addUserItem: addUserItem\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\n\nconst UsersProvider: FC<Props> = ({ children }) => {\n    const [userItems, setUserItems] = useState<iUserItem[]>([]);\n    const [userCount, setUserCount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        getUsers().then(({ users }) => {\n            if (users) {\n                const sorted = users.sort(\n                    (a: iUserItem, b: iUserItem) => (\n                        a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n                    ));\n                setUserItems(sorted);\n                setUserCount(users.length);\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, [])\n\n    return (<UsersContext.Provider value={{\n        userItems,\n        userCount,\n        isLoading,\n        addUserItem\n    }}>\n        {children}\n    </UsersContext.Provider>)\n}\n\nexport default UsersProvider;","import React, { FC, useContext, useEffect, useState } from 'react';\n\nimport { StyledDiv } from './recipe-content-owner.styles';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\ninterface Props {\n    userId: string;\n    shared: boolean;\n}\n\nconst RecipeContentOwner: FC<Props> = ({ userId, shared }) => {\n    const [user, setUser] = useState<iUserItem | null>(null);\n\n    const { userItems } = useContext(UsersContext);\n    const action = shared ? 'Shared by' : 'Posted by';\n\n    useEffect(() => {\n        const findUser = userItems.find(u => u.id === userId);\n\n        if (findUser) {\n            setUser(findUser);\n        }\n    }, [userItems])\n\n    return (\n        <StyledDiv>\n            <span>{action} {user?.name || 'admin'}</span>\n        </StyledDiv>\n    );\n}\n\nexport default RecipeContentOwner;","import styled from \"styled-components\";\n\nexport const StyledDetailsDiv = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledH4 = styled.h4`\n    font-size: 1.25rem;\n    margin: 0.5em 0;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75em 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground2};\n    margin-bottom: 0.5rem;\n`;\n\nexport const StyledButtonToggle = styled.button`\n    padding: 0;\n    margin: 0 0 1rem 1rem;\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    background-color: transparent;\n    cursor: pointer;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\n\n\n\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useToasts } from 'react-toast-notifications';\n\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { StyledFormWrapper, StyledButtonToggle } from './add-comment.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipeComment } from '../../services/recipes/recipes.services';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n    handleSubmit: (recipe: iRecipe) => void;\n}\n\n\ninterface Values {\n    comment: string;\n    user: string;\n}\n\nconst AddCommentForm: FC<Props> = ({ recipeId, handleSubmit }) => {\n    const { addToast } = useToasts();\n\n    const { token, user } = useContext(AuthContext);\n\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [showForm, setShowForm] = useState(false);\n\n    useEffect(() => {\n        if (user) {\n            setFormValuesInitial({\n                user: user.name,\n                comment: ''\n            })\n        }\n    }, [user, setFormValuesInitial]);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n\n    return (\n        <React.Fragment>\n            <StyledButtonToggle onClick={() => toggleForm()}>Add Comment</StyledButtonToggle>\n            {\n                showForm && (\n                    <StyledFormWrapper>\n                        {\n                            formValuesInitial && (\n                                <Formik\n                                    initialValues={formValuesInitial}\n                                    onSubmit={(\n                                        values: Values,\n                                        { setSubmitting }: FormikHelpers<Values>\n                                    ) => {\n                                        addRecipeComment(values, recipeId || '', token).then((resp) => {\n                                            setSubmitting(false);\n                                            handleSubmit(resp);\n                                            setShowForm(false);\n                                        }).catch((err) => {\n                                            addToast(\n                                                `Error: ${err.message}`,\n                                                {\n                                                    appearance: 'error',\n                                                    autoDismiss: false\n                                                }\n                                            );\n                                        })\n                                    }}\n                                >\n                                    {({ values, resetForm, isValid, dirty }) => (\n                                        <Form>\n\n                                            <RecipeTextField\n                                                id=\"comment\"\n                                                name=\"comment\"\n                                                placeholder=\"Add a comment\"\n                                                required\n                                            />\n\n                                            <FormButton\n                                                type=\"submit\"\n                                                buttonText={'Ok'}\n                                                FormButton={FormButtons.Primary}\n                                                disabled={!dirty || !isValid}\n                                            />\n                                        </Form>\n\n                                    )}\n                                </Formik>\n                            )\n                        }\n                    </StyledFormWrapper >\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nexport default AddCommentForm;\n","import React, { FC, useEffect, useContext, useState } from \"react\";\n\nimport CommentItem from '../../atoms/comments-list-item/comments-list-item.component';\nimport RecipeContentOwner from '../../atoms/recipe-content-owner/recipe-content-owner.component';\nimport { StyledDetailsDiv, StyledH4, StyledListItem, StyledList, StyledHRule } from './recipe-view-details.styles';\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport AddCommentForm from \"../../../templates/add-comment/add-comment.component\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\ninterface Props {\n    recipe?: iRecipe;\n    id?: string;\n}\n\nconst RecipeViewDetails: FC<Props> = ({ id }) => {\n\n    const { recipeItems, editRecipe } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [recipe, setRecipe] = useState<iRecipe | undefined | null>(undefined);\n\n    const onCommentSubmit = (recipe: iRecipe) => {\n        editRecipe(recipeItems, recipe);\n        setRecipe(recipe);\n    }\n\n    useEffect(() => {\n        const tempRecipe = recipeItems.find(r => r._id === id);\n        if (tempRecipe) {\n            setRecipe(tempRecipe);\n        } else {\n            setRecipe(null);\n        }\n    }, [recipeItems])\n\n    if (!recipe) {\n        return (\n            <StyledDetailsDiv>\n                <p>No recipe found</p>\n            </StyledDetailsDiv>\n        )\n    }\n\n    return (\n        <StyledDetailsDiv>\n            <StyledH4>Ingredients</StyledH4>\n            <StyledList>\n                {\n                    recipe.ingredients?.map((item, key) => (\n                        <StyledListItem key={key}>{item}</StyledListItem>\n                    ))\n                }\n            </StyledList>\n            <StyledH4>Steps</StyledH4>\n            <ul>\n                {\n                    recipe.steps?.map((item, key) => (<StyledListItem key={key}>{item}</StyledListItem>))\n                }\n            </ul>\n            <StyledHRule />\n            <ul>\n                {\n                    recipe.comments?.map((item, key) => (\n                        <CommentItem key={key} item={item} />\n                    ))\n                }\n            </ul>\n            <RecipeContentOwner shared={recipe.shared} userId={recipe.user_id} />\n            {\n                user !== null && (\n                    <AddCommentForm recipeId={id} handleSubmit={onCommentSubmit} />\n                )\n            }\n        </StyledDetailsDiv>\n    );\n}\n\nexport default RecipeViewDetails;","import styled from 'styled-components';\nimport { Dialog } from '@material-ui/core';\n\n\nexport const StyledConfirmButton = styled.button`\n    color: #fff;\n    border: 0;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledCancelButton = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledDialog = styled(Dialog)`\n    .MuiPaper-root {\n        border: 1px solid ${props => props.theme.colors.pageBorderColor1};\n        border-radius: 0px;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        color: ${props => props.theme.colors.pageHighLight2}\n    }\n    \n    .MuiDialogContentText-root {\n        \n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n","import React, { FC } from 'react';\n\nimport { DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\n\nimport { StyledDialog, StyledCancelButton, StyledConfirmButton } from './confirm-dialog.styles';\n\ninterface Props {\n    title: string;\n    confirmText: string;\n    open: boolean;\n    handleCancel: () => void;\n    handleConfirm: () => void;\n}\n\nexport const ConfirmDialog: FC<Props> = ({ title, confirmText, handleCancel, handleConfirm, open }) => {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleCancel}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {confirmText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <StyledCancelButton onClick={handleCancel}>No</StyledCancelButton>\n                <StyledConfirmButton onClick={handleConfirm} autoFocus>Yes</StyledConfirmButton>\n            </DialogActions>\n        </StyledDialog>\n    );\n}\n\nexport default ConfirmDialog;\n","import styled from 'styled-components';\nimport { Delete, Edit, Share, Print } from '@material-ui/icons';\n\nexport const StyledTextarea = styled.textarea`\n    width: 1px;\n    height: 1px;\n    margin: 0;\n    visibility: hidden;\n`;\n\nexport const StyledEditIcon = styled(Edit)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledDeleteIcon = styled(Delete)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledShareIcon = styled(Share)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledPrintIcon = styled(Print)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledRecipeActionBar = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`;\n\nexport const StyledButton = styled.button`\n    opacity: 0.5;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    transition: opacity ease-in-out 300ms;\n    cursor: pointer;\n    background-color: transparent;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    margin: 0 1rem 0 0;\n    &:last-child {\n        margin: 0;\n    }\n    &:hover {\n        transition: opacity ease-in-out 300ms;\n        opacity: 1;\n    }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { useToasts } from 'react-toast-notifications';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\nimport { removeRecipe } from '../../../services/recipes/recipes.services';\n\nimport {\n    StyledDeleteIcon,\n    StyledEditIcon,\n    StyledPrintIcon,\n    StyledShareIcon,\n    StyledRecipeActionBar,\n    StyledButton,\n    StyledTextarea\n} from './recipe-action-bar.styles';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\nimport { iUser } from '../../../interfaces/user/user.interface';\n\nconst RecicipeActionBar = () => {\n    let { id } = useParams();\n    let navigate = useNavigate();\n    const { addToast } = useToasts();\n    const { recipeItems, deleteRecipe, setSpinner, setCount } = useContext(RecipesContext);\n    const { token, isLoggedIn, user } = useContext(AuthContext);\n\n    const [recipe, setRecipe] = useState<iRecipe | undefined>(undefined);\n    const [open, setOpen] = useState<boolean>(false);\n    const [copied, setCopied] = useState<boolean>(false);\n    const [value, setValue] = useState<string>('');\n    const [authUser, setAuthUser] = useState<iUser | null>(null);\n    const [isOwner, setIsOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        const recipe = recipeItems.find(r => r._id === id);\n        if (recipe) {\n            setRecipe(recipe);\n            setValue(`localhost:3000/recipes/${recipe._id}`)\n        }\n    }, [recipeItems, id]);\n\n    useEffect(() => {\n        if (recipe && user && recipe.user_id === user.userId) {\n            setIsOwner(true);\n        }\n    }, [user, recipe])\n\n    const handleDelete = () => {\n        setSpinner(true);\n        if (recipe) {\n            removeRecipe(recipe, token).then((resp) => {\n                deleteRecipe(recipeItems, recipe);\n                setCount(recipeItems.length);\n                setSpinner(false);\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                navigate('/');\n\n            }).catch((err) => {\n                setSpinner(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <StyledRecipeActionBar>\n                {\n                    isLoggedIn && isOwner && (\n                        <React.Fragment>\n                            <StyledButton title=\"Delete\" onClick={() => handleClickOpen()}>\n                                <StyledDeleteIcon />\n                            </StyledButton>\n\n                            <StyledButton title=\"Edit\" onClick={() => navigate(`/edit-recipe/${id}`)}>\n                                <StyledEditIcon />\n                            </StyledButton>\n                        </React.Fragment>\n                    )\n                }\n\n                <CopyToClipboard\n                    onCopy={() => setCopied(true)}\n                    text={value}\n                >\n                    <StyledButton title={copied ? `copied url` : 'Share'}>\n                        <StyledShareIcon />\n                    </StyledButton>\n                </CopyToClipboard>\n\n                <StyledButton title=\"Print\" onClick={() => window.print()}>\n                    <StyledPrintIcon />\n                </StyledButton>\n            </StyledRecipeActionBar>\n            <ConfirmDialog\n                open={open}\n                title={\"Are you sure?\"}\n                confirmText={`Delete ${recipe?.r_name} recipe?`}\n                handleCancel={handleClose}\n                handleConfirm={handleDelete}\n            />\n            <StyledTextarea\n                value={value}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    setCopied(false);\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default RecicipeActionBar;\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { DetailsTopWrapper, MetaInfoWrapper, MetaInfoBottom, MetaInfoTop } from './view-recipe.styles';\nimport RecipeViewDetails from '../../components/molecules/recipe-view-details/recipe-view-details.component';\nimport RecipeRating from '../../components/atoms/rating/rating.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport RecipeActionBar from '../../components/atoms/recipe-action-bar/recipe-action-bar.component';\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { SpinnerOuter } from \"../../components/molecules/spinner/spinner.styles\";\n\nconst RecipeDetailPage = () => {\n    const { id } = useParams();\n\n    const { recipeItems, isLoading, setSpinner } = useContext(RecipesContext);\n    const recipe = recipeItems.find(r => r._id === id);\n\n    return (\n        <MainSection>\n            {\n                isLoading && (\n                    <React.Fragment>\n                        <PageTitle>Recipe Details</PageTitle>\n                        <SpinnerOuter>\n                            <Spinner />\n                        </SpinnerOuter>\n                    </React.Fragment>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <DetailsTopWrapper>\n                            <PageTitle>{recipe?.r_name} </PageTitle>\n                            <MetaInfoWrapper>\n                                <MetaInfoTop>\n                                    <RecipeRating rating={recipe?.rating} />\n                                    <span>Cateory: {recipe?.category}</span>\n                                </MetaInfoTop>\n                                <MetaInfoBottom>\n                                    <RecipeActionBar />\n                                </MetaInfoBottom>\n                            </MetaInfoWrapper>\n                        </DetailsTopWrapper>\n                        <RecipeViewDetails recipe={recipe} id={id} />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipeDetailPage;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n`;\n\nexport const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 0.5rem 0;\n    cursor: pointer;\n`;\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton\n} from './edit-recipe-form.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { updateRecipe } from '../../services/recipes/recipes.services';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    user: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: {\n        comment: string;\n        user: string;\n    }[];\n}\n\nconst EditRecipeForm: FC<Props> = ({ recipeId }) => {\n    const { addToast } = useToasts();\n    const { recipeItems, getCategoryTags, editRecipe } = useContext(RecipesContext);\n    const { token } = useContext(AuthContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n\n        const foundRecipe = recipeItems.find(r => r._id && r._id === recipeId);\n        if (foundRecipe) {\n\n            setFormValuesInitial({\n                _id: foundRecipe._id || '',\n                user_id: foundRecipe.user_id,\n                user: foundRecipe.user_id,\n                r_name: foundRecipe.r_name,\n                shared: foundRecipe.shared,\n                rating: foundRecipe.rating,\n                cat_id: foundRecipe.cat_id.toString(),\n                category: foundRecipe.category,\n                ingredients: foundRecipe.ingredients || [],\n                steps: foundRecipe.steps || [],\n                comments: foundRecipe.comments || []\n            })\n        }\n\n    }, [recipeItems, getCategoryTags, recipeId]);\n\n    return (\n        <StyledFormWrapper>\n            {\n                formValuesInitial && (\n                    <Formik\n                        initialValues={formValuesInitial}\n                        onSubmit={(\n                            values: Values,\n                            { setSubmitting }: FormikHelpers<Values>\n                        ) => {\n\n                            const catName = catData.find(i => i.id === values.cat_id);\n                            const cat_id = Number(values.cat_id);\n                            const vals = {\n                                ...values,\n                                category: catName?.name || '',\n                                cat_id: cat_id\n                            }\n\n                            updateRecipe(vals, token).then((resp) => {\n                                addToast(\n                                    'Success',\n                                    {\n                                        appearance: 'success',\n                                        autoDismiss: true\n                                    }\n                                );\n\n                                setCurrentRecipeItems(editRecipe(currentRecipeItems, resp));\n                                setSubmitting(false);\n                                navigate('/')\n                            }).catch((err) => {\n                                addToast(\n                                    `Error: ${err.message}`,\n                                    {\n                                        appearance: 'error',\n                                        autoDismiss: false\n                                    }\n                                );\n                            })\n                        }}\n                    >\n                        {({ values, resetForm, isValid, dirty }) => (\n                            <Form>\n\n                                <RecipeTextField\n                                    id=\"r_name\"\n                                    label=\"Recipe Name\"\n                                    name=\"r_name\"\n                                    placeholder=\"Ex: Chocolate Cake\"\n                                    required\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"cat_id\"\n                                    name=\"cat_id\"\n                                    required={true}\n                                    label=\"Category\"\n                                    defaultOptionText=\"Select Recipe Category\"\n                                    optionData={catData}\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"rating\"\n                                    name=\"rating\"\n                                    required={true}\n                                    label=\"Rating\"\n                                    defaultOptionText=\"Ex: Four Stars\"\n                                    optionData={[\n                                        { id: '1', name: 'One Star' },\n                                        { id: '2', name: 'Two Stars' },\n                                        { id: '3', name: 'Three Stars' },\n                                        { id: '4', name: 'Four Stars' }\n                                    ]}\n                                />\n\n                                <CheckBoxField\n                                    id=\"shared\"\n                                    name=\"shared\"\n                                    label=\"Share Recipe\"\n                                />\n\n                                <div>\n                                    <FieldArray\n                                        name=\"ingredients\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.ingredients && values.ingredients.length > 0 ? (\n                                                    values.ingredients.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, '')}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Ingredients\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"steps\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.steps && values.steps.length > 0 ? (\n                                                    values.steps.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, '')}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Steps\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"comments\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.comments && values.comments.length > 0 ? (\n                                                    values.comments.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                <StyledInput required name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, { user: 'John', comment: '' })}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push({ user: 'John', comment: '' })}>\n                                                        Add comment\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <StyledHRule />\n                                <FormButton\n                                    type=\"submit\"\n                                    buttonText={'Update Recipe'}\n                                    FormButton={FormButtons.Primary}\n                                    disabled={!dirty || !isValid}\n                                />\n                                <FormButton\n                                    type=\"button\"\n                                    buttonText={'Cancel'}\n                                    FormButton={FormButtons.Secondary}\n                                    onClick={() => navigate(`/recipes/${values._id}`)}\n                                />\n                            </Form>\n\n                        )}\n                    </Formik>\n                )\n            }\n        </StyledFormWrapper >\n    );\n}\n\nexport default EditRecipeForm;\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport Spinner from '../../components/molecules/spinner/spinner.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { SpinnerOuter } from '../../components/molecules/spinner/spinner.styles';\nimport EditRecipeForm from '../../templates/edit-recipe-form/edit-recipe-form.component';\n\n\nconst EditRecipePage = () => {\n    const { id } = useParams();\n\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <PageTitle>Edit Recipe</PageTitle>\n            {\n                isLoading && <SpinnerOuter><Spinner /></SpinnerOuter>\n            }\n            {\n                !isLoading && <EditRecipeForm recipeId={id}></EditRecipeForm>\n            }\n        </MainSection>\n    );\n}\n\nexport default EditRecipePage;","import styled from 'styled-components';\n\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 75vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\nimport { SpinnerWrapper } from './recipes-by-category.styles';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst RecipesByCategory = () => {\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [filtered, setFiltered] = useState<iRecipe[]>([]);\n    const [catName, setCatName] = useState<string>('');\n    const { cat_id } = useParams();\n    const param_id = cat_id ? parseInt(cat_id) : -1;\n\n    useEffect(() => {\n        if (!isLoading && param_id) {\n            const filterList: iRecipe[] = recipeItems.filter((r) => r.cat_id === param_id && (r.shared || r.user_id === user?.userId));\n\n            if (filterList.length > 0) {\n                setFiltered(filterList);\n                setCatName(filterList[0].category);\n            }\n        }\n    }, [recipeItems, isLoading, param_id]);\n\n    return (\n        <MainSection>\n            <PageTitle>{catName}</PageTitle>\n            <RecipesCategoryCardList recipes={filtered} />\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default RecipesByCategory;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\n\ntype iPost = {\n    email: string;\n    password: string;\n}\n\ntype iSignUp = {\n    name: string;\n    password: string;\n    email: string;\n}\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USER_LOGIN;\nconst signupEndpoint = process.env.REACT_APP_USER_SIGNIN;\n\nexport const logInUser = async ({email, password}: iPost) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${endpoint}`, {email, password});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const signUpUser = async ({name, email, password}: iSignUp) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${signupEndpoint}`, {email, password, name});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}","import react, { useContext } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-in-form.styles';\nimport { logInUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n}\n\nconst SignInForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext)\n\n    const formValuesInitial = {\n        email: '',\n        password: ''\n    }\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password } = values;\n                    logInUser({ email, password }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign In'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignInForm;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledSignUpContainer = styled.p`\n    margin: 1rem 0;\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignInForm from '../../templates/sign-in-form/sign-in-form.component';\nimport { StyledNavLink, StyledSignUpContainer } from './sign-in-sign-up.styles';\n\nconst SignInSignUpPage = () => {\n    return (\n        <MainSection>\n            <PageTitle>Sign in</PageTitle>\n            <SignInForm />\n            <StyledSignUpContainer>\n                New to recipes?&nbsp;\n                <StyledNavLink to=\"/sign-up\">Sign up</StyledNavLink>\n            </StyledSignUpContainer>\n        </MainSection>\n    )\n}\n\nexport default SignInSignUpPage;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import React, { useContext, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-up-form.styles';\nimport { signUpUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n    name: string;\n}\n\nconst SignUpForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { addUserItem, userItems } = useContext(UsersContext);\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n    const [isVisible, setIsVisable] = useState(false);\n\n    const formValuesInitial = {\n        email: '',\n        password: '',\n        name: ''\n    }\n\n    const onVisibilityChange = () => {\n        setIsVisable(!isVisible);\n    };\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password, name } = values;\n                    signUpUser({ email, password, name }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n                        const userToAdd: iUserItem = {\n                            _id: userId,\n                            id: userId,\n                            email: email,\n                            name: name\n                        };\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        addUserItem(userToAdd, userItems);\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Ex: John\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type={isVisible ? 'text' : 'password'}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            isVisible={isVisible}\n                            onVisibilityChange={() => onVisibilityChange()}\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign Up'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignUpForm;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component'\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignUpForm from '../../templates/sign-up-form/sign-up-form.component';\n\nconst SignUpPage = () => (\n    <MainSection>\n        <PageTitle>Sign Up</PageTitle>\n        <SignUpForm />\n    </MainSection>\n);\n\nexport default SignUpPage;","import styled from 'styled-components';\n\nimport {NavLink} from 'react-router-dom';\n\nexport const StyledUserCard = styled.div`\n    display: flex;\n    padding: 1rem;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNoSharedRecipes = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n","import React, { FC } from 'react';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\nimport { StyledUserCard, StyledNavLink, StyledNoSharedRecipes } from './user-card.styles';\n\ninterface Props {\n    name: string;\n    id: string;\n    recipes: string[];\n    isContentOwner: boolean;\n}\n\n\nconst UserCard: FC<Props> = ({ name, id, recipes, isContentOwner }) => (\n    <li>\n        <StyledUserCard>\n            <UserAvatar name={name} />\n            <div>\n                <div>{name}</div>\n                {\n                    recipes.length === 0 && (<StyledNoSharedRecipes>no recipes</StyledNoSharedRecipes>)\n                }\n                {\n                    recipes.length !== 0 && !isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>shared {recipes.length} recipes</span>\n                                ) : (\n                                    <span>shared {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n                {\n                    recipes.length !== 0 && isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>view {recipes.length} recipes </span>\n                                ) : (\n                                    <span>view {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n            </div>\n        </StyledUserCard>\n    </li>\n);\n\nexport default UserCard;\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const StyledUserCardList = styled.ul`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n    color: ${props => props.theme.colors.pageForeground1};\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\nimport UserCard from '../user-card/user-card.component';\nimport EmptyMesssage from '../../atoms/empty-message/empty-message.component';\nimport { StyledUserCardList } from './users-list.styles';\n\nconst UsersList = () => {\n    const { recipeItems } = useContext(RecipesContext);\n    const { userItems } = useContext(UsersContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [users, setUsers] = useState<iUserItem[]>([]);\n\n    useEffect(() => {\n        const usersWithRecipe = userItems.map(user => {\n            let recipes: string[] = [];\n            const isAuthUser = () => authUser && authUser.userId === user.id;\n            if (isAuthUser()) {\n                recipes = recipeItems.filter(\n                    r => r.user_id === user.id\n                ).map(r => r.r_name);\n            } else {\n                recipes = recipeItems.filter(\n                    r => r.shared === true && r.user_id === user.id\n                ).map(r => r.r_name);\n            }\n\n            return {\n                ...user,\n                recipes: recipes || []\n            }\n        })\n        setUsers(usersWithRecipe);\n    }, [userItems, authUser]);\n\n    return (\n        <React.Fragment>\n            {\n                users.length !== 0 ? (\n                    <StyledUserCardList>\n                        {\n                            users.map(({ name, id, recipes }, idx) => (\n                                <UserCard\n                                    key={idx}\n                                    name={name}\n                                    id={id}\n                                    isContentOwner={authUser !== null && authUser.userId === id}\n                                    recipes={recipes || []}\n                                />\n                            ))\n                        }\n                    </StyledUserCardList >\n                ) : (\n                    <EmptyMesssage msg={'There are no users.'} />\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default UsersList;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport UsersList from '../../components/molecules/users-list/users-list.component';\n\nconst UsersPage = () => (\n    <MainSection>\n        <PageTitle>Users </PageTitle>\n        <UsersList />\n    </MainSection>\n);\n\nexport default UsersPage;","import styled from 'styled-components';\n\nexport const StyledOuterDiv = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  line-height: 1.5em;\n  background-color: ${(props) => props.theme.colors.pageBackground1};\n  max-width: 100vw;\n  min-height: 100vh;\n  border-bottom: 1rem solid ${(props) => props.theme.colors.navBarBackground};\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport Restaurant from '@material-ui/icons/Restaurant';\n\nexport const StyledNavBrand = styled(Restaurant)`\n    font-size: 2.0rem !important;\n    margin-right: 0.5rem;\n    margin-left: 0.5rem;\n    padding: 0.25rem;\n    color: #fff;\n    flex: 0 0 1;\n    background-color: ${props => props.theme.colors.pageHighLight2};\n    border: 1px solid rgba(255,255,255, 0.75);\n    border-radius: 50%;\n`;\n\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledNavBrand } from './nav-brand.styles';\n\ninterface Props {\n    toggleClose: () => void;\n    isOpen: boolean;\n}\n\nconst NavBrand: FC<Props> = ({ toggleClose, isOpen }) => {\n    const handleClose = () => {\n        if (isOpen) {\n            toggleClose();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Link onClick={() => handleClose()} to='/'>\n                <StyledNavBrand />\n            </Link>\n        </React.Fragment>\n    )\n}\n\n\nexport default NavBrand;","import styled from 'styled-components';\n\nexport const StyledRightItemsWrapper = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledRightListItem = styled.li`\n    margin: 0;\n    > a {\n        color: #fff;\n        text-decoration: none;\n    }\n`;","import styled from 'styled-components';\n\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledBackdrop = styled.div<iStyledMenuOuter>`\n    background-color: rgba(0, 0, 0, 0.2);\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 19;\n    display: ${props => props.isOpen ? 'block' : 'none'};\n`;","import React, { FC } from 'react';\n\nimport { StyledBackdrop } from './backdrop.styles'\n\ntype Props = {\n    isOpen: boolean;\n    toggleClose: () => void;\n}\n\nconst Backdrop: FC<Props> = ({ isOpen, toggleClose }) => (\n    <StyledBackdrop isOpen={isOpen} onClick={() => toggleClose()} />\n)\n\nexport default Backdrop;","import styled from 'styled-components';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\ninterface iDropdownStyles {\n    isOpen: boolean;\n}\n\nexport const StyledAccountIcon = styled(AccountCircle)`\n    color: #fff;\n    font-size: 2rem !important;\n    margin-right: 0.25rem;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-size: inherit;\n    font-family: inherit;\n    color: #fff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledDropdownContainer = styled.div<iDropdownStyles>`\n    position: absolute;\n    bottom: -76px;\n    width: 140px;\n    height: 65px;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n    right: 0;\n    z-index: 21;\n    box-sizing: border-box;\n    padding: 0.5rem 1.5rem;\n    display: ${props => props.isOpen ? 'flex': 'none'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledAnchor = styled.a`\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledDropDownWrapper = styled.div`\n    display: flex;\n    position: relative;\n`;","import React, { useContext, useState } from 'react';\n\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport Backdrop from '../../atoms/backdrop/backdrop.component';\nimport {\n    StyledButton,\n    StyledAccountIcon,\n    StyledDropDownWrapper,\n    StyledDropdownContainer,\n    StyledAnchor\n} from './sign-out.styles';\n\n\nconst SignOutButton = () => {\n    const { setLogin, setUserToken, setUserObject, user, setUserAuth } = useContext(AuthContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    const handleSignOut = () => {\n        if (user) {\n            const expires = new Date(new Date().getTime());\n            setUserAuth(user, Number(expires));\n            setUserObject(null);\n        }\n        setLogin(false);\n        setUserToken(null);\n    };\n\n    const toggleExpanded = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <StyledDropDownWrapper>\n                <StyledButton onClick={() => toggleExpanded()}>\n                    <StyledAccountIcon />\n                    <span>{user?.name}</span>\n                </StyledButton>\n                <StyledDropdownContainer isOpen={isOpen}>\n                    <StyledAnchor onClick={() => handleSignOut()}>Sign out</StyledAnchor>\n                </StyledDropdownContainer>\n                <Backdrop isOpen={isOpen} toggleClose={() => toggleExpanded()} />\n            </StyledDropDownWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default SignOutButton;","import React, { FC } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { StyledRightItemsWrapper, StyledRightListItem } from './sign-in-out.styles';\nimport SignOutButton from \"../../atoms/sign-out/sign-out.component\";\n\ninterface Props {\n    isLoggedIn: boolean;\n}\n\nconst SignInSignOut: FC<Props> = ({ isLoggedIn }) => (\n    <StyledRightItemsWrapper>\n        <StyledRightListItem>\n            {\n                isLoggedIn ?\n                    (\n                        <SignOutButton />\n                    )\n                    :\n                    (\n                        <NavLink to=\"/sign-in\">sign in</NavLink>\n                    )\n            }\n        </StyledRightListItem>\n    </StyledRightItemsWrapper>\n)\n\nexport default SignInSignOut;","import styled from 'styled-components';\n\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledMenu = styled(Menu)`\n    font-size: 2.4rem !important;\n    color: #fff;\n    cursor: pointer;\n    border: 1px solid rgba(255,255,255, 0.1);\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n`","import React, { FC } from 'react';\n\nimport { StyledButton, StyledMenu } from './menu-toggle.styles';\n\ninterface Props {\n    toggleHandler: () => void;\n}\n\n\nconst MenuToggle: FC<Props> = ({ toggleHandler }) => {\n    return (\n        <StyledButton onClick={() => toggleHandler()}>\n            <StyledMenu />\n        </StyledButton>\n    )\n}\n\nexport default MenuToggle;\n\n","import styled from 'styled-components';\nimport Close from '@material-ui/icons/Close'\n\n\nexport const StyledClose = styled(Close)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    font-size: 2rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n`;","import React, { FC } from 'react';\n\nimport { StyledClose, StyledButton } from './close-button.styles';\n\n\ninterface Props {\n    closeHandler: () => void;\n}\n\n\nconst CloseButton: FC<Props> = ({ closeHandler }) => (\n    <StyledButton title=\"close\" type=\"button\" onClick={() => closeHandler()}>\n        <StyledClose />\n    </StyledButton>\n)\n\nexport default CloseButton;","import styled from 'styled-components';\n\nimport { DarkMode, LightMode } from '@mui/icons-material';\n\ninterface iButtonProps {\n    Settings: boolean;\n} \n\nexport const StyledThemeButton = styled.button<iButtonProps>`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: inherit;\n    min-width: 100%;\n    padding: 1.5rem;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    ${props => props.Settings === true && `\n        background-color: ${props.theme.colors.navBarBackground};\n        color: #fff;\n        justify-content: center;\n        margin-top: 1.5rem;\n        padding: 0.75rem 1.5rem;\n        font-size: ${props.theme.fontSizes.smallPlus};\n        > span {\n            margin-left: -0.25rem;\n        }\n    `}\n`;\n\nexport const StyledLightModeIcon = styled(LightMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;\n\nexport const StyledDarkModeIcon = styled(DarkMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;","import React, { useContext, FC } from 'react';\nimport { Theme, ThemeContext } from \"../../../providers/theme/theme.provider\";\nimport { StyledThemeButton, StyledDarkModeIcon, StyledLightModeIcon } from './theme-switcher.styles';\n\n\ninterface Props {\n    settingsPresentation?: boolean;\n}\n\nconst ThemeSwitcher: FC<Props> = ({ settingsPresentation = false }) => {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const handleTheme = () => {\n        if (theme === Theme.Dark) {\n            setTheme(Theme.Light);\n        } else {\n            setTheme(Theme.Dark);\n        }\n    };\n\n    return (\n        <StyledThemeButton Settings={settingsPresentation}\n            title={\n                theme === Theme.Dark ?\n                    'Switch to Light Theme'\n                    :\n                    'Switch to Dark Theme'\n            }\n            onClick={() => handleTheme()}\n        >\n            {\n                theme === Theme.Dark ?\n                    (<StyledLightModeIcon />)\n                    :\n                    (<StyledDarkModeIcon />)\n            }\n            <span>theme</span>\n        </StyledThemeButton>\n    )\n}\n\nexport default ThemeSwitcher;","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\nimport {Home, PeopleAlt, MenuBook, Widgets, AddCircle, Settings} from '@material-ui/icons';\nimport { getThemeProps } from '@material-ui/styles';\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n    margin-right: 1rem;\n`\n\nexport const StyledHome = styled(Home)`\n    ${props => common(props)}\n`;\n\nexport const StyledUsers = styled(PeopleAlt)`\n    ${props => common(props)}\n`;\n\nexport const StyledMenu = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledWidget = styled(Widgets)`\n    ${props => common(props)}\n`;\n\nexport const StyledAddCircle = styled(AddCircle)`\n    ${props => common(props)}\n`;\n\nexport const StyledSetting = styled(Settings)`\n    ${props => common(props)}\n`;\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    display: flex;\n    align-items: center;\n    font-size: inherit;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSizes.smallPlus};\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100vh;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\n","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledNavBrandWrap = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    font-size: 1.5rem;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: #fff;\n    }\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100vh;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\nexport const StyledNavBar = styled.div`\n    height: 55px;\n    max-width: 100vw;\n    background-color: ${(props) => props.theme.colors.navBarBackground};\n    margin-bottom: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1.5rem;\n`;","\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport NAV_DATA from './primary-nav.data.json';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport SignInSignOut from \"../sign-in-out/sign-in-out.component\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport Backdrop from \"../../atoms/backdrop/backdrop.component\";\nimport MenuToggle from \"../../atoms/menu-toggle/menu-toggle.component\";\nimport MainMenu from \"../main-menu/main-menu.component\";\nimport { iMainNavItem } from \"../../../interfaces/nav/nav.interface\";\nimport { StyledNavBrandWrap, StyledNavBar } from './primary.nav.styles';\n\nconst PrimaryNav = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [mainNavItems, setMainNavItems] = useState<iMainNavItem[]>(NAV_DATA);\n    const { isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n\n    const handleIsOpen = () => {\n        setIsOpen(!isOpen);\n        if (isLoggedIn) {\n            expireAuth();\n            if (getUserAuth() === null) {\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setMainNavItems(mainNavItems.filter(item => item.auth === false));\n        } else {\n            setMainNavItems(NAV_DATA);\n        }\n    }, [isLoggedIn])\n\n    return (\n        <StyledNavBar>\n            <StyledNavBrandWrap>\n                <MenuToggle toggleHandler={handleIsOpen} />\n                <NavBrand isOpen={isOpen} toggleClose={handleIsOpen} />\n            </StyledNavBrandWrap>\n            <MainMenu isOpen={isOpen} toggleIsOpen={handleIsOpen} items={mainNavItems} />\n            <Backdrop isOpen={isOpen} toggleClose={() => handleIsOpen()} />\n            <SignInSignOut isLoggedIn={isLoggedIn} />\n        </StyledNavBar>\n    );\n}\n\nexport default PrimaryNav;","import React, { useContext, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { EmptyMesssage } from '../../components/atoms/empty-message/empty-message.component';\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\n\nconst UserRecipesPage = () => {\n    const { id } = useParams();\n    const { userItems } = useContext(UsersContext);\n    const { recipeItems } = useContext(RecipesContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [user, setUser] = useState<iUserItem | null>(null);\n    const [usersRecipes, setUsersRecipes] = useState<iRecipe[]>([]);\n    const [isContentOwner, setIsContentOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (authUser && authUser.userId === id) {\n            setIsContentOwner(true);\n        }\n    }, [authUser, id]);\n\n    useEffect(() => {\n        const tempUser = userItems.filter(u => u.id === id);\n        if (tempUser) {\n            setUser(tempUser[0]);\n        }\n    }, [userItems, id])\n\n    useEffect(() => {\n        if (user !== null && !isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id && r.shared))\n        } else if (user !== null && isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id))\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <PageTitle>\n                {\n                    user && isContentOwner ? (\n                        <span>{`${user.name} recipe${usersRecipes.length !== 1 ? 's' : ''} (${usersRecipes.length})`}</span>\n                    ) : (\n                        <span>{`${user?.name} shared${usersRecipes.length} recipe${usersRecipes.length !== 1 ? 's' : ''}`}</span>\n                    )\n                }\n            </PageTitle>\n            {\n                usersRecipes.length !== 0 ? (\n                    <RecipesCategoryCardList recipes={usersRecipes} />\n                ) : (\n                    <EmptyMesssage msg=\"There are no recipes.\" />\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default UserRecipesPage;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n       ${props => props.Required && \"content: '*';\"}\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.select`\n\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n`;","import React, { FC, ChangeEvent } from 'react';\n\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledLabel, StyledSelect } from './select-option-plain.styles';\n\nexport interface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    id: string;\n    name: string;\n    value: string;\n    handleChange: (evt: ChangeEvent<HTMLSelectElement>) => void;\n    optionData: iKeyValuePair[]\n    labelText?: string;\n}\n\nconst SelectOptionPlain: FC<Props> = ({ id, name, value, handleChange, optionData, labelText }) => (\n    <FieldWrapper>\n        {\n            labelText && (<StyledLabel htmlFor={id} Required={false}>{labelText}</StyledLabel>)\n        }\n        <StyledSelect id={id} name={name} value={value} onChange={evt => handleChange(evt)}>\n            {\n                optionData.map((o, idx) => (\n                    <option key={idx} value={o.id}>{o.name}</option>\n                ))\n            }\n        </StyledSelect>\n\n    </FieldWrapper>\n);\n\nexport default SelectOptionPlain;","import React, { useContext, useEffect, useState } from 'react';\nimport { Theme, ThemeContext } from '../../../providers/theme/theme.provider';\nimport SelectOptionPlain, { iKeyValuePair } from '../../atoms/select-option-plain/select-option-plain.component';\nimport { StyledWrapDiv, StyledFormWrapper } from './theme-palette-switcher.styles';\n\n\nconst ThemePaletteSwitcher = () => {\n    const {\n        theme,\n        setPaletteDark,\n        setPaletteLight,\n        paletteItems,\n        currentDark,\n        currentLight,\n        setCurrentDark,\n        setCurrentLight\n    } = useContext(ThemeContext);\n    const [selectValDark, setSelectValDark] = useState(currentDark);\n    const [selectValLight, setSelectValLight] = useState(currentLight);\n    const [themeColors, setThemeColors] = useState<iKeyValuePair[]>([]);\n\n    const handleChangeLight = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setPaletteLight(paletteItems[val])\n        setCurrentLight(val);\n    };\n\n    const handleChangeDark = (evt: any) => {\n        const val = evt.target.value;\n        setPaletteDark(paletteItems[val])\n        setCurrentDark(val);\n    };\n\n    useEffect(() => {\n        const temp: iKeyValuePair[] = Object.keys(paletteItems).map(\n            item => {\n                const name = item.split(/(?=[A-Z])/).join(' ').toLowerCase();\n\n                return {\n                    name: name,\n                    id: item\n                }\n            }\n        ).sort((a: iKeyValuePair, b: iKeyValuePair) => (\n            a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n        ));\n\n        setThemeColors(temp)\n    }, [paletteItems]);\n\n    useEffect(() => {\n        setSelectValLight(currentLight);\n        setSelectValDark(currentDark);\n    }, [currentDark, currentLight]);\n\n    return (\n        <React.Fragment>\n\n            <SelectOptionPlain\n                id=\"dark\"\n                name=\"dark\"\n                value={selectValDark}\n                handleChange={handleChangeDark}\n                optionData={themeColors}\n                labelText=\"Dark Theme Palette\"\n            />\n\n            <SelectOptionPlain\n                id=\"light\"\n                name=\"light\"\n                value={selectValLight}\n                handleChange={handleChangeLight}\n                optionData={themeColors}\n                labelText=\"Light Theme Palette\"\n            />\n\n        </React.Fragment>\n    );\n\n}\n\nexport default ThemePaletteSwitcher;","import React from 'react';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport ThemePaletteSwitcher from '../../components/molecules/theme-palette-switcher/theme-palette-switcher.component';\nimport ThemeSwitcher from '../../components/molecules/theme-switcher/theme-switcher.component';\nimport { StyledFormWrapper } from '../../templates/add-recipe-form/add-recipe-form.styles';\nconst SettingsPage = () => (\n    <MainSection>\n        <PageTitle>Settings</PageTitle>\n        <StyledFormWrapper>\n            <ThemePaletteSwitcher />\n            <ThemeSwitcher settingsPresentation={true} />\n        </StyledFormWrapper>\n    </MainSection>\n);\n\nexport default SettingsPage;","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/home/home.component';\nimport RecipesPage from './pages/recipes/recipes.component';\nimport AddRecipePage from './pages/add-recipe/add-recipe.component';\nimport RecipeDetailPage from './pages/view-recipe/view-recipe.component';\nimport EditRecipePage from './pages/edit-recipe/edit-recipe.component';\nimport RecipesByCategory from './pages/recipes-by-category/recipes-by-category.component';\nimport SignInSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport SignUpPage from './pages/sign-up/sign-up.component';\nimport UsersPage from './pages/users/users.component';\nimport { StyledOuterDiv } from './App.styles';\nimport PrimaryNav from './components/molecules/primary-nav/primary.nav.component';\nimport UserRecipesPage from './pages/user-recipes/user-recipes.component';\nimport SettingsPage from './pages/setting/settings-page.component';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <StyledOuterDiv>\n        <PrimaryNav />\n        <Routes>\n          <Route path='/' element={<HomePage />} />\n          <Route path='/settings' element={<SettingsPage />} />\n          <Route path='/add-recipe' element={<AddRecipePage />} />\n          <Route path='/users' element={<UsersPage />} />\n          <Route path='/user-recipes/:id' element={<UserRecipesPage />} />\n          <Route path='/recipes' element={<RecipesPage />} />\n          <Route path='/sign-in' element={<SignInSignUpPage />} />\n          <Route path='/sign-up' element={<SignUpPage />} />\n          <Route path='/recipes/:id' element={<RecipeDetailPage />} />\n          <Route path='/edit-recipe/:id' element={<EditRecipePage />} />\n          <Route path='/recipes/category/:cat_id' element={<RecipesByCategory />} />\n          <Route path='*' element={<Navigate to=\"/\" />} />\n        </Routes>\n      </StyledOuterDiv>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\nimport {Close} from '@material-ui/icons';\n\ninterface iStyledToast {\n    Appearance: string;\n}\n\nexport const StyledCloseIcon = styled(Close)`\ncursor: pointer;\nfont-size: 1rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #fff;\n    position: absolute;\n    top: 0.1rem;\n    right: 0.1rem;\n`;\n\nexport const StyledToast = styled.div<iStyledToast>`\n    background: ${props => props.Appearance === 'success' ?\n        props.theme.colors.pageToastSuccess :\n        props.theme.colors.pageToastError};\n    position: fixed;\n    top: 55px;\n    left: 45%;\n    left: ${props => props.Appearance === 'success' ?\n    '45%' : 'calc(50% - 275px/2)'};\n    padding: 0.75rem 2.5rem;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 400;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${props => props.Appearance === 'success' ?\n    'auto' : '275px'};\n`;\n","import React, { FC } from 'react';\nimport { ToastProps } from 'react-toast-notifications';\nimport { StyledToast, StyledButton, StyledCloseIcon } from './toasts-styles'\n\n\n\n\n\nconst CustomToasts: FC<ToastProps> = ({ children, appearance, onDismiss, ...props }) => (\n    <StyledToast Appearance={appearance}>\n        <div>{children}</div>\n        <StyledButton onClick={(id) => onDismiss()}>\n            <StyledCloseIcon />\n        </StyledButton>\n    </StyledToast>\n);\n\nexport default CustomToasts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MyTheme from './providers/theme/theme.provider';\nimport RecipesProvider from './providers/recipes/recipes.provider';\nimport { ToastProvider } from 'react-toast-notifications';\nimport CustomToast from './components/molecules/toasts/toasts.component';\nimport AuthProvider from './providers/auth/auth.provider';\nimport UsersProvider from './providers/users/users.provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <UsersProvider>\n        <RecipesProvider>\n          <MyTheme>\n            <ToastProvider components={{ Toast: CustomToast }}>\n              <BrowserRouter>\n                <App />\n              </BrowserRouter>\n            </ToastProvider>\n          </MyTheme>\n        </RecipesProvider>\n      </UsersProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}