{"version":3,"sources":["providers/theme/theme.provider.tsx","pages/home/home.styles.ts","components/molecules/category-tags/category-tabs.styles.ts","providers/recipes/recipes.utils.ts","providers/auth/auth.utilities.ts","providers/auth/auth.provider.tsx","services/recipes/recipes.services.ts","providers/recipes/recipes.provider.tsx","components/molecules/category-tags/category-tags.component.tsx","components/atoms/main-section/main-section.styles.ts","components/atoms/main-section/main-section.component.tsx","components/molecules/featured-recipes/featured-recipes.styles.ts","components/atoms/rating/rating.styles.ts","components/atoms/rating/rating.component.tsx","providers/theme/themes.ts","components/atoms/bulk-opperation-controls/bulk-opperation-controls.component.tsx","components/atoms/checkbox-plain/checkbox-plain.styles.ts","components/atoms/checkbox-plain/checkbox-plain.component.tsx","components/atoms/recipe-card-item/recipe-card-item.styles.ts","components/atoms/recipe-card-item/recipe-card-item.component.tsx","components/molecules/featured-recipes/featured-recipes.component.tsx","components/molecules/spinner/spinner.styles.ts","components/molecules/spinner/spinner.component.tsx","pages/home/home.component.tsx","components/atoms/page-title/page-title.styles.ts","components/atoms/page-title/page-title.component.tsx","components/molecules/recipes-list/recipe-list.styles.ts","components/molecules/recipes-list/recipes-list.component.tsx","components/atoms/backdrop/backdrop.styles.ts","components/atoms/backdrop/backdrop.component.tsx","components/atoms/button-link/button-link.styles.ts","components/atoms/button-link/button-link.component.tsx","components/molecules/confirm-dialog/confirm-dialog.styles.ts","components/molecules/confirm-dialog/confirm-dialog.component.tsx","components/atoms/bulk-opperation-controls/bulk-opperation-controls.styles.ts","components/atoms/form-button/form-button.component.tsx","components/atoms/list-grid-toggle/list-grid-toggle.styles.ts","components/atoms/list-grid-toggle/list-grid-toggle.component.tsx","components/molecules/recipes-category-card-list/recipes-category-card-list.styles.ts","components/molecules/recipes-category-card-list/recipes-category-card-list.component.tsx","pages/recipes/recipes.styles.ts","components/atoms/empty-message/empty-message.styles.ts","components/atoms/empty-message/empty-message.component.tsx","pages/recipes/recipes.component.tsx","providers/users/users.utilities.ts","services/users/users.service.ts","providers/users/users.provider.tsx","pages/favorites/favorites.styles.ts","pages/favorites/favorites.component.tsx","components/atoms/field-wrapper/field-wrapper.styles.ts","components/atoms/field-wrapper/field-wrapper.component.tsx","components/atoms/select-option-field/select-option-field.styles.ts","components/atoms/select-option-field/select-option-field.component.tsx","components/atoms/text-field/text-field.styles.ts","components/atoms/text-field/text-field.component.tsx","components/atoms/checkbox-field/checkbox-field.styles.ts","components/atoms/checkbox-field/checkbox-field.component.tsx","components/atoms/form-button/form-button.styles.ts","components/molecules/main-menu/main-menu.component.tsx","templates/add-recipe-form/add-recipe-form.styles.ts","components/atoms/accordion-toggle/accordion-toggle.styles.ts","components/atoms/accordion-toggle/accordion-toggle.component.tsx","templates/add-recipe-form/add-recipe-form.component.tsx","pages/add-recipe/add-recipe.component.tsx","pages/view-recipe/view-recipe.styles.ts","components/atoms/comments-list-item/comments-list-item.styles.ts","components/atoms/user-avatar/user-avatar.styles.ts","components/atoms/user-avatar/user-avatar.component.tsx","components/atoms/comments-list-item/comments-list-item.component.tsx","components/atoms/recipe-content-owner/recipe-content-owner.styles.ts","components/atoms/recipe-content-owner/recipe-content-owner.component.tsx","components/molecules/recipe-view-details/recipe-view-details.styles.ts","templates/add-comment/add-comment.styles.ts","templates/add-comment/add-comment.component.tsx","components/molecules/recipe-view-details/recipe-view-details.component.tsx","components/atoms/recipe-action-bar/recipe-action-bar.styles.ts","components/atoms/recipe-action-bar/recipe-action-bar.component.tsx","pages/view-recipe/view-recipe.component.tsx","templates/edit-recipe-form/edit-recipe-form.styles.ts","templates/edit-recipe-form/edit-recipe-form.component.tsx","pages/edit-recipe/edit-recipe.component.tsx","pages/recipes-by-category/recipes-by-category.styles.ts","pages/recipes-by-category/recipes-by-category.component.tsx","templates/sign-in-form/sign-in-form.styles.ts","services/auth/auth.services.ts","templates/sign-in-form/sign-in-form.component.tsx","pages/sign-in-sign-up/sign-in-sign-up.styles.ts","pages/sign-in-sign-up/sign-in-sign-up.component.tsx","templates/sign-up-form/sign-up-form.styles.ts","templates/sign-up-form/sign-up-form.component.tsx","pages/sign-up/sign-up.component.tsx","components/molecules/user-card/user-card.styles.ts","components/molecules/user-card/user-card.component.tsx","components/molecules/users-list/users-list.styles.ts","components/molecules/users-list/users-list.component.tsx","pages/users/users.component.tsx","App.styles.tsx","components/atoms/nav-brand/nav-brand.styles.ts","components/atoms/nav-brand/nav-brand-component.tsx","components/molecules/sign-in-out/sign-in-out.styles.ts","components/atoms/sign-out/sign-out.styles.ts","components/atoms/sign-out/sign-out.component.tsx","components/molecules/sign-in-out/sign-in-out.component.tsx","components/atoms/menu-toggle/menu-toggle.styles.ts","components/atoms/menu-toggle/menu-toggle.component.tsx","components/atoms/close-button/close-button.styles.ts","components/atoms/close-button/close-button.component.tsx","components/molecules/theme-switcher/theme-switcher.styles.ts","components/molecules/theme-switcher/theme-switcher.component.tsx","components/molecules/main-menu/main-menu.styles.ts","interfaces/activity/activity.interface.ts","components/molecules/primary-nav/primary.nav.styles.ts","components/molecules/primary-nav/primary.nav.component.tsx","pages/user-recipes/user-recipes.component.tsx","components/atoms/select-option-plain/select-option-plain.styles.ts","components/atoms/select-option-plain/select-option-plain.component.tsx","components/molecules/theme-palette-switcher/theme-palette-switcher.component.tsx","components/molecules/remove-user/remove-user.styles.ts","components/molecules/remove-user/remove-user.component.tsx","pages/setting/settings-page.component.tsx","pages/activities/activities.styles.ts","pages/activities/activities.util.ts","components/molecules/activity-item/activity-item.styles.ts","components/molecules/activity-item/activity-item.component.tsx","pages/activities/activities.component.tsx","App.tsx","reportWebVitals.ts","components/molecules/toasts/toasts-styles.ts","components/molecules/toasts/toasts.component.tsx","index.tsx"],"names":["Theme","HeroStyles","styled","h1","props","theme","fontSizes","large","colors","pageHighLight2","SpinnerWrapper","div","HeroSubTitle","h2","pageForeground1","HeroWrapper","pageBackground2","pageBackground1","navBarBackground","StyledHeroGraphic","Widgets","TagContainer","small","TagList","ul","getFeaturedRecipes","recipes","items","copy","slice","i","length","random","Math","floor","push","splice","getCategoryTags","temp","find","item","category","sort","a","b","addRecipeToList","recipe","editRecipe","index","findIndex","_id","updated","deleteRecipe","bulkUpdateRecipes","itemsToUpdate","recipesList","map","r","updatedItem","setUserAuth","user","expires","localStorage","setItem","JSON","stringify","expireAuth","data","getItem","parse","Date","getTime","removeItem","getUserAuth","authData","AuthContext","createContext","isLoggedIn","token","setLogin","setUserToken","val","setUserObject","expiration","setUserExpiration","AuthProvider","children","useState","setUser","setIsLoggedIn","setToken","setExpiration","useEffect","storageUser","Provider","value","baseURL","process","endpoint","getRecipes","axios","get","resp","getRecipesAuth","method","url","headers","Authorization","addRecipe","updateRecipe","removeRecipe","message","addFavorite","recipeId","userId","removeFavorite","addRecipeComment","commentItem","addFavoriteBulk","removeFavoriteBulk","removeShareBulk","addShareBulk","RecipesContext","recipeItems","recipeCount","setSpinner","setCount","makeFreshPull","setRecipeItems","isLoading","makeRequest","RecipesProvider","setRecipeCount","setMakeRequest","setIsLoading","useContext","then","setTimeout","catch","err","console","log","error","CategoryTags","uniques","setUniques","filterList","filter","shared","user_id","Fragment","key","to","cat_id","StyledMain","main","MainSection","CardList","StyledRatingContainer","StarFilled","Star","inverse","StarOutlined","StarBorder","RecipeRating","rating","title","idx","paletteItems","pink","purple","green","cyan","deepPurple","indigo","teal","blue","lightGreen","deepOrange","lightBlue","yellow","getLightTheme","palette","grey","pageBackground3","pageBorderColor1","pageLinkColor1","pageHighLight1","A100","A700","pageSecondaryColor1","pageToastSuccess","pageToastError","fonts","smallPlus","regular","medium","actionItemEnums","ThemeContext","Dark","setTheme","setPaletteDark","setPaletteLight","currentDark","currentLight","setCurrentDark","setCurrentLight","MyTheme","paletteDark","paletteLight","str","parsed","A200","CheckBoxIcon","Check","ison","StyledCheckBox","input","ThemeStyle","ThemEnum","StyledFieldWrapper","CheckboxPlain","id","inputChangeHandler","isChecked","setIsChecked","htmlFor","type","onChange","evt","target","checked","CardItem","Light","CardCopy","p","CardTitleWrap","CardTitle","h3","CardBottomWrapper","CardMetaInfo","RecipeCardItem","selectMode","onSelectChange","r_name","steps","join","ChevronRight","FeaturedRecipes","featured","setFeatured","StyledCircularProgress","CircularProgress","SpinnerOuter","Spinner","HomePage","StyledPageTitle","PageTitle","StyledList","StyledListItem","li","RecipeList","StyledBackdrop","isOpen","Backdrop","toggleClose","onClick","StyledButtonLink","button","ButtonLink","disabled","clickHandler","StyledConfirmButton","StyledCancelButton","StyledDialog","Dialog","ConfirmDialog","confirmText","handleCancel","handleConfirm","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","StyledControlWrap","StyledMoreIconButton","StyledToolBarDivider","StyledMoreIcon","MoreHoriz","StyledToggleButton","StyledMenuContent","FormButtons","BulkOpperationsControls","bulkCount","bulkList","handleEditMode","isMixedList","addToast","useToasts","setIsOpen","confirmOpen","setConfirmOpen","actionType","setActionType","handleActionsMenu","handleActionClick","actionValue","actionItems","name","favorite","notAllowed","unfavorite","share","noshare","confirmMsg","appearance","autoDismiss","StyledButton","StyledGridOnIcon","GridOn","StyledListIcon","List","ListGridToggleButton","grid","StyledCardContainer","RecipesCategoryCardList","StyledTitleWrapper","StyledSpinnerWrap","StyledToolBar","StyledEmptyMessage","EmptyMesssage","msg","RecipesPage","isGridView","setIsGridView","setIsMixedList","setSelectMode","setBulkList","setBulkCount","templist","isMixedTemp","ret","bulkItem","checkMixedList","addUserItem","userList","toUpperCase","removeUserItem","u","getUsers","deleteUserAccount","UsersContext","userItems","userCount","UsersProvider","setUserItems","setUserCount","users","sorted","FavoritesPage","filteredRecipes","setFilteredRecipes","filteredItems","favorites","some","f","FieldWrapper","StyledLabel","label","Required","StyledSelect","SelectOptionField","as","dataType","optionData","defaultOptionText","required","useField","field","setValue","className","datatype","StyledVisibility","Visibility","StyledVisibilityOff","VisibilityOff","StyledEyeButton","StyledInput","StyledEyeLabel","RecipeTextField","placeholder","onVisibilityChange","isVisible","CheckBoxField","StyledPrimaryButton","FormButton","Primary","Size","Icons","buttonText","size","StyledFormWrapper","StyledInputWrapper","InputButtonsWrap","FieldArrayItem","StyledAddInputBtn","StyledSubtractInputBtn","StyledAccordionContent","Collapsed","Field","StyledHRule","hr","StyledFieldArrayEmptyButton","StyledButtonToggle","StyledToggleWrap","Space","StyledArrowDown","KeyboardArrowDown","StyledArrowUp","KeyboardArrowUp","AccordionToggle","toggleHandler","spacing","AddRecipeForm","catData","setCatData","currentRecipeItems","setCurrentRecipeItems","isOpenIngredients","setIsOpenIngredients","isOpenSteps","setIsOpenSteps","isOpenComments","setIsOpenComments","navigate","useNavigate","formValuesInitial","ingredients","comments","String","initialValues","onSubmit","values","setSubmitting","catName","Number","vals","dirty","resetForm","isValid","render","arrayHelpers","remove","insert","comment","Secondary","AddRecipePage","DetailsTopWrapper","MetaInfoTop","MetaInfoBottom","pageForegroundColor1","MetaInfoWrapper","UserWrapper","StyledAvatar","span","UserAvatar","CommentItem","StyledDiv","RecipeContentOwner","action","findUser","StyledDetailsDiv","StyledH4","h4","AddCommentForm","handleSubmit","undefined","setFormValuesInitial","showForm","setShowForm","RecipeViewDetails","setRecipe","tempRecipe","StyledTextarea","textarea","StyledFavoriteIcon","Favorite","StyledFavoriteOutlineIcon","FavoriteBorderOutlined","StyledEditIcon","Edit","StyledDeleteIcon","Delete","StyledShareIcon","Share","StyledPrintIcon","Print","StyledRecipeActionBar","RecicipeActionBar","useParams","favDisabled","setFavDisabled","isFav","setIsFav","setOpen","copied","setCopied","isOwner","setIsOwner","handleFavorite","onCopy","text","window","print","e","RecipeDetailPage","EditRecipeForm","foundRecipe","toString","EditRecipePage","RecipesByCategory","filtered","setFiltered","setCatName","param_id","parseInt","logInUser","email","password","post","signUpUser","SignInForm","StyledNavLink","NavLink","StyledSignUpContainer","SignInSignUpPage","SignUpForm","setIsVisable","userToAdd","SignUpPage","StyledUserCard","StyledNoSharedRecipes","UserCard","isContentOwner","StyledUserCardList","UsersList","authUser","setUsers","usersWithRecipe","UsersPage","StyledOuterDiv","StyledNavBrand","Restaurant","NavBrand","StyledRightItemsWrapper","StyledRightListItem","StyledAccountIcon","AccountCircle","StyledDropdownContainer","StyledAnchor","StyledDropDownWrapper","SignOutButton","toggleExpanded","handleSignOut","SignInSignOut","StyledMenu","Menu","MenuToggle","StyledClose","Close","CloseButton","closeHandler","StyledThemeButton","Settings","StyledLightModeIcon","LightMode","StyledDarkModeIcon","DarkMode","ThemeSwitcher","settingsPresentation","common","StyledNotifications","Notifications","StyledHome","Home","StyledUsers","PeopleAlt","MenuBook","StyledWidget","StyledAddCircle","AddCircle","StyledSetting","StyledFavorite","StyledNavUl","StyledMenuHeader","StyledMenuOuter","ActivityTypeEnum","ActivityActionsEnum","MainMenu","toggleIsOpen","itemsWithIcons","icon","svgIcon","params","route","StyledNavBrandWrap","StyledNavBar","PrimaryNav","NAV_DATA","mainNavItems","setMainNavItems","handleIsOpen","auth","UserRecipesPage","usersRecipes","setUsersRecipes","setIsContentOwner","tempUser","select","SelectOptionPlain","handleChange","labelText","o","ThemePaletteSwitcher","selectValDark","setSelectValDark","selectValLight","setSelectValLight","themeColors","setThemeColors","Object","keys","split","toLowerCase","StyledUnderlabel","RemoveUserComponent","userToRemove","SettingsPage","PageTitleWrapper","formattedTime","timestamp","d","dateFormat","numericTime","StyledRecipeIcon","StyledCommentIcon","Comment","StyledIconWrap","StyledCardInner","ActivityItem","recipeName","timeFormatted","createdAt","timeNum","description","Recipe","ActivitiesPage","activitesList","setActivitiesList","filterdActivitiesList","setFilteredActivitiesList","filterValue","setFilterValue","tempList","YouRecipe","fav","forEach","OtherFavorite","c","OtherComment","YouFavorite","YouComment","getRecentActivities","filterRange","Infinity","now","fetchFilterValues","App","path","element","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StyledCloseIcon","StyledToast","Appearance","CustomToasts","onDismiss","ReactDOM","StrictMode","components","Toast","CustomToast","document","getElementById"],"mappings":"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","file":"static/js/main.6bad130e.chunk.js","sourcesContent":["import React, { useContext, createContext, useState, FC, useEffect } from \"react\";\nimport { getDarkTheme, getLightTheme, paletteItems } from './themes';\nimport { ThemeProvider } from \"styled-components\";\n\nexport enum Theme {\n    Dark = 'Dark',\n    Light = 'Light',\n}\n\nexport type ThemeContextType = {\n    theme: Theme;\n    setTheme: (Theme: Theme) => void;\n    setPaletteDark: (val: any) => void;\n    setPaletteLight: (val: any) => void;\n    paletteItems: any;\n    currentDark: string;\n    currentLight: string;\n    setCurrentDark: (val: string) => void;\n    setCurrentLight: (val: string) => void;\n}\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const ThemeContext = createContext<ThemeContextType>({\n    theme: Theme.Dark,\n    setTheme: theme => { },\n    setPaletteDark: () => { },\n    setPaletteLight: () => { },\n    paletteItems,\n    currentDark: '',\n    currentLight: '',\n    setCurrentDark: (val: string) => { },\n    setCurrentLight: (val: string) => { }\n});\nexport const useTheme = () => useContext(ThemeContext);\n\nconst MyTheme: FC<Props> = ({ children }) => {\n    const [currentDark, setCurrentDark] = useState('pink');\n    const [currentLight, setCurrentLight] = useState('blue');\n    const [theme, setTheme] = useState(Theme.Dark);\n    const [paletteDark, setPaletteDark] = useState(paletteItems['pink']);\n    const [paletteLight, setPaletteLight] = useState(paletteItems['blue']);\n\n\n    useEffect(() => {\n        const str = localStorage.getItem('storedTheme');\n\n        if (str) {\n            const parsed = JSON.parse(str);\n            setPaletteLight(parsed.paletteLight);\n            setPaletteDark(parsed.paletteDark);\n            setCurrentDark(parsed.currentDark);\n            setCurrentLight(parsed.currentLight);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('storedTheme', JSON.stringify(({ currentDark, currentLight, paletteDark, paletteLight })))\n    }, [paletteDark, paletteLight, currentLight, currentDark]);\n\n\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme, setPaletteDark, setPaletteLight, paletteItems, currentDark, currentLight, setCurrentDark, setCurrentLight }}>\n            <ThemeProvider theme={theme === Theme.Dark ? getDarkTheme(paletteDark) : getLightTheme(paletteLight)}>{children}</ThemeProvider>\n        </ThemeContext.Provider>\n    );\n\n}\n\nexport default MyTheme;","import styled from 'styled-components';\nimport { Widgets } from '@material-ui/icons';\n\nexport const HeroStyles = styled.h1`\n    font-size: ${(props) => props.theme.fontSizes.large};\n    font-weight: 300;\n    line-height: 0.9em;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const HeroSubTitle = styled.h2`\n    font-size: 1.5rem;\n    font-weight: 300;\n    line-height: 1.2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const HeroWrapper = styled.div`\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.pageBackground2};\n    background: linear-gradient(\n        to right,\n        ${props => props.theme.colors.pageBackground1},\n        75%,\n        ${props => props.theme.colors.navBarBackground}\n    );\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledHeroGraphic = styled(Widgets)`\n    color: ${(props) => props.theme.colors.pageHighLight2};\n    font-size: 5.6rem !important;\n    margin: -6vw 1.25rem 0 -2.6rem;\n    @media (min-width: 576px) {\n        font-size: 11.6rem !important;\n        margin: 0 1.25rem 0 -1.25rem;\n    }\n`;","import styled from 'styled-components';\n\nexport const TagContainer = styled.div`\n    background-color: ${props => props.theme.colors.pageBackground2};\n    font-size: ${props => props.theme.fontSizes.small};\n    color: #fff;\n    padding: 1.5rem 1.5rem 0.75rem 1.5rem;\n`;\n\nexport const TagList = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    list-style: none;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    li {\n        background-color: ${props => props.theme.colors.pageHighLight2};\n        padding: 0.5rem 1rem;\n        margin: 0 0.5rem 1rem 0.5rem;\n        border-radius: 0 1rem 0 1rem;\n        @media (min-width: 1400px) {\n            &:nth-child(even) {\n                border-radius: 1rem 0 1rem 0;\n            }\n        }\n        a {\n            color: #fff;\n            text-decoration: none;\n        }\n    }\n`;","import React from 'react';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\n\n\nexport const getFeaturedRecipes = (recipes: iRecipe[]):iRecipe[] => {\n    const items: iRecipe[] = [];\n    const copy = recipes.slice(0);\n    const NUM = 3;\n\n    for (let i = copy.length; i > 0; i--) {\n        if (items.length < NUM) {\n            let random = Math.floor(Math.random() * copy.length);\n            items.push(copy[random]);\n            copy.splice(random, 1);\n        } else {\n            break;\n        }\n    }\n    return items;\n};\n\nexport const getCategoryTags = (recipes: iRecipe[]):iRecipe[] => {\n    const temp: iRecipe[] = [];\n\n    for (let i = 0; i < recipes.length; i++) {\n        if (!temp.find(item => recipes[i].category === item.category)) {\n            temp.push(recipes[i]);\n        }\n    }\n\n    return temp.sort((a, b) => {\n        if (a.category < b.category) {\n            return -1;\n        }\n        if (a.category > b.category) {\n            return 1;\n        }\n        return 0;\n    })\n}\n\nexport const addRecipeToList = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        recipes.push(recipe);\n        return recipes;\n    }\n}\n\nexport const editRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1, recipe);\n        return updated;\n    }\n}\n\nexport const deleteRecipe = (recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1);\n        return updated;\n    }\n}\n\nexport const bulkUpdateRecipes = (itemsToUpdate: iRecipe[], recipesList: iRecipe[]) => {\n\n    if (itemsToUpdate.length === 0) {\n        return recipesList;\n    }\n\n    const updated = recipesList.map(r => {\n        const updatedItem = itemsToUpdate.find(i => i._id === r._id);\n        return updatedItem ? updatedItem : r;\n    });\n\n    return updated;\n}\n\n","\nimport { iUser } from '../../interfaces/user/user.interface';\n\nexport type StoredAuthType = {\n    user: iUser;\n    expires: number;\n}\n\nexport const setUserAuth = (user: iUser, expires: number):void => {\n\n    localStorage.setItem(\n        'userData',\n        JSON.stringify({\n            user,\n            expires\n        })\n    )\n}\n\nexport const expireAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        if (expires - currentTime < 0) {\n            localStorage.removeItem('userData');\n        }\n    } else {\n        localStorage.removeItem('userData');\n    }\n}\n\nexport const getUserAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        return expires - currentTime > 0 ? authData : null;\n    } else {\n        return null;\n    }\n}","import React, { FC, createContext, useState, useEffect } from 'react';\n\nimport { iUser } from '../../interfaces/user/user.interface';\nimport { setUserAuth, getUserAuth, expireAuth } from './auth.utilities';\n\ntype UserContextType = {\n    user: iUser | null;\n    isLoggedIn: boolean,\n    token: string | null;\n    setLogin: (val: boolean) => void;\n    setUserToken: (val: any) => void;\n    setUserObject: (val: any) => void;\n    setUserExpiration: (val: any) => void;\n    expiration: number | null;\n    setUserAuth: (user: iUser, expires: number) => void;\n    getUserAuth: () => void;\n    expireAuth: () => void;\n}\n\nexport const AuthContext = createContext<UserContextType>({\n    user: null,\n    isLoggedIn: false,\n    token: null,\n    setLogin: () => { },\n    setUserToken: (val) => { },\n    setUserObject: (val) => { },\n    expiration: null,\n    setUserExpiration: (val) => { },\n    setUserAuth: () => { },\n    getUserAuth: () => { },\n    expireAuth: () => { }\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst AuthProvider: FC<Props> = ({ children }) => {\n\n    const [user, setUser] = useState<iUser | null>(null);\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [token, setToken] = useState<string | null>(null);\n    const [expiration, setExpiration] = useState<number | null>(null);\n    const setLogin = (val = false) => setIsLoggedIn(val);\n    const setUserToken = (val = null) => setToken(val);\n    const setUserObject = (val = null) => setUser(val);\n    const setUserExpiration = (val = null) => setExpiration(val);\n\n    useEffect(() => {\n        expireAuth();\n        const storageUser = getUserAuth();\n\n        if (storageUser) {\n            setUser(storageUser.user);\n            setIsLoggedIn(true);\n            setToken(storageUser.user.token);\n            setExpiration(storageUser.expires);\n        }\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            isLoggedIn,\n            token,\n            expiration,\n            setLogin,\n            setUserToken,\n            setUserObject,\n            setUserExpiration,\n            setUserAuth,\n            getUserAuth,\n            expireAuth\n        }}>{children}</AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider;","import axios from 'axios';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_RECIPE_ENDPOINT;\nconst commentEndpoint = process.env.REACT_APP_RECIPE_COMMENT_ENDPOINT;\nconst addFavoriteEndpoint = process.env.REACT_APP_FAVORITE_ADD;\nconst removeFavoriteEndpoint = process.env.REACT_APP_FAVORITE_REMOVE;\nconst addFavoriteBulkEndpoint = process.env.REACT_APP_BULK_FAVORITE_ADD;\nconst removeFavoriteBulkEndpoint = process.env.REACT_APP_BULK_FAVORITE_REMOVE;\nconst addSharingBulkEndpoint = process.env.REACT_APP_BULK_SHARE_ADD;\nconst removeSharingBulkEndpoint = process.env.REACT_APP_BULK_SHARE_REMOVE;\n\nexport const getRecipes = async () => {\n    try {\n        const resp = await axios.get<iRecipe[]>(`${baseURL}${endpoint}/unauth`);\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\nexport const getRecipesAuth = async (token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'get',\n            url: `${baseURL}${endpoint}/auth`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\nexport const addRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${endpoint}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\nexport const updateRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        })\n\n        return resp.data.message;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${addFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${removeFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId || 'none',\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addRecipeComment = async (commentItem: iRecipeComment, recipeId: string, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${commentEndpoint}/${recipeId}`,\n            data: commentItem,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addFavoriteBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${addFavoriteBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeFavoriteBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${removeFavoriteBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeShareBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${removeSharingBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addShareBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${addSharingBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n","import React, { FC, createContext, useState, useEffect, useContext } from 'react';\nimport {\n    getFeaturedRecipes, getCategoryTags, addRecipeToList, editRecipe, deleteRecipe, bulkUpdateRecipes\n} from './recipes.utils';\nimport { AuthContext } from '../auth/auth.provider';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { getRecipes, getRecipesAuth } from '../../services/recipes/recipes.services';\n\ntype RecipeContextType = {\n    recipeItems: iRecipe[];\n    recipeCount: number;\n    bulkUpdateRecipes: (itemsToUpdate: iRecipe[], recipes: iRecipe[]) => iRecipe[];\n    getFeaturedRecipes: (recipes: iRecipe[]) => iRecipe[];\n    getCategoryTags: (recipes: iRecipe[]) => iRecipe[];\n    addRecipeToList: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    editRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    deleteRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    setSpinner: (val: boolean) => void;\n    makeFreshPull: (val: boolean) => void;\n    setCount: (val: number) => void;\n    setRecipeItems: (recipes: iRecipe[]) => void;\n    isLoading: boolean;\n    makeRequest: boolean;\n}\n\nexport const RecipesContext = createContext<RecipeContextType>({\n    recipeItems: [],\n    recipeCount: 0,\n    bulkUpdateRecipes: ([], []) => [],\n    getFeaturedRecipes: ([]) => [],\n    getCategoryTags: ([]) => [],\n    addRecipeToList: ([]) => [],\n    editRecipe: ([]) => [],\n    deleteRecipe: ([]) => [],\n    setSpinner: () => { },\n    setCount: () => { },\n    makeFreshPull: () => { },\n    setRecipeItems: ([]) => [],\n    isLoading: true,\n    makeRequest: true\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst RecipesProvider: FC<Props> = ({ children }) => {\n    const [recipeItems, setRecipeItems] = useState<iRecipe[]>([]);\n    const [recipeCount, setRecipeCount] = useState<number>(0);\n    const [makeRequest, setMakeRequest] = useState<boolean>(true);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const setSpinner = (val = true) => setIsLoading(val);\n    const makeFreshPull = (val = true) => setMakeRequest(val);\n    const setCount = (val = 0) => setRecipeCount(val);\n    const { token, isLoggedIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (makeRequest) {\n            setMakeRequest(false);\n\n            if (isLoggedIn) {\n                getRecipesAuth(token).then((resp) => {\n                    setTimeout(() => {\n                        setRecipeItems(resp);\n                        setCount(resp.length);\n                        setSpinner(false);\n                    }, 1500);\n                }).catch((err) => {\n                    setSpinner(false);\n                    console.log(err)\n                });\n            } else {\n                getRecipes().then((resp) => {\n                    setTimeout(() => {\n                        setSpinner(false);\n                        if (resp) {\n                            setRecipeItems(resp);\n                            setCount(resp.length);\n                        }\n                    }, 1500);\n                }).catch((err) => {\n                    setSpinner(false);\n                    console.error(err);\n                });\n            }\n        }\n    }, [makeRequest]);\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            setSpinner(true);\n            makeFreshPull(true);\n        }\n    }, [isLoggedIn]);\n\n    return (<RecipesContext.Provider\n        value={{\n            recipeItems,\n            recipeCount,\n            bulkUpdateRecipes,\n            getFeaturedRecipes,\n            getCategoryTags,\n            addRecipeToList,\n            setRecipeItems,\n            editRecipe,\n            deleteRecipe,\n            setSpinner,\n            setCount,\n            isLoading,\n            makeRequest,\n            makeFreshPull\n        }}\n    >{children}</RecipesContext.Provider>)\n};\n\nexport default RecipesProvider;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TagContainer, TagList } from './category-tabs.styles';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\nconst CategoryTags = () => {\n    const { recipeItems, getCategoryTags } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [uniques, setUniques] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setUniques(getCategoryTags(filterList))\n    }, [recipeItems, getCategoryTags, user])\n\n    return (\n        <React.Fragment>\n            {\n                uniques.length > 0 && (\n                    <TagContainer>\n                        <TagList>\n                            {\n                                uniques.map((item, key) => (<li key={key}>\n                                    <Link to={`/recipes/category/${item.cat_id}`}>{item.category}</Link>\n                                </li>))\n                            }\n                        </TagList>\n                    </TagContainer>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CategoryTags;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    padding: 0 1.5rem 1.5rem 1.5rem;\n    overflow: hidden;\n`;","import React, { FC } from \"react\";\nimport { StyledMain } from \"./main-section.styles\";\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const MainSection: FC<Props> = ({ children }) => (\n    <StyledMain children={children} />\n);","import styled from 'styled-components';\n\nexport const CardList = styled.div`\n    width: 100%;\n    margin: 0;\n    padding: 1.5rem 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;\n\n","import styled from \"styled-components\";\n\nimport { StarBorder, Star } from \"@material-ui/icons\";\nimport {Theme as ThemeEnum } from '../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle?: ThemeEnum;\n    inverse: string;\n}\n\nexport const StyledRatingContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    max-width: 90px;\n`;\n\nexport const StarFilled = styled(Star)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\nexport const StarOutlined = styled(StarBorder)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\n","import React, { FC } from \"react\";\nimport { StyledRatingContainer, StarFilled, StarOutlined } from \"./rating.styles\";\n\ninterface Props {\n    rating?: number;\n    inverse?: boolean;\n}\n\nconst RecipeRating: FC<Props> = ({ rating = 0, inverse = false }) => {\n    let stars: any[] = [true, true, true, true];\n\n    return (\n        <StyledRatingContainer title={`rated ${rating} stars`}>\n            {stars.map((item, idx) => idx < rating ?\n                (<StarFilled inverse={inverse ? 'yes' : 'no'} key={idx} />)\n                :\n                (<StarOutlined inverse={inverse ? 'yes' : 'no'} key={idx} />)\n            )}\n        </StyledRatingContainer>\n    );\n}\n\nexport default RecipeRating;","import {\n    grey,\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightBlue,\n    lightGreen,\n    yellow,\n    deepOrange\n} from 'material-colors-ts';\n\nexport const paletteItems = {\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightGreen,\n    deepOrange,\n    lightBlue,\n    yellow\n}\n\nexport const getDarkTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[900],\n            pageBackground2: grey[800],\n            pageBackground3: grey[700],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[50],\n            pageLinkColor1: palette.A200,\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}\n\nexport const getLightTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[50],\n            pageBackground2: grey[200],\n            pageBackground3: grey[300],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[900],\n            pageLinkColor1: palette[900],\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}","import React, { FC, useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n\nimport Backdrop from '../backdrop/backdrop.component';\nimport ButtonLink from '../button-link/button-link.component';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport {\n    addFavoriteBulk, removeFavoriteBulk, addShareBulk, removeShareBulk\n} from '../../../services/recipes/recipes.services';\nimport {\n    StyledControlWrap, StyledListItem, StyledMoreIconButton, StyledToolBarDivider, StyledMoreIcon,\n    StyledToggleButton, StyledMenuContent\n} from './bulk-opperation-controls.styles';\n\n\nenum actionItemEnums {\n    favorite = \"favorites add\",\n    unfavorite = \"favorites remove\",\n    share = \"sharing add\",\n    noshare = \"sharing remove\"\n}\n\ninterface iActionItem {\n    id: keyof typeof actionItemEnums;\n    name: actionItemEnums;\n    notAllowed: boolean;\n}\n\ntype Props = {\n    bulkCount: number;\n    handleEditMode: () => void;\n    selectMode: boolean;\n    bulkList: string[];\n    isMixedList: boolean;\n}\n\nconst BulkOpperationsControls: FC<Props> = ({ bulkCount, bulkList, handleEditMode, selectMode, isMixedList }) => {\n    const { addToast } = useToasts();\n    const { user, token } = useContext(AuthContext);\n    const { recipeItems, bulkUpdateRecipes, setRecipeItems } = useContext(RecipesContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [confirmOpen, setConfirmOpen] = useState<boolean>(false);\n    const [actionType, setActionType] = useState<string>('');\n\n    const handleActionsMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const handleConfirmCancel = () => {\n        setConfirmOpen(false);\n    };\n\n    const handleConfirmed = () => {\n        const getPlural = () => bulkCount !== 1 ? 's' : '';\n        let confirmMsg = `${bulkCount} item${getPlural()} updated`;\n        setConfirmOpen(false);\n        setIsOpen(false);\n        handleEditMode();\n\n        if (user?.userId) {\n            switch (actionType) {\n                case \"favorite\":\n                    addFavoriteBulk(bulkList, user.userId, token).then(resp => {\n\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"unfavorite\":\n                    removeFavoriteBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"share\":\n                    addShareBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"noshare\":\n                    removeShareBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n            }\n        }\n    };\n\n    const handleActionClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        const actionValue = (evt.target as HTMLButtonElement).id;\n        setActionType(actionValue);\n        setConfirmOpen(true);\n    }\n\n    const actionItems: iActionItem[] = [\n        { id: \"favorite\", name: actionItemEnums.favorite, notAllowed: false },\n        { id: \"unfavorite\", name: actionItemEnums.unfavorite, notAllowed: false },\n        { id: \"share\", name: actionItemEnums.share, notAllowed: isMixedList },\n        { id: \"noshare\", name: actionItemEnums.noshare, notAllowed: isMixedList }\n    ];\n\n    return (\n        <StyledControlWrap>\n            {\n                selectMode && bulkCount > 0 && (\n                    <React.Fragment>\n                        <Backdrop isOpen={isOpen} toggleClose={() => handleActionsMenu()} />\n                        <StyledToolBarDivider>\n                            <StyledMoreIconButton onClick={() => handleActionsMenu()} title={`${bulkCount} item${bulkCount !== 1 ? 's' : ''} selected`}>\n                                <StyledMoreIcon />\n                                <span>({bulkCount})</span>\n                            </StyledMoreIconButton>\n                            <ul>\n                                {\n                                    isOpen && <StyledMenuContent>\n                                        {\n                                            actionItems.map(({ id, name, notAllowed }) => (\n                                                <StyledListItem key={id}>\n                                                    <ButtonLink\n                                                        id={id}\n                                                        disabled={notAllowed}\n                                                        clickHandler={handleActionClick}\n                                                    >{name}</ButtonLink>\n                                                </StyledListItem>\n                                            ))\n                                        }\n                                    </StyledMenuContent>\n                                }\n                            </ul>\n                        </StyledToolBarDivider>\n                    </React.Fragment>\n                )\n            }\n            {\n                <StyledToolBarDivider>\n                    <StyledToggleButton onClick={() => handleEditMode()} title={selectMode ? 'Cancel select items' : 'Select items'}>\n                        {selectMode ? 'Cancel' : 'Select items'}\n                    </StyledToggleButton>\n                </StyledToolBarDivider>\n            }\n            <ConfirmDialog\n                open={confirmOpen}\n                title={\"Are you sure?\"}\n                confirmText={`${actionItemEnums[actionType as keyof typeof actionItemEnums]} for ${bulkCount} ${bulkCount !== 1 ? 'items' : 'item'}`}\n                handleCancel={handleConfirmCancel}\n                handleConfirm={handleConfirmed}\n            />\n        </StyledControlWrap>\n    )\n}\n\nexport default BulkOpperationsControls;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iStyledProps {\n    ison: string;\n}\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input<iThemeStyleProp>`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    ${props => props.ThemeStyle === ThemEnum.Dark && `\n        outline: 2px solid rgba(255,255,255, 0.3);\n    `}\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n    flex: 0 0 2.7rem;\n`;","import React, { FC, useState, useContext } from 'react';\nimport { StyledCheckBox, CheckBoxIcon, StyledFieldWrapper } from './checkbox-plain.styles';\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\n\ntype Props = {\n    id: string;\n    value: string;\n    inputChangeHandler: (value: string | undefined, checked: boolean) => void;\n}\n\nconst CheckboxPlain: FC<Props> = ({ id, value, inputChangeHandler }) => {\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const { theme } = useContext(ThemeContext);\n    return (\n        <StyledFieldWrapper>\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={isChecked ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                ThemeStyle={theme}\n                id={id}\n                value={value}\n                onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    inputChangeHandler(evt.target.value, evt.target.checked);\n                    setIsChecked(evt.target.checked)\n                }}\n            />\n        </StyledFieldWrapper>\n\n    )\n}\n\nexport default CheckboxPlain;","import { Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CardItem = styled.div<iThemeStyleProp>`\n    background-color: ${(props) => props.theme.colors.pageSecondaryColor1};\n    padding: 1rem;\n    color: #fff;\n    min-height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        background-color: #fff;\n        border: 2px solid ${props.theme.colors.pageSecondaryColor1};\n        border-top: 0.5rem solid ${props.theme.colors.pageSecondaryColor1};\n        color: ${props.theme.colors.pageForeground1};\n    `}\n`;\n\nexport const CardCopy = styled.p`\n    font-weight: 300;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n`;\n\nexport const CardTitleWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const CardTitle = styled.h3`\n    font-weight: 400;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n`;\n\nexport const CardBottomWrapper = styled.div<iThemeStyleProp>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    * { flex: 1}\n    a {\n        color: #fff;\n        text-decoration: none;\n        flex: 0 0 1;\n        text-align: right;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        svg {\n            flex: 0 0 24px;\n        }\n    }\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        a {\n            color: ${props.theme.colors.pageLinkColor1};\n        }\n    `}\n`;\n\nexport const CardMetaInfo = styled.div<iThemeStyleProp>`\n    display: flex;\n    align-items: top;\n    justify-content: left;\n    * {\n        flex: 1;\n    }\n\n    span {\n        position: relative;\n        padding-right: 8px;\n        margin-right: 8px;\n        flex: 0;\n        &:before {\n            position: absolute;\n            content: '';\n            right: 0;\n            width: 1px;\n            height: 100%;\n            background-color: #fff;\n            opacity: 0.5;\n        }\n        ${props => props.ThemeStyle === ThemEnum.Light && `\n            &::before {\n                background-color: ${props.theme.colors.pageForeground1};\n            }\n        `}\n    }\n`;","import React, { ChangeEventHandler, FC, useContext } from 'react';\n\nimport RecipeRating from '../../atoms/rating/rating.component';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight } from \"@material-ui/icons\";\nimport CheckBoxPlain from '../checkbox-plain/checkbox-plain.component';\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\nimport { CardItem, CardCopy, CardBottomWrapper, CardTitleWrap, CardMetaInfo, CardTitle } from './recipe-card-item.styles';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ntype Props = {\n    item: iRecipe;\n    selectMode?: boolean;\n    onSelectChange?: (id: string | undefined, checked: boolean) => void;\n}\n\nconst RecipeCardItem: FC<Props> = ({ item, selectMode = false, onSelectChange }) => {\n    const { theme } = useContext(ThemeContext);\n\n    const handleChange = (id: string | undefined, checked: boolean) => {\n        if (onSelectChange) {\n            onSelectChange(id, checked);\n        }\n    }\n    return (\n        <CardItem ThemeStyle={theme}>\n            <CardTitleWrap>\n                <CardTitle>{item.r_name}</CardTitle>\n                {\n                    selectMode && (\n                        <CheckBoxPlain\n                            id={item._id || 'none'}\n                            value={item._id || 'none'}\n                            inputChangeHandler={handleChange}\n                        />\n                    )\n                }\n            </CardTitleWrap>\n            <CardCopy>{item?.steps?.join(' ')}</CardCopy>\n            <CardBottomWrapper ThemeStyle={theme}>\n                <CardMetaInfo ThemeStyle={theme}>\n                    <span>{item.category}</span>\n                    <RecipeRating inverse={theme === Theme.Light} rating={item.rating} />\n                </CardMetaInfo>\n                <Link to={`/recipes/${item._id}`}>View More <ChevronRight /></Link>\n            </CardBottomWrapper>\n        </CardItem>\n    );\n}\n\nexport default RecipeCardItem;","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { CardList } from \"./featured-recipes.styles\";\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\n\nconst FeaturedRecipes = () => {\n    const { recipeItems, getFeaturedRecipes } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [featured, setFeatured] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFeatured(getFeaturedRecipes(filterList));\n    }, [recipeItems, user, getFeaturedRecipes])\n\n\n    return (\n        <CardList>\n            {\n                featured.map((item, key) => (\n                    <RecipeCardItem key={key} item={item} />\n                ))\n            }\n        </CardList>\n    );\n}\n\nexport default FeaturedRecipes;","import React from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const SpinnerWrapper = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n    color: ${props => props.theme.colors.pageHighLight2} !important;\n`;\n\n\nexport const SpinnerOuter = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React from 'react';\n\nimport { SpinnerWrapper, StyledCircularProgress } from './spinner.styles';\n\n\nconst Spinner = () => (\n    <SpinnerWrapper>\n        <StyledCircularProgress />\n    </SpinnerWrapper>\n);\n\nexport default Spinner;","import React, { useContext } from \"react\";\n\nimport { HeroStyles, HeroSubTitle, HeroWrapper, StyledHeroGraphic, SpinnerWrapper } from \"./home.styles\";\nimport CategoryTags from '../../components/molecules/category-tags/category-tags.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport FeaturedRecipes from \"../../components/molecules/featured-recipes/featured-recipes.component\";\nimport { RecipesContext } from \"../../providers/recipes/recipes.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst HomePage = () => {\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <HeroWrapper>\n                <StyledHeroGraphic />\n                <div>\n                    <HeroStyles>Recipe Box</HeroStyles>\n                    <HeroSubTitle>A collection of my favorite recipes</HeroSubTitle>\n                </div>\n            </HeroWrapper>\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <FeaturedRecipes />\n                        <CategoryTags />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default HomePage;\n\n","import styled from 'styled-components';\n\nexport const StyledPageTitle = styled.h2`\n    font-size: ${(props) => props.theme.fontSizes.medium};\n    line-height: normal;\n    font-weight: 300;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;","import React, { FC } from 'react';\nimport { StyledPageTitle } from './page-title.styles';\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nconst PageTitle: FC<Props> = ({ children }) => (\n    <StyledPageTitle children={children} />\n);\n\nexport default PageTitle;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n    margin-top: 1rem;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75rem 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n    &>a {\n        color: ${(props) => props.theme.colors.pageLinkColor1};\n        text-decoration: none;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`;","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledList, StyledListItem } from './recipe-list.styles';\n\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipeList: FC<Props> = ({ recipes = [] }) => {\n\n    return (\n        <StyledList>\n            {\n                recipes.map(item => (\n                    <StyledListItem key={item._id}>\n                        <Link to={`/recipes/${item._id}`}>\n                            {item.r_name}\n                        </Link>\n                    </StyledListItem>\n                ))\n            }\n        </StyledList>\n    )\n}\n\nexport default RecipeList;","import styled from 'styled-components';\n\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledBackdrop = styled.div<iStyledMenuOuter>`\n    background-color: rgba(0, 0, 0, 0.2);\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 19;\n    display: ${props => props.isOpen ? 'block' : 'none'};\n`;","import React, { FC } from 'react';\n\nimport { StyledBackdrop } from './backdrop.styles'\n\ntype Props = {\n    isOpen: boolean;\n    toggleClose: () => void;\n}\n\nconst Backdrop: FC<Props> = ({ isOpen, toggleClose }) => (\n    <StyledBackdrop isOpen={isOpen} onClick={() => toggleClose()} />\n)\n\nexport default Backdrop;","import styled from 'styled-components';\n\nexport const StyledButtonLink = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    line-height: inherit;\n    &:hover {\n        text-decoration: underline;\n    }\n    &:disabled {\n        opacity: 0.3;\n        cursor: not-allowed;\n        text-decoration: none;\n    }\n`;","import React, { FC } from 'react';\n\nimport { StyledButtonLink } from './button-link.styles'\n\ninterface Props {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    id?: string | undefined;\n    clickHandler: (evt: React.MouseEvent<HTMLButtonElement>) => void;\n}\nconst ButtonLink: FC<Props> = ({ children, id, disabled, clickHandler }) => {\n    return (\n        <StyledButtonLink\n            id={id}\n            onClick={(evt) => clickHandler(evt)}\n            disabled={disabled}\n        >\n            {children}\n        </StyledButtonLink>\n    )\n}\n\nexport default ButtonLink;","import styled from 'styled-components';\nimport { Dialog } from '@material-ui/core';\n\n\nexport const StyledConfirmButton = styled.button`\n    color: #fff;\n    border: 0;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledCancelButton = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledDialog = styled(Dialog)`\n    .MuiPaper-root {\n        border: 1px solid ${props => props.theme.colors.pageBorderColor1};\n        border-radius: 0px;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        color: ${props => props.theme.colors.pageHighLight2}\n    }\n    \n    .MuiDialogContentText-root {\n        \n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n","import React, { FC } from 'react';\n\nimport { DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\n\nimport { StyledDialog, StyledCancelButton, StyledConfirmButton } from './confirm-dialog.styles';\n\ninterface Props {\n    title: string;\n    confirmText: string;\n    open: boolean;\n    handleCancel: () => void;\n    handleConfirm: () => void;\n}\n\nexport const ConfirmDialog: FC<Props> = ({ title, confirmText, handleCancel, handleConfirm, open }) => {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleCancel}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {confirmText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <StyledCancelButton onClick={handleCancel}>No</StyledCancelButton>\n                <StyledConfirmButton onClick={handleConfirm} autoFocus>Yes</StyledConfirmButton>\n            </DialogActions>\n        </StyledDialog>\n    );\n}\n\nexport default ConfirmDialog;\n","import styled from 'styled-components';\nimport { MoreHoriz } from '@material-ui/icons';\n\nexport const StyledControlWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledMoreIconButton = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    color: ${(props) => props.theme.colors.pageLinkColor1};\n    cursor: pointer;\n`;\n\nexport const StyledListItem = styled.li`\n    line-height: 2rem;\n    white-space: nowrap;\n`\n\nexport const StyledToolBarDivider = styled.div`\n    position: relative;\n    display: flex;\n    padding-right: 0.75rem;\n    margin-right: 0.50rem;\n    line-height: 1.5rem;\n\n    &::after {\n        position: absolute;\n        content: '';\n        right: 0;\n        width: 1px;\n        height: 100%;\n        background-color: ${props => props.theme.colors.pageForeground1};\n        opacity: 0.3;\n    }\n`;\n\nexport const StyledMoreIcon = styled(MoreHoriz)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledToggleButton = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.pageLinkColor1};\n    &:hover {\n        text-decoration: underline;\n    }\n    line-height: inherit;\n`;\n\nexport const StyledMenuContent = styled.div`\n    position: absolute;\n    z-index: 20;\n    top: 1.75rem;\n    right: 20%;\n    min-height: 150px;\n    min-width: 150px;\n    padding: 1rem;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React, { FC } from 'react';\n\nimport { StyledPrimaryButton } from './form-button.styles';\n\nexport enum FormButtons {\n    Primary = \"Primary\",\n    Secondary = \"Secondary\"\n}\n\ninterface Props {\n    buttonText: string;\n    type: 'button' | 'submit';\n    FormButton: FormButtons;\n    onClick?: () => void;\n    disabled?: boolean;\n    size?: 'small' | undefined;\n}\n\n\n\nconst FormButton: FC<Props> = ({ buttonText, type = 'button', FormButton, onClick, disabled = false, size }) => {\n    return (\n        <StyledPrimaryButton\n            Size={size}\n            onClick={onClick}\n            FormButton={FormButton}\n            type={type}\n            disabled={disabled}\n        >\n            {buttonText}\n        </StyledPrimaryButton>\n    )\n}\n\nexport default FormButton;","import styled from 'styled-components';\nimport {GridOn, List} from '@material-ui/icons';\n\nexport const StyledButton = styled.button`\n    display: flex;\n    background: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n`;\n\nexport const StyledGridOnIcon = styled(GridOn)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`;\n\nexport const StyledListIcon = styled(List)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`;\n","import React, { FC } from \"react\";\n\nimport { StyledGridOnIcon, StyledListIcon, StyledButton } from './list-grid-toggle.styles'\n\ninterface Props {\n    grid: boolean;\n    onClick: VoidFunction\n}\n\nconst ListGridToggleButton: FC<Props> = ({ grid, onClick }) => (\n    <StyledButton title={grid ? 'View list' : 'View cards'} onClick={onClick}>\n        {\n            grid ? (\n                <StyledListIcon />\n            ) : (\n                <StyledGridOnIcon />\n            )\n        }\n    </StyledButton>\n);\n\nexport default ListGridToggleButton;","import styled from 'styled-components';\n\nexport const StyledCardContainer = styled.div`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;","import React, { FC } from 'react';\n\nimport { StyledCardContainer } from './recipes-category-card-list.styles';\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[];\n    selectMode?: boolean;\n    onSelectChange?: (id: string | undefined, checked: boolean) => void;\n}\n\nconst RecipesCategoryCardList: FC<Props> = ({ recipes = [], selectMode = false, onSelectChange }) => (\n    <StyledCardContainer>\n        {\n            recipes.map((item, key) => (<RecipeCardItem key={key} item={item} selectMode={selectMode} onSelectChange={onSelectChange} />))\n        }\n        {\n            recipes.length < 3 && (\n                <React.Fragment>\n                    <div></div>\n                    <div></div>\n                </React.Fragment>\n            )\n        }\n    </StyledCardContainer>\n\n);\n\nexport default RecipesCategoryCardList;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledToolBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\n","import styled from 'styled-components';\n\nexport const StyledEmptyMessage = styled.p`\n  text-align: center;\n  margin: 2rem 0;\n  color: ${props => props.theme.colors.pageBorderColor1};\n`;","import React, { FC } from 'react';\n\nimport { StyledEmptyMessage } from './empty-message.styles';\n\ninterface Props {\n    msg: string;\n}\n\nexport const EmptyMesssage: FC<Props> = ({ msg }) => (\n    <StyledEmptyMessage>\n        {msg}\n    </StyledEmptyMessage>\n)\n\nexport default EmptyMesssage;","import React, { useState, useContext } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport BulkOperationControls from \"../../components/atoms/bulk-opperation-controls/bulk-opperation-controls.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap, StyledToolBar } from './recipes.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst checkMixedList = (bulkList: string[], recipeItems: iRecipe[], userId: string | undefined) => {\n    let ret = false;\n    if (!userId) {\n        return ret;\n    }\n\n    for (let i = 0; i < recipeItems.length; i++) {\n        const item = recipeItems[i];\n\n        if (bulkList.findIndex((bulkItem) => bulkItem === item._id && item.user_id !== userId) !== -1) {\n            ret = true;\n            break;\n        }\n    }\n    return ret;\n};\n\nconst RecipesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [isMixedList, setIsMixedList] = useState<boolean>(false);\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user, isLoggedIn } = useContext(AuthContext);\n    const [selectMode, setSelectMode] = useState<boolean>(false);\n    const [bulkList, setBulkList] = useState<string[]>([]);\n    const [bulkCount, setBulkCount] = useState<number>(0);\n\n    const onButtonClick = () => {\n        setIsGridView(!isGridView);\n        setSelectMode(false);\n\n    };\n\n    const handleEditMode = () => {\n        setSelectMode(!selectMode);\n        setBulkList([]);\n        setBulkCount(0);\n    };\n\n    const handleSelectChange = (id: string | undefined, checked: boolean) => {\n        if (id) {\n            let templist = bulkList;\n            if (checked) {\n                templist.push(id);\n            } else {\n                let idx = templist.findIndex(item => item === id);\n                templist.splice(idx, 1)\n            }\n            setBulkList(templist);\n            setBulkCount(templist.length);\n            let isMixedTemp = checkMixedList(bulkList, recipeItems, user?.userId);\n            setIsMixedList(isMixedTemp);\n        }\n    }\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Recipes ({recipeItems.length})</PageTitle>\n                <StyledToolBar>\n                    {isGridView && isLoggedIn && (\n\n                        <BulkOperationControls\n                            bulkCount={bulkCount}\n                            bulkList={bulkList}\n                            handleEditMode={() => handleEditMode()}\n                            selectMode={selectMode}\n                            isMixedList={isMixedList}\n                        />\n                    )}\n                    <ListGridToggleButton grid={isGridView} onClick={() => onButtonClick()} />\n                </StyledToolBar>\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && recipeItems.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={recipeItems} selectMode={selectMode} onSelectChange={handleSelectChange} />\n                ) : (\n                    <RecipeList recipes={recipeItems} />\n                )\n            }\n            {\n                !isLoading && recipeItems.length === 0 &&\n                <EmptyMesssage msg={'There are no recipes.'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipesPage;","import { iUserItem } from \"../../interfaces/users/users.interface\";\n\nexport const addUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   userList.push(user);\n   const sorted = userList.sort(\n      (a: iUserItem, b: iUserItem) => (\n          a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n      ));\n   return sorted;\n}\n\nexport const removeUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   const idx = userList.findIndex(u => u.id === user.id);\n   userList.splice(idx, 1);\n   return userList;\n}\n\n","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\nimport {iUserItem} from '../../interfaces/users/users.interface'\n\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USERS_ENDPOINT;\nconst deleteUserEndpoint = process.env.REACT_APP_USER_DELETE;\n\ninterface iGetUsersResp  {\n    users: iUserItem[];\n}\n\n\nexport const getUsers = async () => {\n    try {\n\n        const resp = await axios.get(`${baseURL}${endpoint}`);\n        return resp.data\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const deleteUserAccount = async (user: iUser) => {\n\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${deleteUserEndpoint}/${user.userId}`,\n            headers: {\n                Authorization: `Bearer ${user.token ? user.token : 'none'}`\n            }\n        })\n    } catch (err) {\n        throw(err);\n    }\n}\n","import React, { createContext, FC, useState, useEffect } from 'react';\n\nimport USERS_LIST from './users-collection.data.json';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { addUserItem, removeUserItem } from './users.utilities';\nimport { getUsers } from '../../services/users/users.service';\n\n\ntype UsersContextType = {\n    userItems: iUserItem[];\n    isLoading: boolean;\n    userCount: number;\n    addUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n    removeUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n}\n\nexport const UsersContext = createContext<UsersContextType>({\n    userItems: [],\n    userCount: 0,\n    isLoading: true,\n    addUserItem: addUserItem,\n    removeUserItem: removeUserItem\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\n\nconst UsersProvider: FC<Props> = ({ children }) => {\n    const [userItems, setUserItems] = useState<iUserItem[]>([]);\n    const [userCount, setUserCount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n\n        getUsers().then(({ users }) => {\n            if (users) {\n                const sorted = users.sort(\n                    (a: iUserItem, b: iUserItem) => (\n                        a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n                    ));\n                setUserItems(sorted);\n                setUserCount(users.length);\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, [])\n\n    return (<UsersContext.Provider value={{\n        userItems,\n        userCount,\n        isLoading,\n        addUserItem,\n        removeUserItem\n    }}>\n        {children}\n    </UsersContext.Provider>)\n}\n\nexport default UsersProvider;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { UsersContext } from \"../../providers/users/users.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap } from './favorites.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst FavoritesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [filteredRecipes, setFilteredRecipes] = useState<iRecipe[]>([]);\n    const { recipeItems, recipeCount, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const { userItems } = useContext(UsersContext);\n\n    const onButtonClick = () => setIsGridView(!isGridView);\n\n    useEffect(() => {\n        if (user) {\n            let filteredItems: iRecipe[] = recipeItems.filter(r => r.favorites?.length && user && r.favorites.some(f => f.userId === user.userId))\n            setFilteredRecipes(filteredItems);\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Favorite Recipes ({filteredRecipes.length})</PageTitle>\n                <ListGridToggleButton grid={isGridView} onClick={onButtonClick} />\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={filteredRecipes} />\n                ) : (\n                    <RecipeList recipes={filteredRecipes} />\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length === 0 &&\n                <EmptyMesssage msg={'No favorite recipes'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default FavoritesPage;","import styled from 'styled-components';\n\nexport const StyledFieldWrapper = styled.div`\n    margin-bottom: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledFieldWrapper } from './field-wrapper.styles'\n\ninterface Props {\n    children?: React.ReactNode\n}\n\n\nconst FieldWrapper: FC<Props> = ({ children }) => {\n\n    return (\n        <StyledFieldWrapper>\n            {children}\n        </StyledFieldWrapper>\n    );\n}\n\nexport default FieldWrapper;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.div`\n    .select {\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n    }\n`;\n","import React, { useState, FC } from \"react\";\n\nimport { useField, Field } from \"formik\";\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledSelect, StyledLabel } from './select-option-field.styles';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    as?: string;\n    id: string;\n    label?: string;\n    name: string;\n    dataType?: string;\n    optionData: iKeyValuePair[] | undefined;\n    defaultOptionText?: string;\n    required?: boolean;\n    disabled?: boolean;\n}\n\nconst SelectOptionField: FC<Props> = ({\n    as,\n    id,\n    label,\n    name,\n    dataType,\n    optionData,\n    defaultOptionText,\n    required = false,\n    disabled = false,\n}) => {\n    const [field, meta, helpers] = useField({ name, id });\n    const { setValue } = helpers;\n\n    if (!optionData) {\n        optionData = [];\n    }\n\n    if (dataType === 'boolean') {\n        if (field.value === 'true' || field.value === 'false') {\n            field.value === 'true' ? setValue(true, false) : setValue(false, false);\n        }\n    }\n\n\n    return (\n        <FieldWrapper>\n            {label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledSelect>\n                <Field\n                    as=\"select\"\n                    className='select'\n                    {...field}\n                    id={id}\n                    name={name}\n                    datatype={dataType || \"string\"}\n                    disabled={disabled}\n                    required={required}\n                >\n                    {defaultOptionText && <option value=\"\">{defaultOptionText}</option>}\n                    {\n                        optionData.map((item: iKeyValuePair) => (\n                            <option key={item.id} value={item.id}>\n                                {item.name}\n                            </option>\n                        ))\n                    }\n                </Field>\n            </StyledSelect>\n        </FieldWrapper>\n    );\n}\n\nexport default SelectOptionField;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledVisibility = styled(Visibility)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledVisibilityOff = styled(VisibilityOff)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledEyeButton = styled.button`\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    width: 100%;\n    font-size: 1rem;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledEyeLabel = styled(StyledLabel)`\n    display: flex;\n    align-items: center;\n    > span {\n        margin-right: 0.5rem;\n    }\n`;\n","import React from 'react';\nimport { useField } from 'formik';\n\nimport { StyledInput, StyledLabel, StyledVisibility, StyledVisibilityOff, StyledEyeButton, StyledEyeLabel } from './text-field.styles';\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\n\ninterface iTextField {\n    name: string;\n    id: string;\n    placeholder?: string;\n    required?: boolean;\n    label?: string;\n    type?: 'text' | 'password';\n    isVisible?: boolean;\n    onVisibilityChange?: () => void;\n}\n\n\nconst RecipeTextField = ({\n    name, id, placeholder, type = \"text\", required = false, label, onVisibilityChange, isVisible }: iTextField) => {\n\n    const [field, meta] = useField({ name, id });\n    return (\n        <FieldWrapper>\n            {onVisibilityChange && (\n                <StyledEyeLabel Required={required} htmlFor={id}>\n                    <span>{label}</span>\n                    {\n                        isVisible ? (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"hide content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibilityOff />\n                            </StyledEyeButton>\n                        ) : (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"show content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibility />\n                            </StyledEyeButton>\n                        )\n                    }\n\n                </StyledEyeLabel>\n            )}\n            {!onVisibilityChange && label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledInput\n                id={id}\n                placeholder={placeholder}\n                required={required}\n                {...field}\n                type={type}\n            />\n        </FieldWrapper>\n    );\n}\n\nexport default RecipeTextField;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\ninterface iStyledProps {\n    ison: string;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    margin: 1.5rem 0 1rem 0;\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n`;\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;","import React, { FC } from 'react';\n\nimport { useField } from 'formik';\nimport FieldWrapper from '../field-wrapper/field-wrapper.component';\nimport { StyledFieldWrapper, StyledCheckBox, StyledLabel, CheckBoxIcon } from './checkbox-field.styles';\n\ninterface Props {\n    name: string;\n    required?: boolean;\n    label?: string;\n    id: string;\n}\n\nconst CheckBoxField: FC<Props> = ({ required = false, label, name, id }) => {\n    const [field, meta] = useField({ name, id, type: 'checkbox' });\n    return (\n        <StyledFieldWrapper>\n            {\n                label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)\n            }\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={field.value ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                required={required}\n                id={id}\n                {...field}\n            />\n        </StyledFieldWrapper>\n    )\n}\n\nexport default CheckBoxField;","import { Size } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport {FormButtons } from './form-button.component';\n\n\ninterface iButtonStyleProps {\n    FormButton: FormButtons;\n    Size?: Size;\n}\n\nexport const StyledPrimaryButton = styled.button<iButtonStyleProps>`\n    margin: 0 0 1rem 0;\n    width: 100%;\n\n    @media (min-width: 414px) {\n        margin: 0 0 0 0;\n        margin-right: ${props => props.FormButton === FormButtons.Primary ? '1rem' : 0 };\n        width: auto;\n    }\n    font-size: ${props => props.Size ? props.theme.fontSizes.small : props.theme.fontSizes.regular};\n    background-color: ${props => props.FormButton === FormButtons.Primary ?\n        props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n    border: 0;\n    padding: 0.5rem 1rem;\n    color: ${props => props.FormButton === FormButtons.Primary ?\n        '#fff' : props.theme.colors.pageForeground1};\n    cursor: pointer;\n    &:hover {\n        background-color: ${props => props.FormButton === FormButtons.Primary ?\n            props.theme.colors.pageHighLight2 : props.theme.colors.pageBorderColor1};\n    }\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        &:hover {\n            background-color: ${props => props.FormButton === FormButtons.Primary ?\n                props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n        }\n    }\n\n`;","import React, { FC, useContext } from 'react';\nimport { iMainNavItem } from '../../../interfaces/nav/nav.interface';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport CloseButton from '../../atoms/close-button/close-button.component';\nimport ThemeSwitcher from '../theme-switcher/theme-switcher.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport {\n    StyledMenuOuter,\n    StyledMenuHeader,\n    StyledNavUl,\n    StyledListItem,\n    StyledNavLink,\n    StyledFavorite,\n    StyledHome, StyledUsers, StyledMenu, StyledWidget, StyledSetting, StyledAddCircle, StyledNotifications\n} from './main-menu.styles';\n\ntype Props = {\n    isOpen: boolean;\n    toggleIsOpen: () => void;\n    items: iMainNavItem[];\n}\n\nexport enum Icons {\n    home = 0,\n    users = 1,\n    list = 2,\n    my = 3,\n    add = 4,\n    settings = 5,\n    favorite = 6,\n    notification = 7\n}\n\nconst returnIconsByKey = (id: Icons) => {\n    const map = {\n        \"0\": StyledHome,\n        \"1\": StyledUsers,\n        \"2\": StyledMenu,\n        \"3\": StyledWidget,\n        \"4\": StyledAddCircle,\n        \"5\": StyledSetting,\n        \"6\": StyledFavorite,\n        \"7\": StyledNotifications\n    };\n    return map[id] || null;\n}\n\nconst MainMenu: FC<Props> = ({ isOpen, toggleIsOpen, items }) => {\n    const { user } = useContext(AuthContext);\n\n    const itemsWithIcons = items.map((i, idx) => {\n        return {\n            ...i,\n            icon: returnIconsByKey(i.svgIcon)\n        }\n    });\n\n    return (\n        <StyledMenuOuter isOpen={isOpen}>\n            <div>\n                <StyledMenuHeader>\n                    <NavBrand isOpen={isOpen} toggleClose={toggleIsOpen} />\n                    <CloseButton closeHandler={toggleIsOpen} />\n                </StyledMenuHeader>\n                <StyledNavUl>\n                    {\n                        itemsWithIcons.map((item, idx) => (\n                            <StyledListItem key={`item${idx}`} onClick={() => toggleIsOpen()}>\n                                <StyledNavLink to={\n                                    item.params ? `${item.route}/${user?.userId}` : item.route\n                                }>\n                                    {item.icon !== null && <item.icon />}\n                                    {item.text}\n                                </StyledNavLink>\n                            </StyledListItem>\n                        ))\n                    }\n                </StyledNavUl>\n            </div>\n            <StyledNavUl>\n                <StyledListItem>\n                    <ThemeSwitcher />\n                </StyledListItem>\n            </StyledNavUl>\n        </StyledMenuOuter>\n    );\n}\n\nexport default MainMenu;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    `;\n    \n    export const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    `;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledPrimaryButton = styled.button`\n    font-size: ${props => props.theme.fontSizes.regular};\n    background-color: ${props => props.theme.colors.navBarBackground};\n    border: 0;\n    padding: 0.5rem 1rem;\n    margin: 0 0 0 0;\n    color: #fff;\n    cursor: pointer;\n    &:hover {\n        background: ${props => props.theme.colors.pageHighLight2}\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n\n\n","import styled from 'styled-components';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\n\r\n\r\nexport const StyledButtonToggle = styled.button`\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: ${props => props.theme.colors.pageLinkColor1};\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\ninterface iStyledToggleWrap {\r\n    Space: 'yes' | 'no';\r\n}\r\n\r\nexport const StyledToggleWrap = styled.div<iStyledToggleWrap>`\r\n    color: ${(props) => props.theme.colors.pageForeground1};\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n    padding: ${props => props.Space === 'yes' ? '1rem 0' : '0 0 1rem 0'};\r\n`;\r\n\r\nexport const StyledArrowDown = styled(KeyboardArrowDown)`\r\n    font-size: 1.5rem !important;\r\n`;\r\n\r\nexport const StyledArrowUp = styled(KeyboardArrowUp)`\r\n    font-size: 1.5rem !important;\r\n`;","import React, { FC } from 'react';\r\n\r\nimport { StyledButtonToggle, StyledToggleWrap, StyledArrowDown, StyledArrowUp } from './accordion-toggle.styles'\r\n\r\ntype Props = {\r\n    isOpen: boolean;\r\n    toggleHandler: () => void;\r\n    buttonText: string;\r\n    spacing?: boolean;\r\n}\r\n\r\nconst AccordionToggle: FC<Props> = ({ isOpen, toggleHandler, buttonText, spacing = true }) => (\r\n    <StyledToggleWrap Space={spacing ? 'yes' : 'no'}>\r\n        <StyledButtonToggle\r\n            type=\"button\"\r\n            onClick={() => toggleHandler()}\r\n        >\r\n            <span>{buttonText}</span>\r\n            {\r\n                isOpen ? (\r\n                    <StyledArrowUp />\r\n                ) : (\r\n                    <StyledArrowDown />\r\n                )\r\n            }\r\n        </StyledButtonToggle>\r\n    </StyledToggleWrap>\r\n)\r\n\r\nexport default AccordionToggle;","import React, { useContext, useState, useEffect } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './add-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst AddRecipeForm = () => {\n    const { addToast } = useToasts();\n    const { token, user } = useContext(AuthContext);\n    const { recipeItems, setCount, getCategoryTags, addRecipeToList } = useContext(RecipesContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n    let navigate = useNavigate();\n    const formValuesInitial = {\n        user_id: user?.userId || '1',\n        user: user ? user.name : 'none',\n        r_name: '',\n        shared: false,\n        rating: 0,\n        cat_id: '',\n        category: '',\n        ingredients: [''],\n        steps: [''],\n        comments: []\n    };\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n    }, [recipeItems, getCategoryTags]);\n\n\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n\n                    const catName = catData.find(i => i.id === values.cat_id);\n                    const cat_id = Number(values.cat_id);\n                    const vals = {\n                        ...values,\n                        category: catName?.name || '',\n                        cat_id: cat_id\n                    }\n\n                    addRecipe(vals, token).then((resp) => {\n                        setSubmitting(false);\n                        setCurrentRecipeItems(addRecipeToList(currentRecipeItems, resp));\n                        setCount(currentRecipeItems.length)\n                        addToast(\n                            'Success',\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"r_name\"\n                            label=\"Recipe Name\"\n                            name=\"r_name\"\n                            placeholder=\"Ex: Chocolate Cake\"\n                            required\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"cat_id\"\n                            name=\"cat_id\"\n                            label=\"Category\"\n                            required={true}\n                            defaultOptionText=\"Select Recipe Category\"\n                            optionData={catData}\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"rating\"\n                            name=\"rating\"\n                            label=\"Rating\"\n                            required={true}\n                            defaultOptionText=\"Ex: Four Stars\"\n                            optionData={[\n                                { id: '1', name: 'One Star' },\n                                { id: '2', name: 'Two Stars' },\n                                { id: '3', name: 'Three Stars' },\n                                { id: '4', name: 'Four Stars' }\n                            ]}\n                        />\n\n                        <CheckBoxField\n                            id=\"shared\"\n                            name=\"shared\"\n                            label=\"Share Recipe\"\n                        />\n\n                        <div>\n                            <FieldArray\n                                name=\"ingredients\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.ingredients && values.ingredients.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Ingredients'\n                                                    isOpen={isOpenIngredients}\n                                                    toggleHandler={() => handleToggleIngredients()}\n                                                />\n                                                <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                    values.ingredients.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, '')}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Ingredients\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"steps\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.steps && values.steps.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Steps'\n                                                    isOpen={isOpenSteps}\n                                                    toggleHandler={() => handleToggleSteps()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.steps.map((item, index) => (\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(index, '')}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Steps\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"comments\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.comments && values.comments.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Comments'\n                                                    isOpen={isOpenComments}\n                                                    toggleHandler={() => handleToggleComments()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.comments.map((item, index) => (\n\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(\n                                                                                index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                            )}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })\n                                                }>\n                                                Add comment\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Add Recipe'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                        <FormButton\n                            type=\"button\"\n                            buttonText={'Cancel'}\n                            FormButton={FormButtons.Secondary}\n                            onClick={() => navigate(`/`)}\n                            disabled={false}\n                        />\n                    </Form>\n\n                )}\n            </Formik>\n        </StyledFormWrapper >\n    );\n}\n\nexport default AddRecipeForm;\n","import React from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport AddRecipeForm from \"../../templates/add-recipe-form/add-recipe-form.component\";\n\nconst AddRecipePage = () => (\n    <MainSection>\n        <PageTitle>Add Recipe</PageTitle>\n        <AddRecipeForm />\n    </MainSection>\n);\n\nexport default AddRecipePage;","import styled from 'styled-components';\n\nexport const DetailsTopWrapper = styled.div`\n    position: relative;\n    > h2 {\n        max-width: 60%;\n    }\n`;\n\nexport const MetaInfoTop = styled.div`\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    min-width: 200px;\n    padding: 1rem;\n`;\n\nexport const MetaInfoBottom = styled.div`\n    padding: 1rem;\n    color: ${(props) => props.theme.colors.pageForegroundColor1};\n`;\n\nexport const MetaInfoWrapper = styled.div`\n    @media (min-width: 595px) {\n        position: absolute;\n        top: 0;\n        right: 0;\n    }\n    color: #fff;\n    padding: 0 0 1rem 0;\n`;","import styled from \"styled-components\";\n\nexport const StyledListItem = styled.li`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${(props) => props.theme.colors.pageBackground2};\n`;\n\nexport const UserWrapper = styled.div`\n    display: flex;\n    justify-conent: flex-start;\n    align-items: center;\n`;","import styled from 'styled-components';\n\nexport const StyledAvatar = styled.span`\n    text-transform: capitalize;\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    color: #fff;\n    font-size: 1.3em;\n    padding: 0.5rem;\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledAvatar } from './user-avatar.styles';\n\ninterface Props {\n    name: string;\n}\n\n\nconst UserAvatar: FC<Props> = ({ name }) => (\n    <StyledAvatar>{name.slice(0, 1)}</StyledAvatar>\n);\n\nexport default UserAvatar;","import React, { FC } from \"react\";\n\nimport { StyledListItem, UserWrapper } from \"./comments-list-item.styles\";\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\n\ninterface Props {\n    item: { comment: string, user: string }\n}\n\nconst CommentItem: FC<Props> = ({ item }) => {\n\n    const { user, comment } = item;\n    return (\n        <StyledListItem>\n            <UserWrapper>\n                <UserAvatar name={user} />\n                <div>\n                    <div>{user}</div>\n                    <div>\n                        {comment}\n                    </div>\n                </div>\n            </UserWrapper>\n        </StyledListItem>\n    );\n}\n\nexport default CommentItem;","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n    text-align: right;\n    font-size: 14px;\n    float: right;\n`;","import React, { FC, useContext, useEffect, useState } from 'react';\n\nimport { StyledDiv } from './recipe-content-owner.styles';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\ninterface Props {\n    userId: string;\n    shared: boolean;\n}\n\nconst RecipeContentOwner: FC<Props> = ({ userId, shared }) => {\n    const [user, setUser] = useState<iUserItem | null>(null);\n\n    const { userItems } = useContext(UsersContext);\n    const action = shared ? 'Shared by' : 'Posted by';\n\n    useEffect(() => {\n        const findUser = userItems.find(u => u.id === userId);\n\n        if (findUser) {\n            setUser(findUser);\n        }\n    }, [userItems])\n\n    return (\n        <StyledDiv>\n            <span>{action} {user?.name || 'admin'}</span>\n        </StyledDiv>\n    );\n}\n\nexport default RecipeContentOwner;","import styled from \"styled-components\";\n\nexport const StyledDetailsDiv = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledH4 = styled.h4`\n    font-size: 1.25rem;\n    margin: 0.5em 0;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75em 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground2};\n    margin-bottom: 0.5rem;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        overflow: hidden;\n    `}\n`;\n\n\n\n\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useToasts } from 'react-toast-notifications';\n\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { StyledFormWrapper, StyledAccordionContent } from './add-comment.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipeComment } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n    handleSubmit: (recipe: iRecipe) => void;\n}\n\ninterface Values {\n    comment: string;\n    user: string;\n    userId: string;\n}\n\nconst AddCommentForm: FC<Props> = ({ recipeId, handleSubmit }) => {\n    const { addToast } = useToasts();\n\n    const { token, user } = useContext(AuthContext);\n\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [showForm, setShowForm] = useState(false);\n\n    useEffect(() => {\n        if (user) {\n            setFormValuesInitial({\n                user: user.name,\n                comment: '',\n                userId: user.userId\n            })\n        }\n    }, [user, setFormValuesInitial]);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n\n    return (\n        <React.Fragment>\n            <AccordionToggle\n                toggleHandler={() => toggleForm()}\n                isOpen={showForm}\n                buttonText=\"Add Comment\"\n                spacing={false}\n            />\n            {\n                showForm && (<StyledAccordionContent Collapsed={showForm ? 'expanded' : 'collapsed'}>\n                    <StyledFormWrapper>\n                        {\n                            formValuesInitial && (\n                                <Formik\n                                    initialValues={formValuesInitial}\n                                    onSubmit={(\n                                        values: Values,\n                                        { setSubmitting }: FormikHelpers<Values>\n                                    ) => {\n                                        addRecipeComment(values, recipeId || '', token).then((resp) => {\n                                            setSubmitting(false);\n                                            handleSubmit(resp);\n                                            setShowForm(false);\n                                        }).catch((err) => {\n                                            addToast(\n                                                `Error: ${err.message}`,\n                                                {\n                                                    appearance: 'error',\n                                                    autoDismiss: false\n                                                }\n                                            );\n                                        })\n                                    }}\n                                >\n                                    {({ values, resetForm, isValid, dirty }) => (\n                                        <Form>\n\n                                            <RecipeTextField\n                                                id=\"comment\"\n                                                name=\"comment\"\n                                                placeholder=\"Add a comment\"\n                                                required\n                                            />\n\n                                            <FormButton\n                                                type=\"submit\"\n                                                buttonText={'Ok'}\n                                                FormButton={FormButtons.Primary}\n                                                disabled={!dirty || !isValid}\n                                            />\n                                        </Form>\n                                    )}\n                                </Formik>\n                            )\n                        }\n                    </StyledFormWrapper>\n                </StyledAccordionContent>)\n            }\n        </React.Fragment>\n    );\n}\n\nexport default AddCommentForm;\n","import React, { FC, useEffect, useContext, useState } from \"react\";\n\nimport CommentItem from '../../atoms/comments-list-item/comments-list-item.component';\nimport RecipeContentOwner from '../../atoms/recipe-content-owner/recipe-content-owner.component';\nimport { StyledDetailsDiv, StyledH4, StyledListItem, StyledList, StyledHRule } from './recipe-view-details.styles';\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport AddCommentForm from \"../../../templates/add-comment/add-comment.component\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\ninterface Props {\n    recipe?: iRecipe;\n    id?: string;\n}\n\nconst RecipeViewDetails: FC<Props> = ({ id }) => {\n\n    const { recipeItems, editRecipe } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [recipe, setRecipe] = useState<iRecipe | undefined | null>(undefined);\n\n    const onCommentSubmit = (recipe: iRecipe) => {\n        editRecipe(recipeItems, recipe);\n        setRecipe(recipe);\n    }\n\n    useEffect(() => {\n        const tempRecipe = recipeItems.find(r => r._id === id);\n        if (tempRecipe) {\n            setRecipe(tempRecipe);\n        } else {\n            setRecipe(null);\n        }\n    }, [recipeItems])\n\n    if (!recipe) {\n        return (\n            <StyledDetailsDiv>\n                <p>No recipe found</p>\n            </StyledDetailsDiv>\n        )\n    }\n\n    return (\n        <StyledDetailsDiv>\n            <StyledH4>Ingredients</StyledH4>\n            <StyledList>\n                {\n                    recipe.ingredients?.map((item, key) => (\n                        <StyledListItem key={key}>{item}</StyledListItem>\n                    ))\n                }\n            </StyledList>\n            <StyledH4>Steps</StyledH4>\n            <ul>\n                {\n                    recipe.steps?.map((item, key) => (<StyledListItem key={key}>{item}</StyledListItem>))\n                }\n            </ul>\n            <StyledHRule />\n            <ul>\n                {\n                    recipe.comments?.map((item, key) => (\n                        <CommentItem key={key} item={item} />\n                    ))\n                }\n            </ul>\n            <RecipeContentOwner shared={recipe.shared} userId={recipe.user_id} />\n            {\n                user !== null && (\n                    <AddCommentForm recipeId={id} handleSubmit={onCommentSubmit} />\n                )\n            }\n        </StyledDetailsDiv>\n    );\n}\n\nexport default RecipeViewDetails;","import styled from 'styled-components';\nimport { Delete, Edit, Share, Print, Favorite, FavoriteBorderOutlined } from '@material-ui/icons';\n\nexport const StyledTextarea = styled.textarea`\n    width: 1px;\n    height: 1px;\n    margin: 0;\n    visibility: hidden;\n`;\n\nexport const StyledFavoriteIcon = styled(Favorite)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledFavoriteOutlineIcon = styled(FavoriteBorderOutlined)`\n    font-size: 1.5rem !important;\n`;\n\n\nexport const StyledEditIcon = styled(Edit)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledDeleteIcon = styled(Delete)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledShareIcon = styled(Share)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledPrintIcon = styled(Print)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledRecipeActionBar = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`;\n\nexport const StyledButton = styled.button`\n    opacity: 0.5;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    transition: opacity ease-in-out 300ms;\n    cursor: pointer;\n    background-color: transparent;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    margin: 0 1rem 0 0;\n    &:last-child {\n        margin: 0;\n    }\n    &:hover {\n        transition: opacity ease-in-out 300ms;\n        opacity: 1;\n    }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { useToasts } from 'react-toast-notifications';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\nimport { removeRecipe, addFavorite, removeFavorite } from '../../../services/recipes/recipes.services';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nimport {\n    StyledDeleteIcon,\n    StyledEditIcon,\n    StyledPrintIcon,\n    StyledShareIcon,\n    StyledRecipeActionBar,\n    StyledButton,\n    StyledTextarea,\n    StyledFavoriteOutlineIcon,\n    StyledFavoriteIcon\n} from './recipe-action-bar.styles';\n\nconst RecicipeActionBar = () => {\n    let { id } = useParams();\n    let navigate = useNavigate();\n    const { addToast } = useToasts();\n    const { recipeItems, deleteRecipe, setSpinner, setCount,\n        editRecipe } = useContext(RecipesContext);\n    const { token, isLoggedIn, user } = useContext(AuthContext);\n\n    const [favDisabled, setFavDisabled] = useState<boolean>(false);\n    const [isFav, setIsFav] = useState<boolean>(false);\n    const [recipe, setRecipe] = useState<iRecipe | undefined>(undefined);\n    const [open, setOpen] = useState<boolean>(false);\n    const [copied, setCopied] = useState<boolean>(false);\n    const [value, setValue] = useState<string>('');\n    const [isOwner, setIsOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        const recipe = recipeItems.find(r => r._id === id);\n        const base = process.env.REACT_APP_SHARE_URL;\n\n        if (recipe) {\n            setRecipe(recipe);\n            setValue(`${base}/recipes/${recipe._id}`)\n        }\n    }, [recipeItems, id]);\n\n    useEffect(() => {\n        if (recipe && user && recipe.user_id === user.userId) {\n            setIsOwner(true);\n        }\n    }, [user, recipe]);\n\n    useEffect(() => {\n        if (recipe?.favorites) {\n            let tempFav = recipe.favorites.find(f => f.userId === user?.userId);\n            if (tempFav) {\n                setIsFav(true)\n            }\n        }\n\n    }, [recipe, user]);\n\n    const handleDelete = () => {\n        setSpinner(true);\n        if (recipe) {\n            removeRecipe(recipe, token).then((resp) => {\n                deleteRecipe(recipeItems, recipe);\n                setCount(recipeItems.length);\n                setSpinner(false);\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                navigate('/');\n\n            }).catch((err) => {\n                setSpinner(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleFavorite = () => {\n        setFavDisabled(true);\n        if (isFav) {\n            removeFavorite(id, user?.userId, token).then((resp) => {\n\n                if (resp.message === 'favorite removed') {\n                    setIsFav(false);\n\n                    if (user && recipe) {\n                        let tempRecipe: iRecipe = recipe;\n                        if (!tempRecipe.favorites) {\n                            tempRecipe.favorites = [];\n                        }\n                        let idx = tempRecipe?.favorites.findIndex(item => item.userId === user.userId);\n                        tempRecipe.favorites?.splice(idx, 1);\n                        setIsFav(false);\n                        editRecipe(recipeItems, tempRecipe);\n                    }\n                }\n                setFavDisabled(false);\n            }).catch(err => console.log(err.message));\n        } else {\n            addFavorite(id, user?.userId, token).then((resp) => {\n\n                if (resp.message === 'favorite added') {\n                    if (user && recipe) {\n                        setIsFav(true);\n                        editRecipe(recipeItems, resp.data);\n                    }\n                }\n                setFavDisabled(false);\n            }).catch(err => console.log(err.message));\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <StyledRecipeActionBar>\n\n                {\n                    isLoggedIn && (\n                        <React.Fragment>\n                            {\n                                isFav ? (\n                                    <StyledButton title=\"Remove Favorite\" disabled={favDisabled} onClick={() => handleFavorite()}>\n                                        <StyledFavoriteIcon />\n                                    </StyledButton>\n                                ) : (\n                                    <StyledButton title=\"Add Favorite\" disabled={favDisabled} onClick={() => handleFavorite()}>\n                                        <StyledFavoriteOutlineIcon />\n                                    </StyledButton>\n                                )\n                            }\n                            {\n                                isOwner && (\n                                    <React.Fragment>\n                                        <StyledButton title=\"Delete\" onClick={() => handleClickOpen()}>\n                                            <StyledDeleteIcon />\n                                        </StyledButton>\n\n                                        <StyledButton title=\"Edit\" onClick={() => navigate(`/edit-recipe/${id}`)}>\n                                            <StyledEditIcon />\n                                        </StyledButton>\n                                    </React.Fragment>\n                                )\n                            }\n                        </React.Fragment>\n                    )\n                }\n\n                <CopyToClipboard\n                    onCopy={() => setCopied(true)}\n                    text={value}\n                >\n                    <StyledButton title={copied ? `Copied URL` : 'Share'}>\n                        <StyledShareIcon />\n                    </StyledButton>\n                </CopyToClipboard>\n\n                <StyledButton title=\"Print\" onClick={() => window.print()}>\n                    <StyledPrintIcon />\n                </StyledButton>\n            </StyledRecipeActionBar>\n            <ConfirmDialog\n                open={open}\n                title={\"Are you sure?\"}\n                confirmText={`Delete ${recipe?.r_name} recipe?`}\n                handleCancel={handleClose}\n                handleConfirm={handleDelete}\n            />\n            <StyledTextarea\n                value={value}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    setCopied(false);\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default RecicipeActionBar;\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { DetailsTopWrapper, MetaInfoWrapper, MetaInfoBottom, MetaInfoTop } from './view-recipe.styles';\nimport RecipeViewDetails from '../../components/molecules/recipe-view-details/recipe-view-details.component';\nimport RecipeRating from '../../components/atoms/rating/rating.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport RecipeActionBar from '../../components/atoms/recipe-action-bar/recipe-action-bar.component';\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { SpinnerOuter } from \"../../components/molecules/spinner/spinner.styles\";\n\nconst RecipeDetailPage = () => {\n    const { id } = useParams();\n\n    const { recipeItems, isLoading, setSpinner } = useContext(RecipesContext);\n    const recipe = recipeItems.find(r => r._id === id);\n\n    return (\n        <MainSection>\n            {\n                isLoading && (\n                    <React.Fragment>\n                        <PageTitle>Recipe Details</PageTitle>\n                        <SpinnerOuter>\n                            <Spinner />\n                        </SpinnerOuter>\n                    </React.Fragment>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <DetailsTopWrapper>\n                            <PageTitle>{recipe?.r_name} </PageTitle>\n                            <MetaInfoWrapper>\n                                <MetaInfoTop>\n                                    <RecipeRating rating={recipe?.rating} />\n                                    <span>Cateory: {recipe?.category}</span>\n                                </MetaInfoTop>\n                                <MetaInfoBottom>\n                                    <RecipeActionBar />\n                                </MetaInfoBottom>\n                            </MetaInfoWrapper>\n                        </DetailsTopWrapper>\n                        <RecipeViewDetails recipe={recipe} id={id} />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipeDetailPage;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n`;\n\nexport const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n    &:disabled {\n        opacity: 0.7;\n        border: none;\n        padding: 0;\n        margin-top: -0.5rem;\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './edit-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { updateRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    user: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst EditRecipeForm: FC<Props> = ({ recipeId }) => {\n    const { addToast } = useToasts();\n    const { recipeItems, getCategoryTags, editRecipe } = useContext(RecipesContext);\n    const { token, user } = useContext(AuthContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n\n        const foundRecipe = recipeItems.find(r => r._id && r._id === recipeId);\n        if (foundRecipe) {\n\n            setFormValuesInitial({\n                _id: foundRecipe._id || '',\n                user_id: foundRecipe.user_id,\n                user: foundRecipe.user_id,\n                r_name: foundRecipe.r_name,\n                shared: foundRecipe.shared,\n                rating: foundRecipe.rating,\n                cat_id: foundRecipe.cat_id.toString(),\n                category: foundRecipe.category,\n                ingredients: foundRecipe.ingredients || [],\n                steps: foundRecipe.steps || [],\n                comments: foundRecipe.comments || []\n            })\n        }\n\n    }, [recipeItems, getCategoryTags, recipeId]);\n\n    return (\n        <StyledFormWrapper>\n            {\n                formValuesInitial && (\n                    <Formik\n                        initialValues={formValuesInitial}\n                        onSubmit={(\n                            values: Values,\n                            { setSubmitting }: FormikHelpers<Values>\n                        ) => {\n\n                            const catName = catData.find(i => i.id === values.cat_id);\n                            const cat_id = Number(values.cat_id);\n                            const vals = {\n                                ...values,\n                                category: catName?.name || '',\n                                cat_id: cat_id\n                            }\n\n                            updateRecipe(vals, token).then((resp) => {\n                                addToast(\n                                    'Success',\n                                    {\n                                        appearance: 'success',\n                                        autoDismiss: true\n                                    }\n                                );\n\n                                setCurrentRecipeItems(editRecipe(currentRecipeItems, resp));\n                                setSubmitting(false);\n                                navigate('/')\n                            }).catch((err) => {\n                                addToast(\n                                    `Error: ${err.message}`,\n                                    {\n                                        appearance: 'error',\n                                        autoDismiss: false\n                                    }\n                                );\n                            })\n                        }}\n                    >\n                        {({ values, resetForm, isValid, dirty }) => (\n                            <Form>\n\n                                <RecipeTextField\n                                    id=\"r_name\"\n                                    label=\"Recipe Name\"\n                                    name=\"r_name\"\n                                    placeholder=\"Ex: Chocolate Cake\"\n                                    required\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"cat_id\"\n                                    name=\"cat_id\"\n                                    required={true}\n                                    label=\"Category\"\n                                    defaultOptionText=\"Select Recipe Category\"\n                                    optionData={catData}\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"rating\"\n                                    name=\"rating\"\n                                    required={true}\n                                    label=\"Rating\"\n                                    defaultOptionText=\"Ex: Four Stars\"\n                                    optionData={[\n                                        { id: '1', name: 'One Star' },\n                                        { id: '2', name: 'Two Stars' },\n                                        { id: '3', name: 'Three Stars' },\n                                        { id: '4', name: 'Four Stars' }\n                                    ]}\n                                />\n\n                                <CheckBoxField\n                                    id=\"shared\"\n                                    name=\"shared\"\n                                    label=\"Share Recipe\"\n                                />\n\n                                <div>\n                                    <FieldArray\n                                        name=\"ingredients\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.ingredients && values.ingredients.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Ingredients'\n                                                            isOpen={isOpenIngredients}\n                                                            toggleHandler={() => handleToggleIngredients()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                            values.ingredients.map((item, index) => (\n                                                                <StyledInputWrapper key={index}>\n                                                                    <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                                    <FieldArrayItem>\n                                                                        <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                        <InputButtonsWrap>\n                                                                            <StyledSubtractInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.remove(index)}\n                                                                            >\n                                                                                -\n                                                                            </StyledSubtractInputBtn>\n                                                                            <StyledAddInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.insert(index, '')}\n                                                                            >\n                                                                                +\n                                                                            </StyledAddInputBtn>\n                                                                        </InputButtonsWrap>\n                                                                    </FieldArrayItem>\n                                                                </StyledInputWrapper>\n                                                            ))\n                                                        }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Ingredients\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"steps\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.steps && values.steps.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Steps'\n                                                            isOpen={isOpenSteps}\n                                                            toggleHandler={() => handleToggleSteps()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.steps.map((item, index) => (\n                                                                    <StyledInputWrapper key={index}>\n                                                                        <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(index, '')}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Steps\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"comments\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.comments && values.comments.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Comments'\n                                                            isOpen={isOpenComments}\n                                                            toggleHandler={() => handleToggleComments()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.comments.map((item, index) => (\n\n                                                                    <StyledInputWrapper key={index}>\n                                                                        {\n                                                                            item.userId !== user?.userId ? (\n                                                                                <StyledLabel>Comment ({item.user})</StyledLabel>\n                                                                            ) : (\n                                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                            )\n                                                                        }\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                            {\n                                                                                item.userId !== user?.userId ? (\n                                                                                    <StyledInput disabled name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                ) : (\n                                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                )\n                                                                            }\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(\n                                                                                        index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                                    )}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() =>\n                                                        arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })}>\n                                                        Add comment\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <StyledHRule />\n                                <FormButton\n                                    type=\"submit\"\n                                    buttonText={'Update Recipe'}\n                                    FormButton={FormButtons.Primary}\n                                    disabled={!dirty || !isValid}\n                                />\n                                <FormButton\n                                    type=\"button\"\n                                    buttonText={'Cancel'}\n                                    FormButton={FormButtons.Secondary}\n                                    onClick={() => navigate(`/recipes/${values._id}`)}\n                                />\n                            </Form>\n\n                        )}\n                    </Formik>\n                )\n            }\n        </StyledFormWrapper >\n    );\n}\n\nexport default EditRecipeForm;\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport Spinner from '../../components/molecules/spinner/spinner.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { SpinnerOuter } from '../../components/molecules/spinner/spinner.styles';\nimport EditRecipeForm from '../../templates/edit-recipe-form/edit-recipe-form.component';\n\n\nconst EditRecipePage = () => {\n    const { id } = useParams();\n\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <PageTitle>Edit Recipe</PageTitle>\n            {\n                isLoading && <SpinnerOuter><Spinner /></SpinnerOuter>\n            }\n            {\n                !isLoading && <EditRecipeForm recipeId={id}></EditRecipeForm>\n            }\n        </MainSection>\n    );\n}\n\nexport default EditRecipePage;","import styled from 'styled-components';\n\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 75vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\nimport { SpinnerWrapper } from './recipes-by-category.styles';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst RecipesByCategory = () => {\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [filtered, setFiltered] = useState<iRecipe[]>([]);\n    const [catName, setCatName] = useState<string>('');\n    const { cat_id } = useParams();\n    const param_id = cat_id ? parseInt(cat_id) : -1;\n\n    useEffect(() => {\n        if (!isLoading && param_id) {\n            const filterList: iRecipe[] = recipeItems.filter((r) => r.cat_id === param_id && (r.shared || r.user_id === user?.userId));\n\n            if (filterList.length > 0) {\n                setFiltered(filterList);\n                setCatName(filterList[0].category);\n            }\n        }\n    }, [recipeItems, isLoading, param_id]);\n\n    return (\n        <MainSection>\n            <PageTitle>{catName}</PageTitle>\n            <RecipesCategoryCardList recipes={filtered} />\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default RecipesByCategory;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\n\ntype iPost = {\n    email: string;\n    password: string;\n}\n\ntype iSignUp = {\n    name: string;\n    password: string;\n    email: string;\n}\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USER_LOGIN;\nconst signupEndpoint = process.env.REACT_APP_USER_SIGNIN;\n\nexport const logInUser = async ({email, password}: iPost) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${endpoint}`, {email, password});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const signUpUser = async ({name, email, password}: iSignUp) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${signupEndpoint}`, {email, password, name});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}","import React, { useContext } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-in-form.styles';\nimport { logInUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n}\n\nconst SignInForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n\n    const formValuesInitial = {\n        email: '',\n        password: ''\n    }\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password } = values;\n                    logInUser({ email, password }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign In'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignInForm;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledSignUpContainer = styled.p`\n    margin: 1rem 0;\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignInForm from '../../templates/sign-in-form/sign-in-form.component';\nimport { StyledNavLink, StyledSignUpContainer } from './sign-in-sign-up.styles';\n\nconst SignInSignUpPage = () => {\n    return (\n        <MainSection>\n            <PageTitle>Sign in</PageTitle>\n            <SignInForm />\n            <StyledSignUpContainer>\n                New to recipes?&nbsp;\n                <StyledNavLink to=\"/sign-up\">Sign up</StyledNavLink>\n            </StyledSignUpContainer>\n        </MainSection>\n    )\n}\n\nexport default SignInSignUpPage;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import React, { useContext, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-up-form.styles';\nimport { signUpUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n    name: string;\n}\n\nconst SignUpForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { addUserItem, userItems } = useContext(UsersContext);\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n    const [isVisible, setIsVisable] = useState(false);\n\n    const formValuesInitial = {\n        email: '',\n        password: '',\n        name: ''\n    }\n\n    const onVisibilityChange = () => {\n        setIsVisable(!isVisible);\n    };\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password, name } = values;\n                    signUpUser({ email, password, name }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n                        const userToAdd: iUserItem = {\n                            _id: userId,\n                            id: userId,\n                            email: email,\n                            name: name\n                        };\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        addUserItem(userToAdd, userItems);\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Ex: John\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type={isVisible ? 'text' : 'password'}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            isVisible={isVisible}\n                            onVisibilityChange={() => onVisibilityChange()}\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign Up'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignUpForm;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component'\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignUpForm from '../../templates/sign-up-form/sign-up-form.component';\n\nconst SignUpPage = () => (\n    <MainSection>\n        <PageTitle>Sign Up</PageTitle>\n        <SignUpForm />\n    </MainSection>\n);\n\nexport default SignUpPage;","import styled from 'styled-components';\n\nimport {NavLink} from 'react-router-dom';\n\nexport const StyledUserCard = styled.div`\n    display: flex;\n    padding: 1rem;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNoSharedRecipes = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n","import React, { FC } from 'react';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\nimport { StyledUserCard, StyledNavLink, StyledNoSharedRecipes } from './user-card.styles';\n\ninterface Props {\n    name: string;\n    id: string;\n    recipes: string[];\n    isContentOwner: boolean;\n}\n\n\nconst UserCard: FC<Props> = ({ name, id, recipes, isContentOwner }) => (\n    <li>\n        <StyledUserCard>\n            <UserAvatar name={name} />\n            <div>\n                <div>{name}</div>\n                {\n                    recipes.length === 0 && (<StyledNoSharedRecipes>no recipes</StyledNoSharedRecipes>)\n                }\n                {\n                    recipes.length !== 0 && !isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>shared {recipes.length} recipes</span>\n                                ) : (\n                                    <span>shared {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n                {\n                    recipes.length !== 0 && isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>view {recipes.length} recipes </span>\n                                ) : (\n                                    <span>view {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n            </div>\n        </StyledUserCard>\n    </li>\n);\n\nexport default UserCard;\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const StyledUserCardList = styled.ul`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n    color: ${props => props.theme.colors.pageForeground1};\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\nimport UserCard from '../user-card/user-card.component';\nimport EmptyMesssage from '../../atoms/empty-message/empty-message.component';\nimport { StyledUserCardList } from './users-list.styles';\n\nconst UsersList = () => {\n    const { recipeItems } = useContext(RecipesContext);\n    const { userItems } = useContext(UsersContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [users, setUsers] = useState<iUserItem[]>([]);\n\n    useEffect(() => {\n        const usersWithRecipe = userItems.map(user => {\n            let recipes: string[] = [];\n            const isAuthUser = () => authUser && authUser.userId === user.id;\n            if (isAuthUser()) {\n                recipes = recipeItems.filter(\n                    r => r.user_id === user.id\n                ).map(r => r.r_name);\n            } else {\n                recipes = recipeItems.filter(\n                    r => r.shared === true && r.user_id === user.id\n                ).map(r => r.r_name);\n            }\n\n            return {\n                ...user,\n                recipes: recipes || []\n            }\n        })\n        setUsers(usersWithRecipe);\n    }, [userItems, authUser]);\n\n    return (\n        <React.Fragment>\n            {\n                users.length !== 0 ? (\n                    <StyledUserCardList>\n                        {\n                            users.map(({ name, id, recipes }, idx) => (\n                                <UserCard\n                                    key={idx}\n                                    name={name}\n                                    id={id}\n                                    isContentOwner={authUser !== null && authUser.userId === id}\n                                    recipes={recipes || []}\n                                />\n                            ))\n                        }\n                    </StyledUserCardList >\n                ) : (\n                    <EmptyMesssage msg={'There are no users.'} />\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default UsersList;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport UsersList from '../../components/molecules/users-list/users-list.component';\n\nconst UsersPage = () => (\n    <MainSection>\n        <PageTitle>Users </PageTitle>\n        <UsersList />\n    </MainSection>\n);\n\nexport default UsersPage;","import styled from 'styled-components';\n\nexport const StyledOuterDiv = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  line-height: 1.5em;\n  background-color: ${(props) => props.theme.colors.pageBackground1};\n  max-width: 100vw;\n  min-height: 100vh;\n  border-bottom: 1rem solid ${(props) => props.theme.colors.navBarBackground};\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport Restaurant from '@material-ui/icons/Restaurant';\n\nexport const StyledNavBrand = styled(Restaurant)`\n    font-size: 2.0rem !important;\n    margin-right: 0.5rem;\n    margin-left: 0.5rem;\n    padding: 0.25rem;\n    color: #fff;\n    flex: 0 0 1;\n    background-color: ${props => props.theme.colors.pageHighLight2};\n    border: 1px solid rgba(255,255,255, 0.75);\n    border-radius: 50%;\n`;\n\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledNavBrand } from './nav-brand.styles';\n\ninterface Props {\n    toggleClose: () => void;\n    isOpen: boolean;\n}\n\nconst NavBrand: FC<Props> = ({ toggleClose, isOpen }) => {\n    const handleClose = () => {\n        if (isOpen) {\n            toggleClose();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Link onClick={() => handleClose()} to='/'>\n                <StyledNavBrand />\n            </Link>\n        </React.Fragment>\n    )\n}\n\n\nexport default NavBrand;","import styled from 'styled-components';\n\nexport const StyledRightItemsWrapper = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledRightListItem = styled.li`\n    margin: 0;\n    > a {\n        color: #fff;\n        text-decoration: none;\n    }\n`;","import styled from 'styled-components';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\ninterface iDropdownStyles {\n    isOpen: boolean;\n}\n\nexport const StyledAccountIcon = styled(AccountCircle)`\n    color: #fff;\n    font-size: 2rem !important;\n    margin-right: 0.25rem;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-size: inherit;\n    font-family: inherit;\n    color: #fff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledDropdownContainer = styled.div<iDropdownStyles>`\n    position: absolute;\n    bottom: -76px;\n    width: 140px;\n    height: 65px;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n    right: 0;\n    z-index: 21;\n    box-sizing: border-box;\n    padding: 0.5rem 1.5rem;\n    display: ${props => props.isOpen ? 'flex': 'none'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledAnchor = styled.a`\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledDropDownWrapper = styled.div`\n    display: flex;\n    position: relative;\n`;","import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport Backdrop from '../../atoms/backdrop/backdrop.component';\nimport {\n    StyledButton,\n    StyledAccountIcon,\n    StyledDropDownWrapper,\n    StyledDropdownContainer,\n    StyledAnchor\n} from './sign-out.styles';\n\n\nconst SignOutButton = () => {\n    const { setLogin, setUserToken, setUserObject, user, setUserAuth } = useContext(AuthContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const navigate = useNavigate();\n\n    const handleSignOut = () => {\n        if (user) {\n            const expires = new Date(new Date().getTime());\n            setUserAuth(user, Number(expires));\n            setUserObject(null);\n            navigate('/');\n        }\n        setLogin(false);\n        setUserToken(null);\n    };\n\n    const toggleExpanded = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <StyledDropDownWrapper>\n                <StyledButton onClick={() => toggleExpanded()}>\n                    <StyledAccountIcon />\n                    <span>{user?.name}</span>\n                </StyledButton>\n                <StyledDropdownContainer isOpen={isOpen}>\n                    <StyledAnchor onClick={() => handleSignOut()}>Sign out</StyledAnchor>\n                </StyledDropdownContainer>\n                <Backdrop isOpen={isOpen} toggleClose={() => toggleExpanded()} />\n            </StyledDropDownWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default SignOutButton;","import React, { FC } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { StyledRightItemsWrapper, StyledRightListItem } from './sign-in-out.styles';\nimport SignOutButton from \"../../atoms/sign-out/sign-out.component\";\n\ninterface Props {\n    isLoggedIn: boolean;\n}\n\nconst SignInSignOut: FC<Props> = ({ isLoggedIn }) => (\n    <StyledRightItemsWrapper>\n        <StyledRightListItem>\n            {\n                isLoggedIn ?\n                    (\n                        <SignOutButton />\n                    )\n                    :\n                    (\n                        <NavLink to=\"/sign-in\">sign in</NavLink>\n                    )\n            }\n        </StyledRightListItem>\n    </StyledRightItemsWrapper>\n)\n\nexport default SignInSignOut;","import styled from 'styled-components';\n\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledMenu = styled(Menu)`\n    font-size: 2.4rem !important;\n    color: #fff;\n    cursor: pointer;\n    border: 1px solid rgba(255,255,255, 0.1);\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n`","import React, { FC } from 'react';\n\nimport { StyledButton, StyledMenu } from './menu-toggle.styles';\n\ninterface Props {\n    toggleHandler: () => void;\n}\n\n\nconst MenuToggle: FC<Props> = ({ toggleHandler }) => {\n    return (\n        <StyledButton onClick={() => toggleHandler()}>\n            <StyledMenu />\n        </StyledButton>\n    )\n}\n\nexport default MenuToggle;\n\n","import styled from 'styled-components';\nimport Close from '@material-ui/icons/Close'\n\n\nexport const StyledClose = styled(Close)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    font-size: 2rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n`;","import React, { FC } from 'react';\n\nimport { StyledClose, StyledButton } from './close-button.styles';\n\n\ninterface Props {\n    closeHandler: () => void;\n}\n\n\nconst CloseButton: FC<Props> = ({ closeHandler }) => (\n    <StyledButton title=\"close\" type=\"button\" onClick={() => closeHandler()}>\n        <StyledClose />\n    </StyledButton>\n)\n\nexport default CloseButton;","import styled from 'styled-components';\n\nimport { DarkMode, LightMode } from '@mui/icons-material';\n\ninterface iButtonProps {\n    Settings: boolean;\n} \n\nexport const StyledThemeButton = styled.button<iButtonProps>`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: inherit;\n    min-width: 100%;\n    padding: 1.5rem;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    ${props => props.Settings === true && `\n        background-color: ${props.theme.colors.navBarBackground};\n        color: #fff;\n        justify-content: center;\n        margin-top: 1.5rem;\n        padding: 0.75rem 1.5rem;\n        font-size: ${props.theme.fontSizes.smallPlus};\n        > span {\n            margin-left: -0.25rem;\n        }\n    `}\n`;\n\nexport const StyledLightModeIcon = styled(LightMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;\n\nexport const StyledDarkModeIcon = styled(DarkMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;","import React, { useContext, FC } from 'react';\nimport { Theme, ThemeContext } from \"../../../providers/theme/theme.provider\";\nimport { StyledThemeButton, StyledDarkModeIcon, StyledLightModeIcon } from './theme-switcher.styles';\n\n\ninterface Props {\n    settingsPresentation?: boolean;\n}\n\nconst ThemeSwitcher: FC<Props> = ({ settingsPresentation = false }) => {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const handleTheme = () => {\n        if (theme === Theme.Dark) {\n            setTheme(Theme.Light);\n        } else {\n            setTheme(Theme.Dark);\n        }\n    };\n\n    return (\n        <StyledThemeButton Settings={settingsPresentation}\n            title={\n                theme === Theme.Dark ?\n                    'Switch to Light Theme'\n                    :\n                    'Switch to Dark Theme'\n            }\n            onClick={() => handleTheme()}\n        >\n            {\n                theme === Theme.Dark ?\n                    (<StyledLightModeIcon />)\n                    :\n                    (<StyledDarkModeIcon />)\n            }\n            <span>theme</span>\n        </StyledThemeButton>\n    )\n}\n\nexport default ThemeSwitcher;","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\nimport {Home, PeopleAlt, MenuBook, Widgets, AddCircle, Settings, Notifications, Favorite} from '@material-ui/icons';\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n    margin-right: 1rem;\n`\n\nexport const StyledNotifications = styled(Notifications)`\n    ${props => common(props)}\n`;\n\nexport const StyledHome = styled(Home)`\n    ${props => common(props)}\n`;\n\nexport const StyledUsers = styled(PeopleAlt)`\n    ${props => common(props)}\n`;\n\nexport const StyledMenu = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledWidget = styled(Widgets)`\n    ${props => common(props)}\n`;\n\nexport const StyledAddCircle = styled(AddCircle)`\n    ${props => common(props)}\n`;\n\nexport const StyledSetting = styled(Settings)`\n    ${props => common(props)}\n`;\n\nexport const StyledFavorite = styled(Favorite)`\n    ${props => common(props)}\n`;\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    display: flex;\n    align-items: center;\n    font-size: inherit;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSizes.smallPlus};\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100%;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\n","\nexport enum ActivityTypeEnum {\n    Recipe = 'Recipe',\n    Favorite = 'Favorite',\n    Comment = 'Comment'\n}\n\nexport enum ActivityActionsEnum {\n    YouRecipe = \"you created a new recipe\",\n    YouFavorite = \"you favorited this recipe\",\n    YouComment = \"you commented on this recipe\",\n    OtherFavorite = \"another user favorited your recipe\",\n    OtherComment = \"another user commented on your recipe\"\n}\n\nexport interface iActivity {\n    type: ActivityTypeEnum;\n    recipeName?: string;\n    recipeId?: String;\n    createdAt?: string;\n    timeNum?: number;\n    timeFormatted?: string;\n    description: ActivityActionsEnum;\n}","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledNavBrandWrap = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    font-size: 1.5rem;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: #fff;\n    }\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100vh;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\nexport const StyledNavBar = styled.div`\n    height: 55px;\n    max-width: 100vw;\n    background-color: ${(props) => props.theme.colors.navBarBackground};\n    margin-bottom: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1.5rem;\n`;","\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport NAV_DATA from './primary-nav.data.json';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport SignInSignOut from \"../sign-in-out/sign-in-out.component\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport Backdrop from \"../../atoms/backdrop/backdrop.component\";\nimport MenuToggle from \"../../atoms/menu-toggle/menu-toggle.component\";\nimport MainMenu from \"../main-menu/main-menu.component\";\nimport { iMainNavItem } from \"../../../interfaces/nav/nav.interface\";\nimport { StyledNavBrandWrap, StyledNavBar } from './primary.nav.styles';\n\nconst PrimaryNav = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [mainNavItems, setMainNavItems] = useState<iMainNavItem[]>(NAV_DATA);\n    const { isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n\n    const handleIsOpen = () => {\n        setIsOpen(!isOpen);\n        if (isLoggedIn) {\n            expireAuth();\n            if (getUserAuth() === null) {\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setMainNavItems(mainNavItems.filter(item => item.auth === false));\n        } else {\n            setMainNavItems(NAV_DATA);\n        }\n    }, [isLoggedIn])\n\n    return (\n        <StyledNavBar>\n            <StyledNavBrandWrap>\n                <MenuToggle toggleHandler={handleIsOpen} />\n                <NavBrand isOpen={isOpen} toggleClose={handleIsOpen} />\n            </StyledNavBrandWrap>\n            <MainMenu isOpen={isOpen} toggleIsOpen={handleIsOpen} items={mainNavItems} />\n            <Backdrop isOpen={isOpen} toggleClose={() => handleIsOpen()} />\n            <SignInSignOut isLoggedIn={isLoggedIn} />\n        </StyledNavBar>\n    );\n}\n\nexport default PrimaryNav;","import React, { useContext, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { EmptyMesssage } from '../../components/atoms/empty-message/empty-message.component';\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\n\nconst UserRecipesPage = () => {\n    const { id } = useParams();\n    const { userItems } = useContext(UsersContext);\n    const { recipeItems } = useContext(RecipesContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [user, setUser] = useState<iUserItem | null>(null);\n    const [usersRecipes, setUsersRecipes] = useState<iRecipe[]>([]);\n    const [isContentOwner, setIsContentOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (authUser && authUser.userId === id) {\n            setIsContentOwner(true);\n        }\n    }, [authUser, id]);\n\n    useEffect(() => {\n        const tempUser = userItems.filter(u => u.id === id);\n        if (tempUser) {\n            setUser(tempUser[0]);\n        }\n    }, [userItems, id])\n\n    useEffect(() => {\n        if (user !== null && !isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id && r.shared))\n        } else if (user !== null && isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id))\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <PageTitle>\n                {\n                    user && isContentOwner ? (\n                        <span>{`${user.name} Recipe${usersRecipes.length !== 1 ? 's' : ''} (${usersRecipes.length})`}</span>\n                    ) : (\n                        <span>{`${user?.name} Shared ${usersRecipes.length} Recipe${usersRecipes.length !== 1 ? 's' : ''}`}</span>\n                    )\n                }\n            </PageTitle>\n            {\n                usersRecipes.length !== 0 ? (\n                    <RecipesCategoryCardList recipes={usersRecipes} />\n                ) : (\n                    <EmptyMesssage msg=\"There are no recipes.\" />\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default UserRecipesPage;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n       ${props => props.Required && \"content: '*';\"}\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.select`\n\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n`;","import React, { FC, ChangeEvent } from 'react';\n\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledLabel, StyledSelect } from './select-option-plain.styles';\n\nexport interface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    id: string;\n    name: string;\n    value: string;\n    handleChange: (evt: ChangeEvent<HTMLSelectElement>) => void;\n    optionData: iKeyValuePair[]\n    labelText?: string;\n}\n\nconst SelectOptionPlain: FC<Props> = ({ id, name, value, handleChange, optionData, labelText }) => (\n    <FieldWrapper>\n        {\n            labelText && (<StyledLabel htmlFor={id} Required={false}>{labelText}</StyledLabel>)\n        }\n        <StyledSelect id={id} name={name} value={value} onChange={evt => handleChange(evt)}>\n            {\n                optionData.map((o, idx) => (\n                    <option key={idx} value={o.id}>{o.name}</option>\n                ))\n            }\n        </StyledSelect>\n\n    </FieldWrapper>\n);\n\nexport default SelectOptionPlain;","import React, { useContext, useEffect, useState } from 'react';\nimport { Theme, ThemeContext } from '../../../providers/theme/theme.provider';\nimport SelectOptionPlain, { iKeyValuePair } from '../../atoms/select-option-plain/select-option-plain.component';\nimport { StyledWrapDiv, StyledFormWrapper } from './theme-palette-switcher.styles';\n\n\nconst ThemePaletteSwitcher = () => {\n    const {\n        theme,\n        setPaletteDark,\n        setPaletteLight,\n        paletteItems,\n        currentDark,\n        currentLight,\n        setCurrentDark,\n        setCurrentLight\n    } = useContext(ThemeContext);\n    const [selectValDark, setSelectValDark] = useState(currentDark);\n    const [selectValLight, setSelectValLight] = useState(currentLight);\n    const [themeColors, setThemeColors] = useState<iKeyValuePair[]>([]);\n\n    const handleChangeLight = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setPaletteLight(paletteItems[val])\n        setCurrentLight(val);\n    };\n\n    const handleChangeDark = (evt: any) => {\n        const val = evt.target.value;\n        setPaletteDark(paletteItems[val])\n        setCurrentDark(val);\n    };\n\n    useEffect(() => {\n        const temp: iKeyValuePair[] = Object.keys(paletteItems).map(\n            item => {\n                const name = item.split(/(?=[A-Z])/).join(' ').toLowerCase();\n\n                return {\n                    name: name,\n                    id: item\n                }\n            }\n        ).sort((a: iKeyValuePair, b: iKeyValuePair) => (\n            a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n        ));\n\n        setThemeColors(temp)\n    }, [paletteItems]);\n\n    useEffect(() => {\n        setSelectValLight(currentLight);\n        setSelectValDark(currentDark);\n    }, [currentDark, currentLight]);\n\n    return (\n        <React.Fragment>\n\n            <SelectOptionPlain\n                id=\"dark\"\n                name=\"dark\"\n                value={selectValDark}\n                handleChange={handleChangeDark}\n                optionData={themeColors}\n                labelText=\"Dark Theme Palette\"\n            />\n\n            <SelectOptionPlain\n                id=\"light\"\n                name=\"light\"\n                value={selectValLight}\n                handleChange={handleChangeLight}\n                optionData={themeColors}\n                labelText=\"Light Theme Palette\"\n            />\n\n        </React.Fragment>\n    );\n\n}\n\nexport default ThemePaletteSwitcher;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    margin-bottom: 0.5rem;\n`;\n\nexport const StyledUnderlabel = styled.div`\n    color: ${props => props.theme.colors.pageForeground1};\n    margin-bottom: 0.5rem;\n`\n","import React, { FC, useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\nimport { StyledFormWrapper, StyledUnderlabel } from './remove-user.styles';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nimport { deleteUserAccount } from '../../../services/users/users.service';\nimport AccordionToggle from '../../atoms/accordion-toggle/accordion-toggle.component';\nimport FormButton, { FormButtons } from '../../atoms/form-button/form-button.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\n\nconst RemoveUserComponent = () => {\n    const { addToast } = useToasts();\n    const { user, isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n    const { userCount, userItems, removeUserItem } = useContext(UsersContext);\n    const { makeRequest, makeFreshPull } = useContext(RecipesContext);\n    const [showForm, setShowForm] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n    const handleDelete = () => {\n        if (user) {\n            deleteUserAccount(user).then((resp) => {\n                setOpen(false);\n                let userToRemove = userItems.find(u => u.id === user.userId);\n                if (userToRemove) {\n                    removeUserItem(userToRemove, userItems)\n                }\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                localStorage.removeItem('userData');\n                expireAuth();\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n                makeFreshPull(true)\n\n            }).catch((err) => {\n                setOpen(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                user && (\n                    <div>\n                        {\n                            <AccordionToggle\n                                isOpen={showForm}\n                                toggleHandler={() => toggleForm()}\n                                buttonText=\"Account Settings\"\n                            />\n                        }\n                        {\n                            showForm && (\n                                <StyledFormWrapper>\n                                    <StyledUnderlabel>Close account and remove data</StyledUnderlabel>\n                                    <FormButton\n                                        FormButton={FormButtons.Secondary}\n                                        buttonText=\"Remove Account\"\n                                        type=\"button\"\n                                        onClick={() => { setOpen(true); }}\n                                        disabled={false}\n                                        size=\"small\"\n                                    ></FormButton>\n                                    <ConfirmDialog\n                                        open={open}\n                                        title={\"Are you sure?\"}\n                                        confirmText={`Delete my account and data? This action cannot be undone.`}\n                                        handleCancel={handleClose}\n                                        handleConfirm={handleDelete}\n                                    />\n                                </StyledFormWrapper>\n                            )\n                        }\n                    </div>\n                )\n            }\n        </React.Fragment>\n    )\n};\n\nexport default RemoveUserComponent;","import React from 'react';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport ThemePaletteSwitcher from '../../components/molecules/theme-palette-switcher/theme-palette-switcher.component';\nimport ThemeSwitcher from '../../components/molecules/theme-switcher/theme-switcher.component';\nimport { StyledFormWrapper } from '../../templates/add-recipe-form/add-recipe-form.styles';\nimport RemoveUserComponent from '../../components/molecules/remove-user/remove-user.component';\nconst SettingsPage = () => (\n    <MainSection>\n        <PageTitle>Settings</PageTitle>\n        <StyledFormWrapper>\n            <ThemePaletteSwitcher />\n            <ThemeSwitcher settingsPresentation={true} />\n        </StyledFormWrapper>\n        <RemoveUserComponent></RemoveUserComponent>\n    </MainSection>\n);\n\nexport default SettingsPage;","import styled from 'styled-components';\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PageTitleWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;","\nimport dateFormat, { masks } from \"dateformat\";\n\nimport {iRecipe} from '../../interfaces/recipe/recipe.interface';\nimport { iActivity, ActivityTypeEnum, ActivityActionsEnum } from '../../interfaces/activity/activity.interface';\n\nconst formattedTime = (timestamp: string):string => {\n    const d = new Date(timestamp);\n    return dateFormat(d, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\n};\n\nconst numericTime = (timestamp: string): number => {\n    return new Date(timestamp).getTime();\n};\n\n\nexport const fetchFilterValues = (filter: string, activitesList: iActivity[]): iActivity[] => {\n    let filterRange: number = Infinity;\n\n    switch (filter) {\n        case 'dayOne':\n            filterRange = 1000 * 60 * 60 * 24;\n            break;\n        case 'weekOne':\n            filterRange = 1000 * 60 * 60 * 24 * 7;\n            break;\n        case '30days':\n            filterRange = 1000 * 60 * 60 * 24 * 30;\n            break;\n    }\n\n    const now = new Date().getTime();\n\n    const tempList: iActivity[] = activitesList.filter(a =>\n        a.timeNum && (a.timeNum > now - filterRange)\n    );\n\n    return tempList;\n}\n\nexport const getRecentActivities = (userId: string, recipes: iRecipe[]):iActivity[] => {\n    const ret:iActivity[] = [];\n\n    if (!userId) return ret;\n\n    for (let i = 0; i < recipes.length; i++) {\n        const item = recipes[i];\n\n        // your added recipe\n        if (item.user_id === userId) {\n            if (item.createdAt) {\n                ret.push({\n                    type: ActivityTypeEnum.Recipe,\n                    description: ActivityActionsEnum.YouRecipe,\n                    recipeName: item.r_name,\n                    recipeId: item._id,\n                    createdAt: item.createdAt,\n                    timeFormatted: formattedTime(item.createdAt),\n                    timeNum: numericTime(item.createdAt)\n                });\n            }\n\n\n            if (item.favorites) {\n                // other user favorites YOUR recipe\n                const hasItems = item.favorites.some(fav => fav.userId !== userId);\n                if (hasItems) {\n                    item.favorites.filter(fav => fav.userId !== userId).forEach(fav => {\n                        if (fav.createdAt) {\n                            ret.push({\n                                type: ActivityTypeEnum.Favorite,\n                                description: ActivityActionsEnum.OtherFavorite,\n                                recipeName: item.r_name,\n                                recipeId: item._id,\n                                createdAt: fav.createdAt,\n                                timeFormatted: formattedTime(fav.createdAt),\n                                timeNum: numericTime(fav.createdAt)\n                            })\n                        }\n                    })\n                }\n            }\n\n            if (item.comments) {\n                // other user commented on YOUR recipe\n                const hasItems = item.comments.some(c => c.userId !== userId);\n                item.comments.filter(c => c.userId !== userId).forEach(c => {\n                    if (c.createdAt) {\n                        ret.push({\n                            type: ActivityTypeEnum.Comment,\n                            description: ActivityActionsEnum.OtherComment,\n                            recipeName: item.r_name,\n                            recipeId: item._id,\n                            createdAt: c.createdAt,\n                            timeFormatted: formattedTime(c.createdAt),\n                            timeNum: numericTime(c.createdAt)\n                        })\n                    }\n                })\n            }\n        }\n\n\n        if (item.favorites) {\n            // your favorite on ANY recipe\n            const hasItems = item.favorites.some(fav => fav.userId === userId);\n            if (hasItems) {\n                item.favorites.filter(fav => fav.userId === userId).forEach(fav => {\n                    if (fav.createdAt) {\n                        ret.push({\n                            type: ActivityTypeEnum.Favorite,\n                            description: ActivityActionsEnum.YouFavorite,\n                            recipeName: item.r_name,\n                            recipeId: item._id,\n                            createdAt: fav.createdAt,\n                            timeFormatted: formattedTime(fav.createdAt),\n                            timeNum: numericTime(fav.createdAt)\n                        })\n                    }\n                })\n            }\n        }\n\n        if (item.comments) {\n            // your comments on ANY recipe\n            const hasItems = item.comments.some(c => c.userId === userId);\n            item.comments.filter(c => c.userId === userId).forEach(c => {\n                if (c.createdAt) {\n                    ret.push({\n                        type: ActivityTypeEnum.Comment,\n                        description: ActivityActionsEnum.YouComment,\n                        recipeName: item.r_name,\n                        recipeId: item._id,\n                        createdAt: c.createdAt,\n                        timeFormatted: formattedTime(c.createdAt),\n                        timeNum: numericTime(c.createdAt)\n                    })\n                }\n            })\n        }\n    }\n\n    return ret.sort((a,b) => {\n        if (a.timeNum && b.timeNum) {\n            return b.timeNum - a.timeNum;\n        } else {\n            return 0;\n        }\n    });\n};","import styled from \"styled-components\";\nimport {MenuBook, Favorite, Comment} from '@material-ui/icons';\nimport {NavLink} from 'react-router-dom';\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n\n    @media (min-width: 576px) {\n        font-size: 2.4rem !important;\n    }\n`;\n\nexport const StyledRecipeIcon = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledCommentIcon = styled(Comment)`\n    ${props => common(props)}\n`;\n\nexport const StyledFavoriteIcon = styled(Favorite)`\n    ${props => common(props)}\n`;\n\nexport const StyledListItem = styled.li`\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 1.5rem 1.5rem 1.5rem 0;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    margin-bottom: 1rem;\n    display: flex;\n    width: 100%;\n`;\n\nexport const StyledIconWrap = styled.div`\n    flex: 0 0 4.5rem;\n    @media (min-width: 576px) {\n        flex: 0 0 7.5rem;\n    }\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledCardInner = styled.div`\n    flex: 1;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\n","import React, { FC } from 'react';\nimport { iActivity, ActivityTypeEnum } from \"../../../interfaces/activity/activity.interface\";\nimport {\n    StyledListItem, StyledCardInner, StyledIconWrap, StyledNavLink, StyledCommentIcon, StyledFavoriteIcon, StyledRecipeIcon\n} from \"./activity-item.styles\";\n\n\nconst ActivityItem: FC<iActivity> = ({ type, recipeName, recipeId, createdAt, timeNum, timeFormatted, description }) => {\n    return (\n        <StyledListItem>\n            <StyledIconWrap>\n                {type === ActivityTypeEnum.Comment && <StyledCommentIcon />}\n                {type === ActivityTypeEnum.Favorite && <StyledFavoriteIcon />}\n                {type === ActivityTypeEnum.Recipe && <StyledRecipeIcon />}\n            </StyledIconWrap>\n            <StyledCardInner>\n                <StyledNavLink to={`/recipes/${recipeId}`}>\n                    {recipeName}\n                </StyledNavLink>\n\n                <div>{description}</div>\n                <div>{timeFormatted}</div>\n            </StyledCardInner>\n        </StyledListItem>)\n}\n\nexport default ActivityItem;","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport { StyledSpinnerWrap, PageTitleWrapper } from \"./activities.styles\";\nimport { getRecentActivities, fetchFilterValues } from \"./activities.util\";\nimport { iActivity } from \"../../interfaces/activity/activity.interface\";\nimport ActivityItem from \"../../components/molecules/activity-item/activity-item.component\";\nimport SelectOptionPlain, { iKeyValuePair } from \"../../components/atoms/select-option-plain/select-option-plain.component\";\n\nconst ActivitiesPage = () => {\n    const { isLoading, recipeItems } = useContext(RecipesContext);\n    const [activitesList, setActivitiesList] = useState<iActivity[]>([]);\n    const [filterdActivitiesList, setFilteredActivitiesList] = useState<iActivity[]>([]);\n    const { user } = useContext(AuthContext);\n    const [filterValue, setFilterValue] = useState<string>('all');\n\n    const filterChange = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setFilterValue(val);\n        const tempList = fetchFilterValues(val, activitesList);\n        setFilteredActivitiesList(tempList);\n    };\n\n    useEffect(() => {\n        if (user) {\n            const tempList = getRecentActivities(user?.userId, recipeItems)\n            setActivitiesList(tempList);\n            setFilteredActivitiesList(tempList);\n        }\n\n    }, [recipeItems, user]);\n\n    return (\n        <MainSection>\n            <PageTitleWrapper>\n                <PageTitle>Activity <span>({filterdActivitiesList.length})</span></PageTitle>\n                <SelectOptionPlain\n                    optionData={[\n                        {\n                            id: 'all',\n                            name: 'Show All'\n                        },\n                        {\n                            id: 'dayOne',\n                            name: 'One Day',\n                        }, {\n                            id: 'weekOne',\n                            name: 'One Week'\n                        }, {\n                            id: '30days',\n                            name: '30 Days'\n                        }\n                    ]}\n                    id=\"activityFilter\"\n                    name=\"Filters\"\n                    value={filterValue}\n                    handleChange={filterChange}\n                />\n            </PageTitleWrapper>\n            <ul>\n                {\n                    !isLoading && filterdActivitiesList.length > 0 &&\n                    filterdActivitiesList.map((item, key) => (\n                        <ActivityItem key={key} {...item} />\n                    ))\n                }\n                {\n                    !isLoading && filterdActivitiesList.length === 0 &&\n                    <EmptyMesssage msg={'There are no activites'} />\n                }\n            </ul>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n        </MainSection >\n    );\n};\n\nexport default ActivitiesPage;","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/home/home.component';\nimport RecipesPage from './pages/recipes/recipes.component';\nimport FavoritesPage from './pages/favorites/favorites.component';\nimport AddRecipePage from './pages/add-recipe/add-recipe.component';\nimport RecipeDetailPage from './pages/view-recipe/view-recipe.component';\nimport EditRecipePage from './pages/edit-recipe/edit-recipe.component';\nimport RecipesByCategory from './pages/recipes-by-category/recipes-by-category.component';\nimport SignInSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport SignUpPage from './pages/sign-up/sign-up.component';\nimport UsersPage from './pages/users/users.component';\nimport { StyledOuterDiv } from './App.styles';\nimport PrimaryNav from './components/molecules/primary-nav/primary.nav.component';\nimport UserRecipesPage from './pages/user-recipes/user-recipes.component';\nimport SettingsPage from './pages/setting/settings-page.component';\nimport ActivitiesPage from './pages/activities/activities.component';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <StyledOuterDiv>\n        <PrimaryNav />\n        <Routes>\n          <Route path='/' element={<HomePage />} />\n          <Route path='/activities' element={<ActivitiesPage />} />\n          <Route path='/settings' element={<SettingsPage />} />\n          <Route path='/add-recipe' element={<AddRecipePage />} />\n          <Route path='/users' element={<UsersPage />} />\n          <Route path='/user-recipes/:id' element={<UserRecipesPage />} />\n          <Route path='/recipes' element={<RecipesPage />} />\n          <Route path='/favorites' element={<FavoritesPage />} />\n          <Route path='/sign-in' element={<SignInSignUpPage />} />\n          <Route path='/sign-up' element={<SignUpPage />} />\n          <Route path='/recipes/:id' element={<RecipeDetailPage />} />\n          <Route path='/edit-recipe/:id' element={<EditRecipePage />} />\n          <Route path='/recipes/category/:cat_id' element={<RecipesByCategory />} />\n          <Route path='*' element={<Navigate to=\"/\" />} />\n        </Routes>\n      </StyledOuterDiv>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\nimport {Close} from '@material-ui/icons';\n\ninterface iStyledToast {\n    Appearance: string;\n}\n\nexport const StyledCloseIcon = styled(Close)`\ncursor: pointer;\nfont-size: 1rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #fff;\n    position: absolute;\n    top: 0.1rem;\n    right: 0.1rem;\n`;\n\nexport const StyledToast = styled.div<iStyledToast>`\n    background: ${props => props.Appearance === 'success' ?\n        props.theme.colors.pageToastSuccess :\n        props.theme.colors.pageToastError};\n    position: fixed;\n    top: 55px;\n    left: 45%;\n    left: ${props => props.Appearance === 'success' ?\n    '45%' : 'calc(50% - 275px/2)'};\n    padding: 0.75rem 2.5rem;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 400;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${props => props.Appearance === 'success' ?\n    'auto' : '275px'};\n`;\n","import React, { FC } from 'react';\nimport { ToastProps } from 'react-toast-notifications';\nimport { StyledToast, StyledButton, StyledCloseIcon } from './toasts-styles'\n\n\n\n\n\nconst CustomToasts: FC<ToastProps> = ({ children, appearance, onDismiss, ...props }) => (\n    <StyledToast Appearance={appearance}>\n        <div>{children}</div>\n        <StyledButton onClick={(id) => onDismiss()}>\n            <StyledCloseIcon />\n        </StyledButton>\n    </StyledToast>\n);\n\nexport default CustomToasts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MyTheme from './providers/theme/theme.provider';\nimport RecipesProvider from './providers/recipes/recipes.provider';\nimport { ToastProvider } from 'react-toast-notifications';\nimport CustomToast from './components/molecules/toasts/toasts.component';\nimport AuthProvider from './providers/auth/auth.provider';\nimport UsersProvider from './providers/users/users.provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <UsersProvider>\n        <RecipesProvider>\n          <MyTheme>\n            <ToastProvider components={{ Toast: CustomToast }}>\n              <BrowserRouter>\n                <App />\n              </BrowserRouter>\n            </ToastProvider>\n          </MyTheme>\n        </RecipesProvider>\n      </UsersProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}