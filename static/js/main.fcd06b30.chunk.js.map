{"version":3,"sources":["providers/theme/theme.provider.tsx","pages/home/home.styles.ts","components/molecules/category-tags/category-tabs.styles.ts","providers/recipes/recipes.utils.ts","providers/auth/auth.utilities.ts","providers/auth/auth.provider.tsx","services/recipes/recipes.services.ts","providers/recipes/recipes.provider.tsx","components/molecules/category-tags/category-tags.component.tsx","components/atoms/main-section/main-section.styles.ts","components/atoms/main-section/main-section.component.tsx","components/molecules/featured-recipes/featured-recipes.styles.ts","components/atoms/rating/rating.styles.ts","components/atoms/rating/rating.component.tsx","providers/theme/themes.ts","components/atoms/user-action-button-icon/user-action-button-icon.component.tsx","components/atoms/checkbox-plain/checkbox-plain.styles.ts","components/atoms/checkbox-plain/checkbox-plain.component.tsx","components/atoms/recipe-card-item/recipe-card-item.styles.ts","components/atoms/user-action-button-icon/user-action-button-icon.styles.ts","components/atoms/bulk-opperation-controls/bulk-opperation-controls.component.tsx","components/atoms/recipe-card-item/recipe-card-item.component.tsx","components/molecules/featured-recipes/featured-recipes.component.tsx","components/molecules/spinner/spinner.styles.ts","components/molecules/spinner/spinner.component.tsx","pages/home/home.component.tsx","components/atoms/page-title/page-title.styles.ts","components/atoms/page-title/page-title.component.tsx","components/molecules/recipes-list/recipe-list.styles.ts","components/molecules/recipes-list/recipes-list.component.tsx","components/atoms/backdrop/backdrop.styles.ts","components/atoms/backdrop/backdrop.component.tsx","components/atoms/button-link/button-link.styles.ts","components/atoms/button-link/button-link.component.tsx","components/molecules/confirm-dialog/confirm-dialog.styles.ts","components/molecules/confirm-dialog/confirm-dialog.component.tsx","components/atoms/bulk-opperation-controls/bulk-opperation-controls.styles.ts","components/atoms/form-button/form-button.component.tsx","components/atoms/list-grid-toggle/list-grid-toggle.styles.ts","components/atoms/list-grid-toggle/list-grid-toggle.component.tsx","components/molecules/recipes-category-card-list/recipes-category-card-list.styles.ts","components/molecules/recipes-category-card-list/recipes-category-card-list.component.tsx","pages/recipes/recipes.styles.ts","components/atoms/empty-message/empty-message.styles.ts","components/atoms/empty-message/empty-message.component.tsx","pages/recipes/recipes.component.tsx","providers/users/users.utilities.ts","services/users/users.service.ts","providers/users/users.provider.tsx","pages/favorites/favorites.styles.ts","pages/favorites/favorites.component.tsx","components/atoms/field-wrapper/field-wrapper.styles.ts","components/atoms/field-wrapper/field-wrapper.component.tsx","components/atoms/select-option-field/select-option-field.styles.ts","components/atoms/select-option-field/select-option-field.component.tsx","components/atoms/text-field/text-field.styles.ts","components/atoms/text-field/text-field.component.tsx","components/atoms/checkbox-field/checkbox-field.styles.ts","components/atoms/checkbox-field/checkbox-field.component.tsx","components/atoms/form-button/form-button.styles.ts","components/molecules/main-menu/main-menu.component.tsx","templates/add-recipe-form/add-recipe-form.styles.ts","components/atoms/accordion-toggle/accordion-toggle.styles.ts","components/atoms/accordion-toggle/accordion-toggle.component.tsx","templates/add-recipe-form/add-recipe-form.component.tsx","pages/add-recipe/add-recipe.component.tsx","pages/view-recipe/view-recipe.styles.ts","components/atoms/comments-list-item/comments-list-item.styles.ts","components/atoms/user-avatar/user-avatar.styles.ts","components/atoms/user-avatar/user-avatar.component.tsx","components/atoms/comments-list-item/comments-list-item.component.tsx","components/atoms/recipe-content-owner/recipe-content-owner.styles.ts","components/atoms/recipe-content-owner/recipe-content-owner.component.tsx","components/molecules/recipe-view-details/recipe-view-details.styles.ts","templates/add-comment/add-comment.styles.ts","templates/add-comment/add-comment.component.tsx","components/molecules/recipe-view-details/recipe-view-details.component.tsx","components/atoms/recipe-action-bar/recipe-action-bar.styles.ts","components/atoms/recipe-action-bar/recipe-action-bar.component.tsx","pages/view-recipe/view-recipe.component.tsx","templates/edit-recipe-form/edit-recipe-form.styles.ts","templates/edit-recipe-form/edit-recipe-form.component.tsx","pages/edit-recipe/edit-recipe.component.tsx","pages/recipes-by-category/recipes-by-category.styles.ts","pages/recipes-by-category/recipes-by-category.component.tsx","templates/sign-in-form/sign-in-form.styles.ts","services/auth/auth.services.ts","templates/sign-in-form/sign-in-form.component.tsx","pages/sign-in-sign-up/sign-in-sign-up.styles.ts","pages/sign-in-sign-up/sign-in-sign-up.component.tsx","templates/sign-up-form/sign-up-form.styles.ts","templates/sign-up-form/sign-up-form.component.tsx","pages/sign-up/sign-up.component.tsx","components/molecules/user-card/user-card.styles.ts","components/molecules/user-card/user-card.component.tsx","components/molecules/users-list/users-list.styles.ts","components/molecules/users-list/users-list.component.tsx","pages/users/users.component.tsx","App.styles.tsx","components/atoms/nav-brand/nav-brand.styles.ts","components/atoms/nav-brand/nav-brand-component.tsx","components/molecules/sign-in-out/sign-in-out.styles.ts","components/atoms/sign-out/sign-out.styles.ts","components/atoms/sign-out/sign-out.component.tsx","components/molecules/sign-in-out/sign-in-out.component.tsx","components/atoms/menu-toggle/menu-toggle.styles.ts","components/atoms/menu-toggle/menu-toggle.component.tsx","components/atoms/close-button/close-button.styles.ts","components/atoms/close-button/close-button.component.tsx","components/molecules/theme-switcher/theme-switcher.styles.ts","components/molecules/theme-switcher/theme-switcher.component.tsx","components/molecules/main-menu/main-menu.styles.ts","interfaces/activity/activity.interface.ts","components/molecules/primary-nav/primary.nav.styles.ts","components/molecules/primary-nav/primary.nav.component.tsx","pages/user-recipes/user-recipes.component.tsx","components/atoms/select-option-plain/select-option-plain.styles.ts","components/atoms/select-option-plain/select-option-plain.component.tsx","components/molecules/theme-palette-switcher/theme-palette-switcher.component.tsx","components/molecules/remove-user/remove-user.styles.ts","components/molecules/remove-user/remove-user.component.tsx","pages/setting/settings-page.component.tsx","pages/activities/activities.styles.ts","pages/activities/activities.util.ts","components/molecules/activity-item/activity-item.styles.ts","components/molecules/activity-item/activity-item.component.tsx","pages/activities/activities.component.tsx","App.tsx","reportWebVitals.ts","components/molecules/toasts/toasts-styles.ts","components/molecules/toasts/toasts.component.tsx","index.tsx"],"names":["Theme","HeroStyles","styled","h1","props","theme","fontSizes","large","colors","pageHighLight2","SpinnerWrapper","div","HeroSubTitle","h2","pageForeground1","HeroWrapper","pageBackground2","pageBackground1","navBarBackground","StyledHeroGraphic","Widgets","TagContainer","small","TagList","ul","getFeaturedRecipes","recipes","items","copy","slice","i","length","random","Math","floor","push","splice","getCategoryTags","temp","find","item","category","sort","a","b","addRecipeToList","recipe","editRecipe","index","findIndex","_id","updated","deleteRecipe","bulkUpdateRecipes","itemsToUpdate","recipesList","map","r","updatedItem","setUserAuth","user","expires","localStorage","setItem","JSON","stringify","getRemainingTime","data","getItem","remaining","parse","Date","getTime","expireAuth","removeItem","getUserAuth","authData","AuthContext","createContext","isLoggedIn","token","setLogin","setUserToken","val","setUserObject","expiration","setUserExpiration","AuthProvider","children","useState","setUser","setIsLoggedIn","setToken","setExpiration","useEffect","storageUser","Provider","value","baseURL","process","endpoint","getRecipes","axios","get","resp","getRecipesAuth","method","url","headers","Authorization","copyRecipe","recipeId","userId","addRecipe","updateRecipe","removeRecipe","message","addFavorite","removeFavorite","addRecipeComment","commentItem","addFavoriteBulk","removeFavoriteBulk","removeShareBulk","addShareBulk","RecipesContext","recipeItems","recipeCount","setSpinner","setCount","makeFreshPull","setRecipeItems","isLoading","makeRequest","RecipesProvider","setRecipeCount","setMakeRequest","setIsLoading","useContext","then","setTimeout","catch","err","console","log","error","tempRecipes","filter","shared","CategoryTags","uniques","setUniques","filterList","user_id","Fragment","key","to","cat_id","StyledMain","main","MainSection","CardList","StyledRatingContainer","StarFilled","Star","inverse","StarOutlined","StarBorder","RecipeRating","rating","title","idx","paletteItems","pink","purple","green","cyan","deepPurple","indigo","teal","blue","lightGreen","deepOrange","lightBlue","yellow","getLightTheme","palette","grey","pageBackground3","pageBorderColor1","pageLinkColor1","pageHighLight1","A100","A700","pageSecondaryColor1","pageToastSuccess","pageToastError","fonts","smallPlus","regular","medium","ButtonIconTypeEnum","ThemeContext","Dark","setTheme","setPaletteDark","setPaletteLight","currentDark","currentLight","setCurrentDark","setCurrentLight","MyTheme","paletteDark","paletteLight","str","parsed","A200","CheckBoxIcon","Check","ison","StyledCheckBox","input","ThemeStyle","ThemEnum","StyledFieldWrapper","CheckboxPlain","id","inputChangeHandler","isChecked","overrideIsChecked","setOverrideIsChecked","htmlFor","type","checked","onChange","evt","target","CardItem","Light","CardCopy","p","CardTitleWrap","CardTitle","h3","CardBottomWrapper","CardMetaInfo","StyledFavoriteIcon","Favorite","StyledFavoriteOutlineIcon","FavoriteBorderOutlined","StyledEditIcon","Edit","StyledDeleteIcon","Delete","StyledPrintIcon","Share","Print","StyledCopyIcon","ContentCopy","StyledButton","button","actionItemEnums","UserActionButtonIcon","icon","clickHandler","disabled","onClick","delete","edit","print","favorite","unfavorite","checkIsFavorite","favorites","f","RecipeCardItem","selectMode","onSelectChange","isBulkSelected","showFavorites","setIsChecked","isFav","setIsFav","favDisabled","setFavDisabled","handleChange","onFavoriteAction","r_name","steps","join","ChevronRight","FeaturedRecipes","featured","setFeatured","StyledCircularProgress","CircularProgress","SpinnerOuter","Spinner","HomePage","StyledPageTitle","PageTitle","StyledList","StyledListItem","li","RecipeList","StyledBackdrop","isOpen","Backdrop","toggleClose","StyledButtonLink","ButtonLink","StyledConfirmButton","StyledCancelButton","StyledDialog","Dialog","ConfirmDialog","confirmText","handleCancel","handleConfirm","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","StyledControlWrap","StyledMoreIconButton","StyledToolBarDivider","StyledMoreIcon","MoreHoriz","StyledToggleButton","StyledMenuContent","FormButtons","BulkOpperationsControls","bulkCount","bulkList","handleEditMode","isMixedList","addToast","useToasts","setIsOpen","confirmOpen","setConfirmOpen","actionType","setActionType","handleActionsMenu","handleActionClick","actionValue","actionItems","name","notAllowed","share","noshare","confirmMsg","appearance","autoDismiss","StyledGridOnIcon","GridOn","StyledListIcon","List","ListGridToggleButton","grid","StyledCardContainer","RecipesCategoryCardList","isBulk","setIsbulk","StyledTitleWrapper","StyledSpinnerWrap","StyledToolBar","StyledCheckAllWrapper","StyledEmptyMessage","EmptyMesssage","msg","RecipesPage","isGridView","setIsGridView","setIsMixedList","setSelectMode","setBulkList","setBulkCount","setIsBulkSelected","isSelectAllChecked","setIsSelectAllChecked","templist","isMixedTemp","ret","bulkItem","checkMixedList","addUserItem","userList","toUpperCase","removeUserItem","u","getUsers","deleteUserAccount","UsersContext","userItems","userCount","UsersProvider","setUserItems","setUserCount","users","sorted","FavoritesPage","filteredRecipes","setFilteredRecipes","filteredItems","some","FieldWrapper","StyledLabel","label","Required","StyledSelect","SelectOptionField","as","dataType","optionData","defaultOptionText","required","useField","field","setValue","className","datatype","StyledVisibility","Visibility","StyledVisibilityOff","VisibilityOff","StyledEyeButton","StyledInput","StyledEyeLabel","RecipeTextField","placeholder","onVisibilityChange","isVisible","CheckBoxField","StyledPrimaryButton","FormButton","Primary","Size","Icons","buttonText","size","StyledFormWrapper","StyledInputWrapper","InputButtonsWrap","FieldArrayItem","StyledAddInputBtn","StyledSubtractInputBtn","StyledAccordionContent","Collapsed","Field","StyledHRule","hr","StyledFieldArrayEmptyButton","StyledButtonToggle","StyledToggleWrap","Space","StyledArrowDown","KeyboardArrowDown","StyledArrowUp","KeyboardArrowUp","AccordionToggle","toggleHandler","spacing","AddRecipeForm","catData","setCatData","currentRecipeItems","setCurrentRecipeItems","isOpenIngredients","setIsOpenIngredients","isOpenSteps","setIsOpenSteps","isOpenComments","setIsOpenComments","navigate","useNavigate","formValuesInitial","ingredients","comments","String","initialValues","onSubmit","values","setSubmitting","catName","Number","vals","dirty","resetForm","isValid","render","arrayHelpers","remove","insert","comment","Secondary","AddRecipePage","DetailsTopWrapper","MetaInfoTop","MetaInfoBottom","pageForegroundColor1","MetaInfoWrapper","UserWrapper","StyledAvatar","span","UserAvatar","CommentItem","StyledDiv","RecipeContentOwner","action","findUser","StyledDetailsDiv","StyledH4","h4","AddCommentForm","handleSubmit","undefined","setFormValuesInitial","showForm","setShowForm","RecipeViewDetails","setRecipe","tempRecipe","StyledRecipeActionBar","RecicipeActionBar","useParams","setOpen","copyOpen","setCopyOpen","isOwner","setIsOwner","handleFavorite","window","tempItems","RecipeDetailPage","EditRecipeForm","foundRecipe","toString","EditRecipePage","RecipesByCategory","filtered","setFiltered","setCatName","param_id","parseInt","logInUser","email","password","post","signUpUser","SignInForm","StyledNavLink","NavLink","StyledSignUpContainer","SignInSignUpPage","SignUpForm","setIsVisable","userToAdd","SignUpPage","StyledUserCard","StyledNoSharedRecipes","UserCard","isContentOwner","StyledUserCardList","UsersList","authUser","setUsers","usersWithRecipe","UsersPage","StyledOuterDiv","StyledNavBrand","Restaurant","NavBrand","StyledRightItemsWrapper","StyledRightListItem","StyledAccountIcon","AccountCircle","StyledDropdownContainer","StyledAnchor","StyledDropDownWrapper","SignOutButton","toggleExpanded","handleSignOut","SignInSignOut","StyledMenu","Menu","MenuToggle","StyledClose","Close","CloseButton","closeHandler","StyledThemeButton","Settings","StyledLightModeIcon","LightMode","StyledDarkModeIcon","DarkMode","ThemeSwitcher","settingsPresentation","common","StyledNotifications","Notifications","StyledHome","Home","StyledUsers","PeopleAlt","MenuBook","StyledWidget","StyledAddCircle","AddCircle","StyledSetting","StyledFavorite","StyledNavUl","StyledMenuHeader","StyledMenuOuter","ActivityTypeEnum","ActivityActionsEnum","MainMenu","toggleIsOpen","itemsWithIcons","svgIcon","params","route","text","StyledNavBrandWrap","StyledNavBar","PrimaryNav","logoutTimer","NAV_DATA","mainNavItems","setMainNavItems","logout","useCallback","handleIsOpen","timeLeft","mins","toFixed","auth","clearTimeout","UserRecipesPage","usersRecipes","setUsersRecipes","setIsContentOwner","tempUser","select","SelectOptionPlain","labelText","o","ThemePaletteSwitcher","selectValDark","setSelectValDark","selectValLight","setSelectValLight","themeColors","setThemeColors","Object","keys","split","toLowerCase","StyledUnderlabel","RemoveUserComponent","userToRemove","SettingsPage","PageTitleWrapper","formattedTime","timestamp","d","dateFormat","numericTime","StyledRecipeIcon","StyledCommentIcon","Comment","StyledIconWrap","StyledCardInner","ActivityItem","recipeName","timeFormatted","createdAt","timeNum","description","Recipe","ActivitiesPage","activitesList","setActivitiesList","filterdActivitiesList","setFilteredActivitiesList","filterValue","setFilterValue","tempList","YouRecipe","fav","forEach","OtherFavorite","c","OtherComment","YouFavorite","YouComment","getRecentActivities","filterRange","Infinity","now","fetchFilterValues","App","path","element","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StyledCloseIcon","StyledToast","Appearance","CustomToasts","onDismiss","ReactDOM","StrictMode","components","Toast","CustomToast","document","getElementById"],"mappings":"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","file":"static/js/main.fcd06b30.chunk.js","sourcesContent":["import React, { useContext, createContext, useState, FC, useEffect } from \"react\";\nimport { getDarkTheme, getLightTheme, paletteItems } from './themes';\nimport { ThemeProvider } from \"styled-components\";\n\nexport enum Theme {\n    Dark = 'Dark',\n    Light = 'Light',\n}\n\nexport type ThemeContextType = {\n    theme: Theme;\n    setTheme: (Theme: Theme) => void;\n    setPaletteDark: (val: any) => void;\n    setPaletteLight: (val: any) => void;\n    paletteItems: any;\n    currentDark: string;\n    currentLight: string;\n    setCurrentDark: (val: string) => void;\n    setCurrentLight: (val: string) => void;\n}\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const ThemeContext = createContext<ThemeContextType>({\n    theme: Theme.Dark,\n    setTheme: theme => { },\n    setPaletteDark: () => { },\n    setPaletteLight: () => { },\n    paletteItems,\n    currentDark: '',\n    currentLight: '',\n    setCurrentDark: (val: string) => { },\n    setCurrentLight: (val: string) => { }\n});\nexport const useTheme = () => useContext(ThemeContext);\n\nconst MyTheme: FC<Props> = ({ children }) => {\n    const [currentDark, setCurrentDark] = useState('lightBlue');\n    const [currentLight, setCurrentLight] = useState('deepPurple');\n    const [theme, setTheme] = useState(Theme.Dark);\n    const [paletteDark, setPaletteDark] = useState(paletteItems['lightBlue']);\n    const [paletteLight, setPaletteLight] = useState(paletteItems['deepPurple']);\n\n\n    useEffect(() => {\n        const str = localStorage.getItem('storedTheme');\n\n        if (str) {\n            const parsed = JSON.parse(str);\n            setPaletteLight(parsed.paletteLight);\n            setPaletteDark(parsed.paletteDark);\n            setCurrentDark(parsed.currentDark);\n            setCurrentLight(parsed.currentLight);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('storedTheme', JSON.stringify(({ currentDark, currentLight, paletteDark, paletteLight })))\n    }, [paletteDark, paletteLight, currentLight, currentDark]);\n\n\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme, setPaletteDark, setPaletteLight, paletteItems, currentDark, currentLight, setCurrentDark, setCurrentLight }}>\n            <ThemeProvider theme={theme === Theme.Dark ? getDarkTheme(paletteDark) : getLightTheme(paletteLight)}>{children}</ThemeProvider>\n        </ThemeContext.Provider>\n    );\n\n}\n\nexport default MyTheme;","import styled from 'styled-components';\nimport { Widgets } from '@material-ui/icons';\n\nexport const HeroStyles = styled.h1`\n    font-size: ${(props) => props.theme.fontSizes.large};\n    font-weight: 300;\n    line-height: 0.9em;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const HeroSubTitle = styled.h2`\n    font-size: 1.5rem;\n    font-weight: 300;\n    line-height: 1.2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const HeroWrapper = styled.div`\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.pageBackground2};\n    background: linear-gradient(\n        to right,\n        ${props => props.theme.colors.pageBackground1},\n        75%,\n        ${props => props.theme.colors.navBarBackground}\n    );\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledHeroGraphic = styled(Widgets)`\n    color: ${(props) => props.theme.colors.pageHighLight2};\n    font-size: 5.6rem !important;\n    margin: -6vw 1.25rem 0 -2.6rem;\n    @media (min-width: 576px) {\n        font-size: 11.6rem !important;\n        margin: 0 1.25rem 0 -1.25rem;\n    }\n`;","import styled from 'styled-components';\n\nexport const TagContainer = styled.div`\n    background-color: ${props => props.theme.colors.pageBackground2};\n    font-size: ${props => props.theme.fontSizes.small};\n    color: #fff;\n    padding: 1.5rem 1.5rem 0.75rem 1.5rem;\n`;\n\nexport const TagList = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    list-style: none;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    li {\n        background-color: ${props => props.theme.colors.pageHighLight2};\n        padding: 0.5rem 1rem;\n        margin: 0 0.5rem 1rem 0.5rem;\n        border-radius: 0 1rem 0 1rem;\n        @media (min-width: 1400px) {\n            &:nth-child(even) {\n                border-radius: 1rem 0 1rem 0;\n            }\n        }\n        a {\n            color: #fff;\n            text-decoration: none;\n        }\n    }\n`;","import React from 'react';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\n\n\nexport const getFeaturedRecipes = (recipes: iRecipe[]):iRecipe[] => {\n    const items: iRecipe[] = [];\n    const copy = recipes.slice(0);\n    const NUM = 3;\n\n    for (let i = copy.length; i > 0; i--) {\n        if (items.length < NUM) {\n            let random = Math.floor(Math.random() * copy.length);\n            items.push(copy[random]);\n            copy.splice(random, 1);\n        } else {\n            break;\n        }\n    }\n    return items;\n};\n\nexport const getCategoryTags = (recipes: iRecipe[]):iRecipe[] => {\n    const temp: iRecipe[] = [];\n\n    for (let i = 0; i < recipes.length; i++) {\n        if (!temp.find(item => recipes[i].category === item.category)) {\n            temp.push(recipes[i]);\n        }\n    }\n\n    return temp.sort((a, b) => {\n        if (a.category < b.category) {\n            return -1;\n        }\n        if (a.category > b.category) {\n            return 1;\n        }\n        return 0;\n    })\n}\n\nexport const addRecipeToList = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        recipes.push(recipe);\n        return recipes;\n    }\n}\n\nexport const editRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1, recipe);\n        return updated;\n    }\n}\n\nexport const deleteRecipe = (recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1);\n        return updated;\n    }\n}\n\nexport const bulkUpdateRecipes = (itemsToUpdate: iRecipe[], recipesList: iRecipe[]) => {\n\n    if (itemsToUpdate.length === 0) {\n        return recipesList;\n    }\n\n    const updated = recipesList.map(r => {\n        const updatedItem = itemsToUpdate.find(i => i._id === r._id);\n        return updatedItem ? updatedItem : r;\n    });\n\n    return updated;\n}\n\n","\nimport { iUser } from '../../interfaces/user/user.interface';\n\nexport type StoredAuthType = {\n    user: iUser;\n    expires: number;\n}\n\nexport const setUserAuth = (user: iUser, expires: number):void => {\n\n    localStorage.setItem(\n        'userData',\n        JSON.stringify({\n            user,\n            expires\n        })\n    )\n}\n\nexport const getRemainingTime = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        const remaining = expires - currentTime;\n        return remaining > 0 ? remaining : 0;\n    }\n\n    return 0;\n}\n\nexport const expireAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        if (expires - currentTime < 0) {\n            localStorage.removeItem('userData');\n        }\n    } else {\n        localStorage.removeItem('userData');\n    }\n}\n\nexport const getUserAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        return expires - currentTime > 0 ? authData : null;\n    } else {\n        return null;\n    }\n}","import React, { FC, createContext, useState, useEffect } from 'react';\n\nimport { iUser } from '../../interfaces/user/user.interface';\nimport { setUserAuth, getUserAuth, expireAuth, getRemainingTime } from './auth.utilities';\n\ntype UserContextType = {\n    user: iUser | null;\n    isLoggedIn: boolean,\n    token: string | null;\n    setLogin: (val: boolean) => void;\n    setUserToken: (val: any) => void;\n    setUserObject: (val: any) => void;\n    setUserExpiration: (val: any) => void;\n    expiration: number | null;\n    setUserAuth: (user: iUser, expires: number) => void;\n    getUserAuth: () => void;\n    expireAuth: () => void;\n    getRemainingTime: () => number;\n}\n\nexport const AuthContext = createContext<UserContextType>({\n    user: null,\n    isLoggedIn: false,\n    token: null,\n    setLogin: () => { },\n    setUserToken: (val) => { },\n    setUserObject: (val) => { },\n    expiration: null,\n    setUserExpiration: (val) => { },\n    setUserAuth: () => { },\n    getUserAuth: () => { },\n    expireAuth: () => { },\n    getRemainingTime: () => 0\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst AuthProvider: FC<Props> = ({ children }) => {\n\n    const [user, setUser] = useState<iUser | null>(null);\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [token, setToken] = useState<string | null>(null);\n    const [expiration, setExpiration] = useState<number | null>(null);\n    const setLogin = (val = false) => setIsLoggedIn(val);\n    const setUserToken = (val = null) => setToken(val);\n    const setUserObject = (val = null) => setUser(val);\n    const setUserExpiration = (val = null) => setExpiration(val);\n\n    useEffect(() => {\n        expireAuth();\n        const storageUser = getUserAuth();\n\n        if (storageUser) {\n            setUser(storageUser.user);\n            setIsLoggedIn(true);\n            setToken(storageUser.user.token);\n            setExpiration(storageUser.expires);\n        }\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            isLoggedIn,\n            token,\n            expiration,\n            setLogin,\n            setUserToken,\n            setUserObject,\n            setUserExpiration,\n            setUserAuth,\n            getUserAuth,\n            expireAuth,\n            getRemainingTime\n        }}>{children}</AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider;","import axios from 'axios';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_RECIPE_ENDPOINT;\nconst commentEndpoint = process.env.REACT_APP_RECIPE_COMMENT_ENDPOINT;\nconst addFavoriteEndpoint = process.env.REACT_APP_FAVORITE_ADD;\nconst copyRecipeEndpoint = process.env.REACT_APP_RECIPE_COPY;\nconst removeFavoriteEndpoint = process.env.REACT_APP_FAVORITE_REMOVE;\nconst addFavoriteBulkEndpoint = process.env.REACT_APP_BULK_FAVORITE_ADD;\nconst removeFavoriteBulkEndpoint = process.env.REACT_APP_BULK_FAVORITE_REMOVE;\nconst addSharingBulkEndpoint = process.env.REACT_APP_BULK_SHARE_ADD;\nconst removeSharingBulkEndpoint = process.env.REACT_APP_BULK_SHARE_REMOVE;\n\nexport const getRecipes = async () => {\n    try {\n        const resp = await axios.get<iRecipe[]>(`${baseURL}${endpoint}/unauth`);\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\nexport const getRecipesAuth = async (token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'get',\n            url: `${baseURL}${endpoint}/auth`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\n\nexport const copyRecipe = async (recipeId: string, userId: string, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${copyRecipeEndpoint}`,\n            data: {\n                userId: userId,\n                recipeId: recipeId\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\n\nexport const addRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${endpoint}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err);\n    }\n};\n\nexport const updateRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        })\n\n        return resp.data.message;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${addFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${removeFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId || 'none',\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addRecipeComment = async (commentItem: iRecipeComment, recipeId: string, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${commentEndpoint}/${recipeId}`,\n            data: commentItem,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addFavoriteBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${addFavoriteBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeFavoriteBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${removeFavoriteBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const removeShareBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${removeSharingBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n\nexport const addShareBulk = async (recipesList: string[], userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${addSharingBulkEndpoint}`,\n            data: {\n                recipesList: recipesList,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n};\n","import React, { FC, createContext, useState, useEffect, useContext } from 'react';\nimport {\n    getFeaturedRecipes, getCategoryTags, addRecipeToList, editRecipe, deleteRecipe, bulkUpdateRecipes\n} from './recipes.utils';\nimport { AuthContext } from '../auth/auth.provider';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { getRecipes, getRecipesAuth } from '../../services/recipes/recipes.services';\n\ntype RecipeContextType = {\n    recipeItems: iRecipe[];\n    recipeCount: number;\n    bulkUpdateRecipes: (itemsToUpdate: iRecipe[], recipes: iRecipe[]) => iRecipe[];\n    getFeaturedRecipes: (recipes: iRecipe[]) => iRecipe[];\n    getCategoryTags: (recipes: iRecipe[]) => iRecipe[];\n    addRecipeToList: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    editRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    deleteRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    setSpinner: (val: boolean) => void;\n    makeFreshPull: (val: boolean) => void;\n    setCount: (val: number) => void;\n    setRecipeItems: (recipes: iRecipe[]) => void;\n    isLoading: boolean;\n    makeRequest: boolean;\n}\n\nexport const RecipesContext = createContext<RecipeContextType>({\n    recipeItems: [],\n    recipeCount: 0,\n    bulkUpdateRecipes: ([], []) => [],\n    getFeaturedRecipes: ([]) => [],\n    getCategoryTags: ([]) => [],\n    addRecipeToList: ([]) => [],\n    editRecipe: ([]) => [],\n    deleteRecipe: ([]) => [],\n    setSpinner: () => { },\n    setCount: () => { },\n    makeFreshPull: () => { },\n    setRecipeItems: ([]) => [],\n    isLoading: true,\n    makeRequest: true\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst RecipesProvider: FC<Props> = ({ children }) => {\n    const [recipeItems, setRecipeItems] = useState<iRecipe[]>([]);\n    const [recipeCount, setRecipeCount] = useState<number>(0);\n    const [makeRequest, setMakeRequest] = useState<boolean>(true);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const setSpinner = (val = true) => setIsLoading(val);\n    const makeFreshPull = (val = true) => setMakeRequest(val);\n    const setCount = (val = 0) => setRecipeCount(val);\n    const { token, isLoggedIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (makeRequest) {\n            setMakeRequest(false);\n\n            if (isLoggedIn) {\n                getRecipesAuth(token).then((resp) => {\n                    setTimeout(() => {\n                        setRecipeItems(resp);\n                        setCount(resp.length);\n                        setSpinner(false);\n                    }, 1500);\n                }).catch((err) => {\n                    setSpinner(false);\n                    console.log(err)\n                });\n            } else {\n                getRecipes().then((resp) => {\n                    setTimeout(() => {\n                        setSpinner(false);\n                        if (resp) {\n                            setRecipeItems(resp);\n                            setCount(resp.length);\n                        }\n                    }, 1500);\n                }).catch((err) => {\n                    setSpinner(false);\n                    console.error(err);\n                });\n            }\n        }\n    }, [makeRequest]);\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            setSpinner(true);\n            makeFreshPull(true);\n        } else {\n            const tempRecipes = recipeItems.filter(r => r.shared === true);\n            setRecipeItems(tempRecipes);\n        }\n    }, [isLoggedIn]);\n\n    return (<RecipesContext.Provider\n        value={{\n            recipeItems,\n            recipeCount,\n            bulkUpdateRecipes,\n            getFeaturedRecipes,\n            getCategoryTags,\n            addRecipeToList,\n            setRecipeItems,\n            editRecipe,\n            deleteRecipe,\n            setSpinner,\n            setCount,\n            isLoading,\n            makeRequest,\n            makeFreshPull\n        }}\n    >{children}</RecipesContext.Provider>)\n};\n\nexport default RecipesProvider;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TagContainer, TagList } from './category-tabs.styles';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\nconst CategoryTags = () => {\n    const { recipeItems, getCategoryTags } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [uniques, setUniques] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setUniques(getCategoryTags(filterList))\n    }, [recipeItems, getCategoryTags, user])\n\n    return (\n        <React.Fragment>\n            {\n                uniques.length > 0 && (\n                    <TagContainer>\n                        <TagList>\n                            {\n                                uniques.map((item, key) => (<li key={key}>\n                                    <Link to={`/recipes/category/${item.cat_id}`}>{item.category}</Link>\n                                </li>))\n                            }\n                        </TagList>\n                    </TagContainer>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CategoryTags;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    padding: 0 1.5rem 1.5rem 1.5rem;\n    overflow: hidden;\n`;","import React, { FC } from \"react\";\nimport { StyledMain } from \"./main-section.styles\";\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const MainSection: FC<Props> = ({ children }) => (\n    <StyledMain children={children} />\n);","import styled from 'styled-components';\n\nexport const CardList = styled.div`\n    width: 100%;\n    margin: 0;\n    padding: 1.5rem 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;\n\n","import styled from \"styled-components\";\n\nimport { StarBorder, Star } from \"@material-ui/icons\";\nimport {Theme as ThemeEnum } from '../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle?: ThemeEnum;\n    inverse: string;\n}\n\nexport const StyledRatingContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    max-width: 90px;\n`;\n\nexport const StarFilled = styled(Star)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\nexport const StarOutlined = styled(StarBorder)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\n","import React, { FC } from \"react\";\nimport { StyledRatingContainer, StarFilled, StarOutlined } from \"./rating.styles\";\n\ninterface Props {\n    rating?: number;\n    inverse?: boolean;\n}\n\nconst RecipeRating: FC<Props> = ({ rating = 0, inverse = false }) => {\n    let stars: any[] = [true, true, true, true];\n\n    return (\n        <StyledRatingContainer title={`rated ${rating} stars`}>\n            {stars.map((item, idx) => idx < rating ?\n                (<StarFilled inverse={inverse ? 'yes' : 'no'} key={idx} />)\n                :\n                (<StarOutlined inverse={inverse ? 'yes' : 'no'} key={idx} />)\n            )}\n        </StyledRatingContainer>\n    );\n}\n\nexport default RecipeRating;","import {\n    grey,\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightBlue,\n    lightGreen,\n    yellow,\n    deepOrange\n} from 'material-colors-ts';\n\nexport const paletteItems = {\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightGreen,\n    deepOrange,\n    lightBlue,\n    yellow\n}\n\nexport const getDarkTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[900],\n            pageBackground2: grey[800],\n            pageBackground3: grey[700],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[50],\n            pageLinkColor1: palette.A200,\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}\n\nexport const getLightTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[50],\n            pageBackground2: grey[200],\n            pageBackground3: grey[300],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[900],\n            pageLinkColor1: palette[900],\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}","import React, { FC } from \"react\";\n\nimport {\n    StyledDeleteIcon,\n    StyledEditIcon,\n    StyledPrintIcon,\n    StyledButton,\n    StyledFavoriteOutlineIcon,\n    StyledFavoriteIcon,\n    StyledCopyIcon\n} from './user-action-button-icon.styles';\n\ninterface Props {\n    icon: ButtonIconTypeEnum;\n    clickHandler: (evt: React.SyntheticEvent) => void;\n    disabled?: boolean;\n    title?: string;\n    inverse?: boolean;\n}\n\nexport enum ButtonIconTypeEnum {\n    delete = 0,\n    edit = 1,\n    print = 2,\n    favorite = 4,\n    unfavorite = 5,\n    copy = 6\n}\n\nconst UserActionButtonIcon: FC<Props> = ({ icon, clickHandler, disabled = false, title, inverse = false }) => {\n    return (\n        <StyledButton inverse={inverse ? 'yes' : 'no'} title={title} disabled={disabled} onClick={(evt) => clickHandler(evt)}>\n            {\n                icon === ButtonIconTypeEnum.delete && (\n                    <StyledDeleteIcon />\n                )\n            }\n            {\n                icon === ButtonIconTypeEnum.edit && (\n                    <StyledEditIcon />\n                )\n            }\n            {\n                icon === ButtonIconTypeEnum.print && (\n                    <StyledPrintIcon />\n                )\n            }\n            {\n                icon === ButtonIconTypeEnum.favorite && (\n                    <StyledFavoriteIcon />\n                )\n            }\n            {\n                icon === ButtonIconTypeEnum.unfavorite && (\n                    <StyledFavoriteOutlineIcon />\n                )\n            }\n            {\n                icon === ButtonIconTypeEnum.copy && (\n                    <StyledCopyIcon />\n                )\n            }\n        </StyledButton>\n    )\n}\n\nexport default UserActionButtonIcon;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iStyledProps {\n    ison: string;\n}\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input<iThemeStyleProp>`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    ${props => props.ThemeStyle === ThemEnum.Dark && `\n        outline: 2px solid rgba(255,255,255, 0.3);\n    `}\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n    flex: 0 0 2.7rem;\n`;","import React, { FC, useState, useContext, useEffect } from 'react';\nimport { StyledCheckBox, CheckBoxIcon, StyledFieldWrapper } from './checkbox-plain.styles';\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\n\ntype Props = {\n    id: string;\n    value: string;\n    inputChangeHandler: (value: string | undefined, checked: boolean) => void;\n    isChecked?: boolean;\n}\n\nconst CheckboxPlain: FC<Props> = ({ id, value, inputChangeHandler, isChecked = false }) => {\n    const [overrideIsChecked, setOverrideIsChecked] = useState<boolean>(false);\n    const { theme } = useContext(ThemeContext);\n\n    useEffect(() => {\n        setOverrideIsChecked(isChecked)\n    }, [isChecked])\n\n    return (\n        <StyledFieldWrapper>\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={overrideIsChecked ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                ThemeStyle={theme}\n                id={id}\n                checked={overrideIsChecked}\n                value={value}\n                onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    setOverrideIsChecked(evt.target.checked);\n                    inputChangeHandler(evt.target.value, evt.target.checked);\n                }}\n            />\n        </StyledFieldWrapper>\n\n    )\n}\n\nexport default CheckboxPlain;","import { Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CardItem = styled.div<iThemeStyleProp>`\n    background-color: ${(props) => props.theme.colors.pageSecondaryColor1};\n    padding: 1rem;\n    color: #fff;\n    min-height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        background-color: #fff;\n        border: 2px solid ${props.theme.colors.pageSecondaryColor1};\n        border-top: 0.5rem solid ${props.theme.colors.pageSecondaryColor1};\n        color: ${props.theme.colors.pageForeground1};\n    `}\n`;\n\nexport const CardCopy = styled.p`\n    font-weight: 300;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n`;\n\nexport const CardTitleWrap = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n`;\n\nexport const CardTitle = styled.h3`\n    font-weight: 400;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    padding-right: 0.5rem;\n`;\n\nexport const CardBottomWrapper = styled.div<iThemeStyleProp>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    * { flex: 1}\n    a {\n        color: #fff;\n        text-decoration: none;\n        flex: 0 0 1;\n        text-align: right;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        svg {\n            flex: 0 0 24px;\n        }\n    }\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        a {\n            color: ${props.theme.colors.pageLinkColor1};\n        }\n    `}\n`;\n\nexport const CardMetaInfo = styled.div<iThemeStyleProp>`\n    display: flex;\n    align-items: top;\n    justify-content: left;\n    * {\n        flex: 1;\n    }\n\n    span {\n        position: relative;\n        padding-right: 8px;\n        margin-right: 8px;\n        white-space: nowrap;\n        flex: 0;\n        &:before {\n            position: absolute;\n            content: '';\n            right: 0;\n            width: 1px;\n            height: 100%;\n            background-color: #fff;\n            opacity: 0.5;\n        }\n        ${props => props.ThemeStyle === ThemEnum.Light && `\n            &::before {\n                background-color: ${props.theme.colors.pageForeground1};\n            }\n        `}\n    }\n`;","import styled from 'styled-components';\nimport { Delete, Edit, Share, Print, Favorite, FavoriteBorderOutlined } from '@material-ui/icons';\nimport { ContentCopy } from '@mui/icons-material';\nimport {Theme as ThemeEnum } from '../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle?: ThemeEnum;\n    inverse: string;\n}\n\nexport const StyledFavoriteIcon = styled(Favorite)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledFavoriteOutlineIcon = styled(FavoriteBorderOutlined)`\n    font-size: 1.5rem !important;\n`;\n\n\nexport const StyledEditIcon = styled(Edit)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledDeleteIcon = styled(Delete)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledShareIcon = styled(Share)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledPrintIcon = styled(Print)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledCopyIcon = styled(ContentCopy)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledButton = styled.button<iThemeStyleProp>`\n    opacity: 0.5;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    transition: opacity ease-in-out 300ms;\n    cursor: pointer;\n    background-color: transparent;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    ${props => props.inverse === 'yes' && `\n        color: #fff;\n        opacity: 0.7;\n    `};\n    margin: 0 1rem 0 0;\n    &:last-child {\n        margin: 0;\n    }\n    &:hover {\n        transition: opacity ease-in-out 300ms;\n        opacity: 1;\n    }\n`;\n","import React, { FC, useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\n\nimport Backdrop from '../backdrop/backdrop.component';\nimport ButtonLink from '../button-link/button-link.component';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport {\n    addFavoriteBulk, removeFavoriteBulk, addShareBulk, removeShareBulk\n} from '../../../services/recipes/recipes.services';\nimport {\n    StyledControlWrap, StyledListItem, StyledMoreIconButton, StyledToolBarDivider, StyledMoreIcon,\n    StyledToggleButton, StyledMenuContent\n} from './bulk-opperation-controls.styles';\n\n\nenum actionItemEnums {\n    favorite = \"favorites add\",\n    unfavorite = \"favorites remove\",\n    share = \"sharing add\",\n    noshare = \"sharing remove\"\n}\n\ninterface iActionItem {\n    id: keyof typeof actionItemEnums;\n    name: actionItemEnums;\n    notAllowed: boolean;\n}\n\ntype Props = {\n    bulkCount: number;\n    handleEditMode: () => void;\n    selectMode: boolean;\n    bulkList: string[];\n    isMixedList: boolean;\n}\n\nconst BulkOpperationsControls: FC<Props> = ({ bulkCount, bulkList, handleEditMode, selectMode, isMixedList }) => {\n    const { addToast } = useToasts();\n    const { user, token } = useContext(AuthContext);\n    const { recipeItems, bulkUpdateRecipes, setRecipeItems } = useContext(RecipesContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [confirmOpen, setConfirmOpen] = useState<boolean>(false);\n    const [actionType, setActionType] = useState<string>('');\n\n    const handleActionsMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const handleConfirmCancel = () => {\n        setConfirmOpen(false);\n    };\n\n    const handleConfirmed = () => {\n        const getPlural = () => bulkCount !== 1 ? 's' : '';\n        let confirmMsg = `${bulkCount} item${getPlural()} updated`;\n        setConfirmOpen(false);\n        setIsOpen(false);\n        handleEditMode();\n\n        if (user?.userId) {\n            switch (actionType) {\n                case \"favorite\":\n                    addFavoriteBulk(bulkList, user.userId, token).then(resp => {\n\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"unfavorite\":\n                    removeFavoriteBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"share\":\n                    addShareBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n                case \"noshare\":\n                    removeShareBulk(bulkList, user.userId, token).then(resp => {\n                        setRecipeItems(bulkUpdateRecipes(resp.data, recipeItems));\n                        addToast(\n                            `Success: ${confirmMsg}`,\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                    }).catch(err => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                    break;\n            }\n        }\n    };\n\n    const handleActionClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        const actionValue = (evt.target as HTMLButtonElement).id;\n        setActionType(actionValue);\n        setConfirmOpen(true);\n    }\n\n    const actionItems: iActionItem[] = [\n        { id: \"favorite\", name: actionItemEnums.favorite, notAllowed: false },\n        { id: \"unfavorite\", name: actionItemEnums.unfavorite, notAllowed: false },\n        { id: \"share\", name: actionItemEnums.share, notAllowed: isMixedList },\n        { id: \"noshare\", name: actionItemEnums.noshare, notAllowed: isMixedList }\n    ];\n\n    return (\n        <StyledControlWrap>\n            {\n                selectMode && bulkCount > 0 && (\n                    <React.Fragment>\n                        <Backdrop isOpen={isOpen} toggleClose={() => handleActionsMenu()} />\n                        <StyledToolBarDivider>\n                            <StyledMoreIconButton onClick={() => handleActionsMenu()} title={`${bulkCount} item${bulkCount !== 1 ? 's' : ''} selected`}>\n                                <StyledMoreIcon />\n                                <span>({bulkCount})</span>\n                            </StyledMoreIconButton>\n                            <ul>\n                                {\n                                    isOpen && <StyledMenuContent>\n                                        {\n                                            actionItems.map(({ id, name, notAllowed }) => (\n                                                <StyledListItem key={id}>\n                                                    <ButtonLink\n                                                        id={id}\n                                                        disabled={notAllowed}\n                                                        clickHandler={handleActionClick}\n                                                    >{name}</ButtonLink>\n                                                </StyledListItem>\n                                            ))\n                                        }\n                                    </StyledMenuContent>\n                                }\n                            </ul>\n                        </StyledToolBarDivider>\n                    </React.Fragment>\n                )\n            }\n            {\n                <StyledToolBarDivider>\n                    <StyledToggleButton onClick={() => handleEditMode()} title={selectMode ? 'Cancel select items' : 'Select items'}>\n                        {selectMode ? 'Cancel' : 'Select items'}\n                    </StyledToggleButton>\n                </StyledToolBarDivider>\n            }\n            <ConfirmDialog\n                open={confirmOpen}\n                title={\"Are you sure?\"}\n                confirmText={`${actionItemEnums[actionType as keyof typeof actionItemEnums]} for ${bulkCount} ${bulkCount !== 1 ? 'items' : 'item'}`}\n                handleCancel={handleConfirmCancel}\n                handleConfirm={handleConfirmed}\n            />\n        </StyledControlWrap>\n    )\n}\n\nexport default BulkOpperationsControls;","import React, { FC, useContext, useState, useEffect } from 'react';\n\nimport RecipeRating from '../../atoms/rating/rating.component';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight } from \"@material-ui/icons\";\nimport CheckBoxPlain from '../checkbox-plain/checkbox-plain.component';\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { CardItem, CardCopy, CardBottomWrapper, CardTitleWrap, CardMetaInfo, CardTitle } from './recipe-card-item.styles';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\nimport { iUser } from '../../../interfaces/user/user.interface';\nimport UserActionButtonIcon, { ButtonIconTypeEnum } from '../../atoms/user-action-button-icon/user-action-button-icon.component';\nimport { addFavorite, removeFavorite } from '../../../services/recipes/recipes.services';\n\n\ntype Props = {\n    item: iRecipe;\n    selectMode?: boolean;\n    onSelectChange?: (id: string | undefined, checked: boolean) => void;\n    isBulkSelected?: boolean,\n    showFavorites?: boolean,\n}\n\nconst checkIsFavorite = (item: iRecipe, user: iUser): boolean => {\n    if (item?.favorites && user) {\n        let tempFav = item.favorites.find(f => f.userId === user?.userId);\n        if (tempFav) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nconst RecipeCardItem: FC<Props> = ({ item, selectMode = false, onSelectChange, isBulkSelected = false, showFavorites = true }) => {\n    const { theme } = useContext(ThemeContext);\n    const { recipeItems, bulkUpdateRecipes, setRecipeItems } = useContext(RecipesContext);\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const { token, isLoggedIn, user } = useContext(AuthContext);\n    const [isFav, setIsFav] = useState<boolean>(false);\n    const [favDisabled, setFavDisabled] = useState<boolean>(false);\n\n    const handleChange = (id: string | undefined, checked: boolean) => {\n        if (onSelectChange) {\n            onSelectChange(id, checked);\n            if (user) {\n                setIsFav(checkIsFavorite(item, user));\n            }\n        }\n    }\n\n    const onFavoriteAction = () => {\n        setFavDisabled(true);\n        if (isFav) {\n            removeFavorite(item._id, user?.userId, token).then((resp) => {\n                setIsFav(false);\n                setRecipeItems(bulkUpdateRecipes([resp.data], recipeItems));\n                setFavDisabled(false);\n            }).catch(err => {\n                console.error(err.message);\n            });\n        } else {\n            addFavorite(item._id, user?.userId, token).then((resp) => {\n                setIsFav(true);\n                setRecipeItems(bulkUpdateRecipes([resp.data], recipeItems));\n                setFavDisabled(false);\n            }).catch(err => {\n                console.error(err.message);\n            });\n        }\n    }\n\n    useEffect(() => {\n        setIsChecked(isBulkSelected);\n        handleChange(item._id, isBulkSelected);\n    }, [isBulkSelected, selectMode]);\n\n    useEffect(() => {\n        if (item?.favorites && user) {\n            setIsFav(checkIsFavorite(item, user))\n        }\n\n    }, [item, user]);\n\n    return (\n        <CardItem ThemeStyle={theme}>\n            <CardTitleWrap>\n                <CardTitle>{item.r_name}</CardTitle>\n                {\n                    selectMode && (\n                        <CheckBoxPlain\n                            id={item._id || 'none'}\n                            value={item._id || 'none'}\n                            inputChangeHandler={handleChange}\n                            isChecked={isChecked}\n                        />\n                    )\n                }\n                {\n                    showFavorites && !selectMode && isLoggedIn && (\n                        <React.Fragment>\n                            {\n                                isFav ? (\n                                    <UserActionButtonIcon\n                                        disabled={favDisabled}\n                                        icon={ButtonIconTypeEnum.favorite}\n                                        title=\"Remove Favorite\"\n                                        clickHandler={() => onFavoriteAction()}\n                                        inverse={theme !== Theme.Light}\n                                    />\n                                ) : (\n                                    <UserActionButtonIcon\n                                        disabled={favDisabled}\n                                        icon={ButtonIconTypeEnum.unfavorite}\n                                        title=\"Add Favorite\"\n                                        clickHandler={() => onFavoriteAction()}\n                                        inverse={theme !== Theme.Light}\n                                    />\n                                )\n                            }\n                        </React.Fragment>\n                    )\n                }\n            </CardTitleWrap>\n            <CardCopy>{item?.steps?.join(' ')}</CardCopy>\n            <CardBottomWrapper ThemeStyle={theme}>\n                <CardMetaInfo ThemeStyle={theme}>\n                    <span>{item.category}</span>\n                    <RecipeRating inverse={theme === Theme.Light} rating={item.rating} />\n                </CardMetaInfo>\n                <Link to={`/recipes/${item._id}`}>View More <ChevronRight /></Link>\n            </CardBottomWrapper>\n        </CardItem>\n    );\n}\n\nexport default RecipeCardItem;","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { CardList } from \"./featured-recipes.styles\";\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\n\nconst FeaturedRecipes = () => {\n    const { recipeItems, getFeaturedRecipes } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [featured, setFeatured] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFeatured(getFeaturedRecipes(filterList));\n    }, [recipeItems, user, getFeaturedRecipes])\n\n\n    return (\n        <CardList>\n            {\n                featured.map((item, key) => (\n                    <RecipeCardItem key={key} item={item} showFavorites={false} />\n                ))\n            }\n        </CardList>\n    );\n}\n\nexport default FeaturedRecipes;","import React from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const SpinnerWrapper = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n    color: ${props => props.theme.colors.pageHighLight2} !important;\n`;\n\n\nexport const SpinnerOuter = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React from 'react';\n\nimport { SpinnerWrapper, StyledCircularProgress } from './spinner.styles';\n\n\nconst Spinner = () => (\n    <SpinnerWrapper>\n        <StyledCircularProgress />\n    </SpinnerWrapper>\n);\n\nexport default Spinner;","import React, { useContext } from \"react\";\n\nimport { HeroStyles, HeroSubTitle, HeroWrapper, StyledHeroGraphic, SpinnerWrapper } from \"./home.styles\";\nimport CategoryTags from '../../components/molecules/category-tags/category-tags.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport FeaturedRecipes from \"../../components/molecules/featured-recipes/featured-recipes.component\";\nimport { RecipesContext } from \"../../providers/recipes/recipes.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst HomePage = () => {\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <HeroWrapper>\n                <StyledHeroGraphic />\n                <div>\n                    <HeroStyles>Recipe Box</HeroStyles>\n                    <HeroSubTitle>A collection of my favorite recipes</HeroSubTitle>\n                </div>\n            </HeroWrapper>\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <FeaturedRecipes />\n                        <CategoryTags />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default HomePage;\n\n","import styled from 'styled-components';\n\nexport const StyledPageTitle = styled.h2`\n    font-size: ${(props) => props.theme.fontSizes.medium};\n    line-height: normal;\n    font-weight: 300;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;","import React, { FC } from 'react';\nimport { StyledPageTitle } from './page-title.styles';\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nconst PageTitle: FC<Props> = ({ children }) => (\n    <StyledPageTitle children={children} />\n);\n\nexport default PageTitle;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n    margin-top: 1rem;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75rem 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n    &>a {\n        color: ${(props) => props.theme.colors.pageLinkColor1};\n        text-decoration: none;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`;","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledList, StyledListItem } from './recipe-list.styles';\n\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipeList: FC<Props> = ({ recipes = [] }) => {\n\n    return (\n        <StyledList>\n            {\n                recipes.map(item => (\n                    <StyledListItem key={item._id}>\n                        <Link to={`/recipes/${item._id}`}>\n                            {item.r_name}\n                        </Link>\n                    </StyledListItem>\n                ))\n            }\n        </StyledList>\n    )\n}\n\nexport default RecipeList;","import styled from 'styled-components';\n\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledBackdrop = styled.div<iStyledMenuOuter>`\n    background-color: rgba(0, 0, 0, 0.2);\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 19;\n    display: ${props => props.isOpen ? 'block' : 'none'};\n`;","import React, { FC } from 'react';\n\nimport { StyledBackdrop } from './backdrop.styles'\n\ntype Props = {\n    isOpen: boolean;\n    toggleClose: () => void;\n}\n\nconst Backdrop: FC<Props> = ({ isOpen, toggleClose }) => (\n    <StyledBackdrop isOpen={isOpen} onClick={() => toggleClose()} />\n)\n\nexport default Backdrop;","import styled from 'styled-components';\n\nexport const StyledButtonLink = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    line-height: inherit;\n    &:hover {\n        text-decoration: underline;\n    }\n    &:disabled {\n        opacity: 0.3;\n        cursor: not-allowed;\n        text-decoration: none;\n    }\n`;","import React, { FC } from 'react';\n\nimport { StyledButtonLink } from './button-link.styles'\n\ninterface Props {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    id?: string | undefined;\n    clickHandler: (evt: React.MouseEvent<HTMLButtonElement>) => void;\n}\nconst ButtonLink: FC<Props> = ({ children, id, disabled, clickHandler }) => {\n    return (\n        <StyledButtonLink\n            id={id}\n            onClick={(evt) => clickHandler(evt)}\n            disabled={disabled}\n        >\n            {children}\n        </StyledButtonLink>\n    )\n}\n\nexport default ButtonLink;","import styled from 'styled-components';\nimport { Dialog } from '@material-ui/core';\n\n\nexport const StyledConfirmButton = styled.button`\n    color: #fff;\n    border: 0;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledCancelButton = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledDialog = styled(Dialog)`\n    .MuiPaper-root {\n        border: 1px solid ${props => props.theme.colors.pageBorderColor1};\n        border-radius: 0px;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        color: ${props => props.theme.colors.pageHighLight2}\n    }\n    \n    .MuiDialogContentText-root {\n        \n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n","import React, { FC } from 'react';\n\nimport { DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\n\nimport { StyledDialog, StyledCancelButton, StyledConfirmButton } from './confirm-dialog.styles';\n\ninterface Props {\n    title: string;\n    confirmText: string;\n    open: boolean;\n    handleCancel: () => void;\n    handleConfirm: () => void;\n}\n\nexport const ConfirmDialog: FC<Props> = ({ title, confirmText, handleCancel, handleConfirm, open }) => {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleCancel}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {confirmText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <StyledCancelButton onClick={handleCancel}>No</StyledCancelButton>\n                <StyledConfirmButton onClick={handleConfirm} autoFocus>Yes</StyledConfirmButton>\n            </DialogActions>\n        </StyledDialog>\n    );\n}\n\nexport default ConfirmDialog;\n","import styled from 'styled-components';\nimport { MoreHoriz } from '@material-ui/icons';\n\nexport const StyledControlWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledMoreIconButton = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    color: ${(props) => props.theme.colors.pageLinkColor1};\n    cursor: pointer;\n`;\n\nexport const StyledListItem = styled.li`\n    line-height: 2rem;\n    white-space: nowrap;\n`\n\nexport const StyledToolBarDivider = styled.div`\n    position: relative;\n    display: flex;\n    padding-right: 0.75rem;\n    margin-right: 0.50rem;\n    line-height: 1.5rem;\n\n    &::after {\n        position: absolute;\n        content: '';\n        right: 0;\n        width: 1px;\n        height: 100%;\n        background-color: ${props => props.theme.colors.pageForeground1};\n        opacity: 0.3;\n    }\n`;\n\nexport const StyledMoreIcon = styled(MoreHoriz)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledToggleButton = styled.button`\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.pageLinkColor1};\n    &:hover {\n        text-decoration: underline;\n    }\n    line-height: inherit;\n`;\n\nexport const StyledMenuContent = styled.div`\n    position: absolute;\n    z-index: 20;\n    top: 1.75rem;\n    right: 20%;\n    min-height: 150px;\n    min-width: 150px;\n    padding: 1rem;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React, { FC } from 'react';\n\nimport { StyledPrimaryButton } from './form-button.styles';\n\nexport enum FormButtons {\n    Primary = \"Primary\",\n    Secondary = \"Secondary\"\n}\n\ninterface Props {\n    buttonText: string;\n    type: 'button' | 'submit';\n    FormButton: FormButtons;\n    onClick?: () => void;\n    disabled?: boolean;\n    size?: 'small' | undefined;\n}\n\n\n\nconst FormButton: FC<Props> = ({ buttonText, type = 'button', FormButton, onClick, disabled = false, size }) => {\n    return (\n        <StyledPrimaryButton\n            Size={size}\n            onClick={onClick}\n            FormButton={FormButton}\n            type={type}\n            disabled={disabled}\n        >\n            {buttonText}\n        </StyledPrimaryButton>\n    )\n}\n\nexport default FormButton;","import styled from 'styled-components';\nimport {GridOn, List} from '@material-ui/icons';\n\nexport const StyledButton = styled.button`\n    display: flex;\n    background: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n`;\n\nexport const StyledGridOnIcon = styled(GridOn)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`;\n\nexport const StyledListIcon = styled(List)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`;\n","import React, { FC } from \"react\";\n\nimport { StyledGridOnIcon, StyledListIcon, StyledButton } from './list-grid-toggle.styles'\n\ninterface Props {\n    grid: boolean;\n    onClick: VoidFunction\n}\n\nconst ListGridToggleButton: FC<Props> = ({ grid, onClick }) => (\n    <StyledButton title={grid ? 'View list' : 'View cards'} onClick={onClick}>\n        {\n            grid ? (\n                <StyledListIcon />\n            ) : (\n                <StyledGridOnIcon />\n            )\n        }\n    </StyledButton>\n);\n\nexport default ListGridToggleButton;","import styled from 'styled-components';\n\nexport const StyledCardContainer = styled.div`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;","import React, { FC, useEffect, useState } from 'react';\n\nimport { StyledCardContainer } from './recipes-category-card-list.styles';\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[];\n    selectMode?: boolean;\n    onSelectChange?: (id: string | undefined, checked: boolean) => void;\n    isBulkSelected?: boolean;\n}\n\nconst RecipesCategoryCardList: FC<Props> = ({ recipes = [], selectMode = false, onSelectChange, isBulkSelected = false }) => {\n    const [isBulk, setIsbulk] = useState(isBulkSelected);\n\n    useEffect(() => {\n        setIsbulk(isBulkSelected);\n    }, [isBulkSelected, selectMode]);\n\n    return (\n        <StyledCardContainer>\n            {\n                recipes.map((item, key) => (\n                    <RecipeCardItem\n                        key={key}\n                        item={item}\n                        selectMode={selectMode}\n                        onSelectChange={onSelectChange}\n                        isBulkSelected={isBulk}\n                    />\n                ))\n            }\n            {\n                recipes.length < 3 && (\n                    <React.Fragment>\n                        <div></div>\n                        <div></div>\n                    </React.Fragment>\n                )\n            }\n        </StyledCardContainer>\n\n    );\n}\n\n\nexport default RecipesCategoryCardList;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledToolBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const StyledCheckAllWrapper = styled.div`\n  margin-bottom: -0.375rem;\n  margin-top: 0.75rem;\n`;\n","import styled from 'styled-components';\n\nexport const StyledEmptyMessage = styled.p`\n  text-align: center;\n  margin: 2rem 0;\n  color: ${props => props.theme.colors.pageBorderColor1};\n`;","import React, { FC } from 'react';\n\nimport { StyledEmptyMessage } from './empty-message.styles';\n\ninterface Props {\n    msg: string;\n}\n\nexport const EmptyMesssage: FC<Props> = ({ msg }) => (\n    <StyledEmptyMessage>\n        {msg}\n    </StyledEmptyMessage>\n)\n\nexport default EmptyMesssage;","import React, { useState, useContext } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport BulkOperationControls from \"../../components/atoms/bulk-opperation-controls/bulk-opperation-controls.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport CheckBoxPlain from \"../../components/atoms/checkbox-plain/checkbox-plain.component\"\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap, StyledToolBar, StyledCheckAllWrapper } from './recipes.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst checkMixedList = (bulkList: string[], recipeItems: iRecipe[], userId: string | undefined) => {\n    let ret = false;\n    if (!userId) {\n        return ret;\n    }\n\n    for (let i = 0; i < recipeItems.length; i++) {\n        const item = recipeItems[i];\n\n        if (bulkList.findIndex((bulkItem) => bulkItem === item._id && item.user_id !== userId) !== -1) {\n            ret = true;\n            break;\n        }\n    }\n    return ret;\n};\n\nconst RecipesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [isMixedList, setIsMixedList] = useState<boolean>(false);\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user, isLoggedIn } = useContext(AuthContext);\n    const [selectMode, setSelectMode] = useState<boolean>(false);\n    const [bulkList, setBulkList] = useState<string[]>([]);\n    const [bulkCount, setBulkCount] = useState<number>(0);\n    const [isBulkSelected, setIsBulkSelected] = useState<boolean>(false);\n    const [isSelectAllChecked, setIsSelectAllChecked] = useState<boolean>(false);\n\n    const onButtonClick = () => {\n        setIsGridView(!isGridView);\n        setSelectMode(false);\n    };\n\n    const handleEditMode = () => {\n        setSelectMode(!selectMode);\n        setBulkList([]);\n        setIsBulkSelected(false);\n        setIsSelectAllChecked(false);\n        setBulkCount(0);\n    };\n\n    const handleToggleAllCheckboxes = (value: string | undefined, checked: boolean) => {\n        setBulkList([]);\n        setIsBulkSelected(checked);\n    }\n\n    const handleSelectChange = (id: string | undefined, checked: boolean) => {\n        if (id) {\n            let templist = bulkList;\n            if (checked) {\n                templist.push(id);\n            } else {\n                let idx = templist.findIndex(item => item === id);\n                templist.splice(idx, 1)\n            }\n            setBulkList(templist);\n            setBulkCount(templist.length);\n            let isMixedTemp = checkMixedList(bulkList, recipeItems, user?.userId);\n            setIsMixedList(isMixedTemp);\n        }\n    }\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>\n                    Recipes ({recipeItems.length})\n                </PageTitle>\n                <StyledToolBar>\n                    {isGridView && isLoggedIn && (\n\n                        <BulkOperationControls\n                            bulkCount={bulkCount}\n                            bulkList={bulkList}\n                            handleEditMode={() => handleEditMode()}\n                            selectMode={selectMode}\n                            isMixedList={isMixedList}\n                        />\n                    )}\n                    <ListGridToggleButton grid={isGridView} onClick={() => onButtonClick()} />\n                </StyledToolBar>\n            </StyledTitleWrapper>\n            {\n                isGridView && isLoggedIn && selectMode && (\n                    <StyledCheckAllWrapper>\n                        <CheckBoxPlain\n                            id=\"selectAllItems\"\n                            inputChangeHandler={handleToggleAllCheckboxes}\n                            value=\"\"\n                            isChecked={isSelectAllChecked}\n                        />\n                    </StyledCheckAllWrapper>\n                )\n            }\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && recipeItems.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={recipeItems} selectMode={selectMode} isBulkSelected={isBulkSelected} onSelectChange={handleSelectChange} />\n                ) : (\n                    <RecipeList recipes={recipeItems} />\n                )\n            }\n            {\n                !isLoading && recipeItems.length === 0 &&\n                <EmptyMesssage msg={'There are no recipes.'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipesPage;","import { iUserItem } from \"../../interfaces/users/users.interface\";\n\nexport const addUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   userList.push(user);\n   const sorted = userList.sort(\n      (a: iUserItem, b: iUserItem) => (\n          a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n      ));\n   return sorted;\n}\n\nexport const removeUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   const idx = userList.findIndex(u => u.id === user.id);\n   userList.splice(idx, 1);\n   return userList;\n}\n\n","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\nimport {iUserItem} from '../../interfaces/users/users.interface'\n\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USERS_ENDPOINT;\nconst deleteUserEndpoint = process.env.REACT_APP_USER_DELETE;\n\ninterface iGetUsersResp  {\n    users: iUserItem[];\n}\n\n\nexport const getUsers = async () => {\n    try {\n\n        const resp = await axios.get(`${baseURL}${endpoint}`);\n        return resp.data\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const deleteUserAccount = async (user: iUser) => {\n\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${deleteUserEndpoint}/${user.userId}`,\n            headers: {\n                Authorization: `Bearer ${user.token ? user.token : 'none'}`\n            }\n        })\n    } catch (err) {\n        throw(err);\n    }\n}\n","import React, { createContext, FC, useState, useEffect } from 'react';\n\nimport USERS_LIST from './users-collection.data.json';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { addUserItem, removeUserItem } from './users.utilities';\nimport { getUsers } from '../../services/users/users.service';\n\n\ntype UsersContextType = {\n    userItems: iUserItem[];\n    isLoading: boolean;\n    userCount: number;\n    addUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n    removeUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n}\n\nexport const UsersContext = createContext<UsersContextType>({\n    userItems: [],\n    userCount: 0,\n    isLoading: true,\n    addUserItem: addUserItem,\n    removeUserItem: removeUserItem\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\n\nconst UsersProvider: FC<Props> = ({ children }) => {\n    const [userItems, setUserItems] = useState<iUserItem[]>([]);\n    const [userCount, setUserCount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n\n        getUsers().then(({ users }) => {\n            if (users) {\n                const sorted = users.sort(\n                    (a: iUserItem, b: iUserItem) => (\n                        a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n                    ));\n                setUserItems(sorted);\n                setUserCount(users.length);\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, [])\n\n    return (<UsersContext.Provider value={{\n        userItems,\n        userCount,\n        isLoading,\n        addUserItem,\n        removeUserItem\n    }}>\n        {children}\n    </UsersContext.Provider>)\n}\n\nexport default UsersProvider;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { UsersContext } from \"../../providers/users/users.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap } from './favorites.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst FavoritesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [filteredRecipes, setFilteredRecipes] = useState<iRecipe[]>([]);\n    const { recipeItems, recipeCount, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const { userItems } = useContext(UsersContext);\n\n    const onButtonClick = () => setIsGridView(!isGridView);\n\n    useEffect(() => {\n        if (user) {\n            let filteredItems: iRecipe[] = recipeItems.filter(r => r.favorites?.length && user && r.favorites.some(f => f.userId === user.userId))\n            setFilteredRecipes(filteredItems);\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Favorite Recipes ({filteredRecipes.length})</PageTitle>\n                <ListGridToggleButton grid={isGridView} onClick={onButtonClick} />\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={filteredRecipes} />\n                ) : (\n                    <RecipeList recipes={filteredRecipes} />\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length === 0 &&\n                <EmptyMesssage msg={'No favorite recipes'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default FavoritesPage;","import styled from 'styled-components';\n\nexport const StyledFieldWrapper = styled.div`\n    margin-bottom: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledFieldWrapper } from './field-wrapper.styles'\n\ninterface Props {\n    children?: React.ReactNode\n}\n\n\nconst FieldWrapper: FC<Props> = ({ children }) => {\n\n    return (\n        <StyledFieldWrapper>\n            {children}\n        </StyledFieldWrapper>\n    );\n}\n\nexport default FieldWrapper;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.div`\n    .select {\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n    }\n`;\n","import React, { useState, FC } from \"react\";\n\nimport { useField, Field } from \"formik\";\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledSelect, StyledLabel } from './select-option-field.styles';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    as?: string;\n    id: string;\n    label?: string;\n    name: string;\n    dataType?: string;\n    optionData: iKeyValuePair[] | undefined;\n    defaultOptionText?: string;\n    required?: boolean;\n    disabled?: boolean;\n}\n\nconst SelectOptionField: FC<Props> = ({\n    as,\n    id,\n    label,\n    name,\n    dataType,\n    optionData,\n    defaultOptionText,\n    required = false,\n    disabled = false,\n}) => {\n    const [field, meta, helpers] = useField({ name, id });\n    const { setValue } = helpers;\n\n    if (!optionData) {\n        optionData = [];\n    }\n\n    if (dataType === 'boolean') {\n        if (field.value === 'true' || field.value === 'false') {\n            field.value === 'true' ? setValue(true, false) : setValue(false, false);\n        }\n    }\n\n\n    return (\n        <FieldWrapper>\n            {label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledSelect>\n                <Field\n                    as=\"select\"\n                    className='select'\n                    {...field}\n                    id={id}\n                    name={name}\n                    datatype={dataType || \"string\"}\n                    disabled={disabled}\n                    required={required}\n                >\n                    {defaultOptionText && <option value=\"\">{defaultOptionText}</option>}\n                    {\n                        optionData.map((item: iKeyValuePair) => (\n                            <option key={item.id} value={item.id}>\n                                {item.name}\n                            </option>\n                        ))\n                    }\n                </Field>\n            </StyledSelect>\n        </FieldWrapper>\n    );\n}\n\nexport default SelectOptionField;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledVisibility = styled(Visibility)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledVisibilityOff = styled(VisibilityOff)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledEyeButton = styled.button`\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    width: 100%;\n    font-size: 1rem;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledEyeLabel = styled(StyledLabel)`\n    display: flex;\n    align-items: center;\n    > span {\n        margin-right: 0.5rem;\n    }\n`;\n","import React from 'react';\nimport { useField } from 'formik';\n\nimport { StyledInput, StyledLabel, StyledVisibility, StyledVisibilityOff, StyledEyeButton, StyledEyeLabel } from './text-field.styles';\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\n\ninterface iTextField {\n    name: string;\n    id: string;\n    placeholder?: string;\n    required?: boolean;\n    label?: string;\n    type?: 'text' | 'password';\n    isVisible?: boolean;\n    onVisibilityChange?: () => void;\n}\n\n\nconst RecipeTextField = ({\n    name, id, placeholder, type = \"text\", required = false, label, onVisibilityChange, isVisible }: iTextField) => {\n\n    const [field, meta] = useField({ name, id });\n    return (\n        <FieldWrapper>\n            {onVisibilityChange && (\n                <StyledEyeLabel Required={required} htmlFor={id}>\n                    <span>{label}</span>\n                    {\n                        isVisible ? (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"hide content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibilityOff />\n                            </StyledEyeButton>\n                        ) : (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"show content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibility />\n                            </StyledEyeButton>\n                        )\n                    }\n\n                </StyledEyeLabel>\n            )}\n            {!onVisibilityChange && label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledInput\n                id={id}\n                placeholder={placeholder}\n                required={required}\n                {...field}\n                type={type}\n            />\n        </FieldWrapper>\n    );\n}\n\nexport default RecipeTextField;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\ninterface iStyledProps {\n    ison: string;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    margin: 1.5rem 0 1rem 0;\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n`;\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;","import React, { FC } from 'react';\n\nimport { useField } from 'formik';\nimport FieldWrapper from '../field-wrapper/field-wrapper.component';\nimport { StyledFieldWrapper, StyledCheckBox, StyledLabel, CheckBoxIcon } from './checkbox-field.styles';\n\ninterface Props {\n    name: string;\n    required?: boolean;\n    label?: string;\n    id: string;\n}\n\nconst CheckBoxField: FC<Props> = ({ required = false, label, name, id }) => {\n    const [field, meta] = useField({ name, id, type: 'checkbox' });\n    return (\n        <StyledFieldWrapper>\n            {\n                label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)\n            }\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={field.value ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                required={required}\n                id={id}\n                {...field}\n            />\n        </StyledFieldWrapper>\n    )\n}\n\nexport default CheckBoxField;","import { Size } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport {FormButtons } from './form-button.component';\n\n\ninterface iButtonStyleProps {\n    FormButton: FormButtons;\n    Size?: Size;\n}\n\nexport const StyledPrimaryButton = styled.button<iButtonStyleProps>`\n    margin: 0 0 1rem 0;\n    width: 100%;\n\n    @media (min-width: 414px) {\n        margin: 0 0 0 0;\n        margin-right: ${props => props.FormButton === FormButtons.Primary ? '1rem' : 0 };\n        width: auto;\n    }\n    font-size: ${props => props.Size ? props.theme.fontSizes.small : props.theme.fontSizes.regular};\n    background-color: ${props => props.FormButton === FormButtons.Primary ?\n        props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n    border: 0;\n    padding: 0.5rem 1rem;\n    color: ${props => props.FormButton === FormButtons.Primary ?\n        '#fff' : props.theme.colors.pageForeground1};\n    cursor: pointer;\n    &:hover {\n        background-color: ${props => props.FormButton === FormButtons.Primary ?\n            props.theme.colors.pageHighLight2 : props.theme.colors.pageBorderColor1};\n    }\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        &:hover {\n            background-color: ${props => props.FormButton === FormButtons.Primary ?\n                props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n        }\n    }\n\n`;","import React, { FC, useContext } from 'react';\nimport { iMainNavItem } from '../../../interfaces/nav/nav.interface';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport CloseButton from '../../atoms/close-button/close-button.component';\nimport ThemeSwitcher from '../theme-switcher/theme-switcher.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport {\n    StyledMenuOuter,\n    StyledMenuHeader,\n    StyledNavUl,\n    StyledListItem,\n    StyledNavLink,\n    StyledFavorite,\n    StyledHome, StyledUsers, StyledMenu, StyledWidget, StyledSetting, StyledAddCircle, StyledNotifications\n} from './main-menu.styles';\n\ntype Props = {\n    isOpen: boolean;\n    toggleIsOpen: () => void;\n    items: iMainNavItem[];\n}\n\nexport enum Icons {\n    home = 0,\n    users = 1,\n    list = 2,\n    my = 3,\n    add = 4,\n    settings = 5,\n    favorite = 6,\n    notification = 7\n}\n\nconst returnIconsByKey = (id: Icons) => {\n    const map = {\n        \"0\": StyledHome,\n        \"1\": StyledUsers,\n        \"2\": StyledMenu,\n        \"3\": StyledWidget,\n        \"4\": StyledAddCircle,\n        \"5\": StyledSetting,\n        \"6\": StyledFavorite,\n        \"7\": StyledNotifications\n    };\n    return map[id] || null;\n}\n\nconst MainMenu: FC<Props> = ({ isOpen, toggleIsOpen, items }) => {\n    const { user } = useContext(AuthContext);\n\n    const itemsWithIcons = items.map((i, idx) => {\n        return {\n            ...i,\n            icon: returnIconsByKey(i.svgIcon)\n        }\n    });\n\n    return (\n        <StyledMenuOuter isOpen={isOpen}>\n            <div>\n                <StyledMenuHeader>\n                    <NavBrand isOpen={isOpen} toggleClose={toggleIsOpen} />\n                    <CloseButton closeHandler={toggleIsOpen} />\n                </StyledMenuHeader>\n                <StyledNavUl>\n                    {\n                        itemsWithIcons.map((item, idx) => (\n                            <StyledListItem key={`item${idx}`} onClick={() => toggleIsOpen()}>\n                                <StyledNavLink to={\n                                    item.params ? `${item.route}/${user?.userId}` : item.route\n                                }>\n                                    {item.icon !== null && <item.icon />}\n                                    {item.text}\n                                </StyledNavLink>\n                            </StyledListItem>\n                        ))\n                    }\n                </StyledNavUl>\n            </div>\n            <StyledNavUl>\n                <StyledListItem>\n                    <ThemeSwitcher />\n                </StyledListItem>\n            </StyledNavUl>\n        </StyledMenuOuter>\n    );\n}\n\nexport default MainMenu;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    `;\n    \n    export const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    `;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledPrimaryButton = styled.button`\n    font-size: ${props => props.theme.fontSizes.regular};\n    background-color: ${props => props.theme.colors.navBarBackground};\n    border: 0;\n    padding: 0.5rem 1rem;\n    margin: 0 0 0 0;\n    color: #fff;\n    cursor: pointer;\n    &:hover {\n        background: ${props => props.theme.colors.pageHighLight2}\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n\n\n","import styled from 'styled-components';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\n\r\n\r\nexport const StyledButtonToggle = styled.button`\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: ${props => props.theme.colors.pageLinkColor1};\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\ninterface iStyledToggleWrap {\r\n    Space: 'yes' | 'no';\r\n}\r\n\r\nexport const StyledToggleWrap = styled.div<iStyledToggleWrap>`\r\n    color: ${(props) => props.theme.colors.pageForeground1};\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n    padding: ${props => props.Space === 'yes' ? '1rem 0' : '0 0 1rem 0'};\r\n`;\r\n\r\nexport const StyledArrowDown = styled(KeyboardArrowDown)`\r\n    font-size: 1.5rem !important;\r\n`;\r\n\r\nexport const StyledArrowUp = styled(KeyboardArrowUp)`\r\n    font-size: 1.5rem !important;\r\n`;","import React, { FC } from 'react';\r\n\r\nimport { StyledButtonToggle, StyledToggleWrap, StyledArrowDown, StyledArrowUp } from './accordion-toggle.styles'\r\n\r\ntype Props = {\r\n    isOpen: boolean;\r\n    toggleHandler: () => void;\r\n    buttonText: string;\r\n    spacing?: boolean;\r\n}\r\n\r\nconst AccordionToggle: FC<Props> = ({ isOpen, toggleHandler, buttonText, spacing = true }) => (\r\n    <StyledToggleWrap Space={spacing ? 'yes' : 'no'}>\r\n        <StyledButtonToggle\r\n            type=\"button\"\r\n            onClick={() => toggleHandler()}\r\n        >\r\n            <span>{buttonText}</span>\r\n            {\r\n                isOpen ? (\r\n                    <StyledArrowUp />\r\n                ) : (\r\n                    <StyledArrowDown />\r\n                )\r\n            }\r\n        </StyledButtonToggle>\r\n    </StyledToggleWrap>\r\n)\r\n\r\nexport default AccordionToggle;","import React, { useContext, useState, useEffect } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './add-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst AddRecipeForm = () => {\n    const { addToast } = useToasts();\n    const { token, user } = useContext(AuthContext);\n    const { recipeItems, setCount, getCategoryTags, addRecipeToList } = useContext(RecipesContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n    let navigate = useNavigate();\n    const formValuesInitial = {\n        user_id: user?.userId || '1',\n        user: user ? user.name : 'none',\n        r_name: '',\n        shared: false,\n        rating: 0,\n        cat_id: '',\n        category: '',\n        ingredients: [''],\n        steps: [''],\n        comments: []\n    };\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n    }, [recipeItems, getCategoryTags]);\n\n\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n\n                    const catName = catData.find(i => i.id === values.cat_id);\n                    const cat_id = Number(values.cat_id);\n                    const vals = {\n                        ...values,\n                        category: catName?.name || '',\n                        cat_id: cat_id\n                    }\n\n                    addRecipe(vals, token).then((resp) => {\n                        setSubmitting(false);\n                        setCurrentRecipeItems(addRecipeToList(currentRecipeItems, resp));\n                        setCount(currentRecipeItems.length)\n                        addToast(\n                            'Success',\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"r_name\"\n                            label=\"Recipe Name\"\n                            name=\"r_name\"\n                            placeholder=\"Ex: Chocolate Cake\"\n                            required\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"cat_id\"\n                            name=\"cat_id\"\n                            label=\"Category\"\n                            required={true}\n                            defaultOptionText=\"Select Recipe Category\"\n                            optionData={catData}\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"rating\"\n                            name=\"rating\"\n                            label=\"Rating\"\n                            required={true}\n                            defaultOptionText=\"Ex: Four Stars\"\n                            optionData={[\n                                { id: '1', name: 'One Star' },\n                                { id: '2', name: 'Two Stars' },\n                                { id: '3', name: 'Three Stars' },\n                                { id: '4', name: 'Four Stars' }\n                            ]}\n                        />\n\n                        <CheckBoxField\n                            id=\"shared\"\n                            name=\"shared\"\n                            label=\"Share Recipe\"\n                        />\n\n                        <div>\n                            <FieldArray\n                                name=\"ingredients\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.ingredients && values.ingredients.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Ingredients'\n                                                    isOpen={isOpenIngredients}\n                                                    toggleHandler={() => handleToggleIngredients()}\n                                                />\n                                                <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                    values.ingredients.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, '')}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Ingredients\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"steps\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.steps && values.steps.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Steps'\n                                                    isOpen={isOpenSteps}\n                                                    toggleHandler={() => handleToggleSteps()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.steps.map((item, index) => (\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(index, '')}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Steps\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"comments\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.comments && values.comments.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Comments'\n                                                    isOpen={isOpenComments}\n                                                    toggleHandler={() => handleToggleComments()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.comments.map((item, index) => (\n\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(\n                                                                                index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                            )}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })\n                                                }>\n                                                Add comment\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Add Recipe'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                        <FormButton\n                            type=\"button\"\n                            buttonText={'Cancel'}\n                            FormButton={FormButtons.Secondary}\n                            onClick={() => navigate(`/`)}\n                            disabled={false}\n                        />\n                    </Form>\n\n                )}\n            </Formik>\n        </StyledFormWrapper >\n    );\n}\n\nexport default AddRecipeForm;\n","import React from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport AddRecipeForm from \"../../templates/add-recipe-form/add-recipe-form.component\";\n\nconst AddRecipePage = () => (\n    <MainSection>\n        <PageTitle>Add Recipe</PageTitle>\n        <AddRecipeForm />\n    </MainSection>\n);\n\nexport default AddRecipePage;","import styled from 'styled-components';\n\nexport const DetailsTopWrapper = styled.div`\n    position: relative;\n    > h2 {\n        max-width: 60%;\n    }\n`;\n\nexport const MetaInfoTop = styled.div`\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    min-width: 200px;\n    padding: 1rem;\n`;\n\nexport const MetaInfoBottom = styled.div`\n    padding: 1rem;\n    color: ${(props) => props.theme.colors.pageForegroundColor1};\n`;\n\nexport const MetaInfoWrapper = styled.div`\n    @media (min-width: 595px) {\n        position: absolute;\n        top: 0;\n        right: 0;\n    }\n    color: #fff;\n    padding: 0 0 1rem 0;\n`;","import styled from \"styled-components\";\n\nexport const StyledListItem = styled.li`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${(props) => props.theme.colors.pageBackground2};\n`;\n\nexport const UserWrapper = styled.div`\n    display: flex;\n    justify-conent: flex-start;\n    align-items: center;\n`;","import styled from 'styled-components';\n\nexport const StyledAvatar = styled.span`\n    text-transform: capitalize;\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    color: #fff;\n    font-size: 1.3em;\n    padding: 0.5rem;\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledAvatar } from './user-avatar.styles';\n\ninterface Props {\n    name: string;\n}\n\n\nconst UserAvatar: FC<Props> = ({ name }) => (\n    <StyledAvatar>{name.slice(0, 1)}</StyledAvatar>\n);\n\nexport default UserAvatar;","import React, { FC } from \"react\";\n\nimport { StyledListItem, UserWrapper } from \"./comments-list-item.styles\";\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\n\ninterface Props {\n    item: { comment: string, user: string }\n}\n\nconst CommentItem: FC<Props> = ({ item }) => {\n\n    const { user, comment } = item;\n    return (\n        <StyledListItem>\n            <UserWrapper>\n                <UserAvatar name={user} />\n                <div>\n                    <div>{user}</div>\n                    <div>\n                        {comment}\n                    </div>\n                </div>\n            </UserWrapper>\n        </StyledListItem>\n    );\n}\n\nexport default CommentItem;","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n    text-align: right;\n    font-size: 14px;\n    float: right;\n`;","import React, { FC, useContext, useEffect, useState } from 'react';\n\nimport { StyledDiv } from './recipe-content-owner.styles';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\ninterface Props {\n    userId: string;\n    shared: boolean;\n}\n\nconst RecipeContentOwner: FC<Props> = ({ userId, shared }) => {\n    const [user, setUser] = useState<iUserItem | null>(null);\n\n    const { userItems } = useContext(UsersContext);\n    const action = shared ? 'Shared by' : 'Posted by';\n\n    useEffect(() => {\n        const findUser = userItems.find(u => u.id === userId);\n\n        if (findUser) {\n            setUser(findUser);\n        }\n    }, [userItems])\n\n    return (\n        <StyledDiv>\n            <span>{action} {user?.name || 'admin'}</span>\n        </StyledDiv>\n    );\n}\n\nexport default RecipeContentOwner;","import styled from \"styled-components\";\n\nexport const StyledDetailsDiv = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledH4 = styled.h4`\n    font-size: 1.25rem;\n    margin: 0.5em 0;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75em 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground2};\n    margin-bottom: 0.5rem;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        overflow: hidden;\n    `}\n`;\n\n\n\n\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useToasts } from 'react-toast-notifications';\n\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { StyledFormWrapper, StyledAccordionContent } from './add-comment.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipeComment } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n    handleSubmit: (recipe: iRecipe) => void;\n}\n\ninterface Values {\n    comment: string;\n    user: string;\n    userId: string;\n}\n\nconst AddCommentForm: FC<Props> = ({ recipeId, handleSubmit }) => {\n    const { addToast } = useToasts();\n\n    const { token, user } = useContext(AuthContext);\n\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [showForm, setShowForm] = useState(false);\n\n    useEffect(() => {\n        if (user) {\n            setFormValuesInitial({\n                user: user.name,\n                comment: '',\n                userId: user.userId\n            })\n        }\n    }, [user, setFormValuesInitial]);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n\n    return (\n        <React.Fragment>\n            <AccordionToggle\n                toggleHandler={() => toggleForm()}\n                isOpen={showForm}\n                buttonText=\"Add Comment\"\n                spacing={false}\n            />\n            {\n                showForm && (<StyledAccordionContent Collapsed={showForm ? 'expanded' : 'collapsed'}>\n                    <StyledFormWrapper>\n                        {\n                            formValuesInitial && (\n                                <Formik\n                                    initialValues={formValuesInitial}\n                                    onSubmit={(\n                                        values: Values,\n                                        { setSubmitting }: FormikHelpers<Values>\n                                    ) => {\n                                        addRecipeComment(values, recipeId || '', token).then((resp) => {\n                                            setSubmitting(false);\n                                            handleSubmit(resp);\n                                            setShowForm(false);\n                                        }).catch((err) => {\n                                            addToast(\n                                                `Error: ${err.message}`,\n                                                {\n                                                    appearance: 'error',\n                                                    autoDismiss: false\n                                                }\n                                            );\n                                        })\n                                    }}\n                                >\n                                    {({ values, resetForm, isValid, dirty }) => (\n                                        <Form>\n\n                                            <RecipeTextField\n                                                id=\"comment\"\n                                                name=\"comment\"\n                                                placeholder=\"Add a comment\"\n                                                required\n                                            />\n\n                                            <FormButton\n                                                type=\"submit\"\n                                                buttonText={'Ok'}\n                                                FormButton={FormButtons.Primary}\n                                                disabled={!dirty || !isValid}\n                                            />\n                                        </Form>\n                                    )}\n                                </Formik>\n                            )\n                        }\n                    </StyledFormWrapper>\n                </StyledAccordionContent>)\n            }\n        </React.Fragment>\n    );\n}\n\nexport default AddCommentForm;\n","import React, { FC, useEffect, useContext, useState } from \"react\";\n\nimport CommentItem from '../../atoms/comments-list-item/comments-list-item.component';\nimport RecipeContentOwner from '../../atoms/recipe-content-owner/recipe-content-owner.component';\nimport { StyledDetailsDiv, StyledH4, StyledListItem, StyledList, StyledHRule } from './recipe-view-details.styles';\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport AddCommentForm from \"../../../templates/add-comment/add-comment.component\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\ninterface Props {\n    recipe?: iRecipe;\n    id?: string;\n}\n\nconst RecipeViewDetails: FC<Props> = ({ id }) => {\n\n    const { recipeItems, editRecipe } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [recipe, setRecipe] = useState<iRecipe | undefined | null>(undefined);\n\n    const onCommentSubmit = (recipe: iRecipe) => {\n        editRecipe(recipeItems, recipe);\n        setRecipe(recipe);\n    }\n\n    useEffect(() => {\n        const tempRecipe = recipeItems.find(r => r._id === id);\n        if (tempRecipe) {\n            setRecipe(tempRecipe);\n        } else {\n            setRecipe(null);\n        }\n    }, [recipeItems])\n\n    if (!recipe) {\n        return (\n            <StyledDetailsDiv>\n                <p>No recipe found</p>\n            </StyledDetailsDiv>\n        )\n    }\n\n    return (\n        <StyledDetailsDiv>\n            <StyledH4>Ingredients</StyledH4>\n            <StyledList>\n                {\n                    recipe.ingredients?.map((item, key) => (\n                        <StyledListItem key={key}>{item}</StyledListItem>\n                    ))\n                }\n            </StyledList>\n            <StyledH4>Steps</StyledH4>\n            <ul>\n                {\n                    recipe.steps?.map((item, key) => (<StyledListItem key={key}>{item}</StyledListItem>))\n                }\n            </ul>\n            <StyledHRule />\n            <ul>\n                {\n                    recipe.comments?.map((item, key) => (\n                        <CommentItem key={key} item={item} />\n                    ))\n                }\n            </ul>\n            <RecipeContentOwner shared={recipe.shared} userId={recipe.user_id} />\n            {\n                user !== null && (\n                    <AddCommentForm recipeId={id} handleSubmit={onCommentSubmit} />\n                )\n            }\n        </StyledDetailsDiv>\n    );\n}\n\nexport default RecipeViewDetails;","import styled from 'styled-components';\n\nexport const StyledRecipeActionBar = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\nimport UserActionButtonIcon, { ButtonIconTypeEnum } from '../user-action-button-icon/user-action-button-icon.component';\nimport { StyledRecipeActionBar } from './recipe-action-bar.styles';\nimport { removeRecipe, addFavorite, removeFavorite, copyRecipe } from '../../../services/recipes/recipes.services';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nconst RecicipeActionBar = () => {\n    let { id } = useParams();\n    let navigate = useNavigate();\n    const { addToast } = useToasts();\n    const { recipeItems, deleteRecipe, setSpinner, setCount,\n        editRecipe, setRecipeItems } = useContext(RecipesContext);\n    const { token, isLoggedIn, user } = useContext(AuthContext);\n\n    const [favDisabled, setFavDisabled] = useState<boolean>(false);\n    const [isFav, setIsFav] = useState<boolean>(false);\n    const [recipe, setRecipe] = useState<iRecipe | undefined>(undefined);\n    const [open, setOpen] = useState<boolean>(false);\n    const [copyOpen, setCopyOpen] = useState<boolean>(false);\n    const [isOwner, setIsOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        const recipe = recipeItems.find(r => r._id === id);\n\n        if (recipe) {\n            setRecipe(recipe);\n        }\n    }, [recipeItems, id]);\n\n    useEffect(() => {\n        if (recipe && user && recipe.user_id === user.userId) {\n            setIsOwner(true);\n        }\n    }, [user, recipe]);\n\n    useEffect(() => {\n        if (recipe?.favorites) {\n            let tempFav = recipe.favorites.find(f => f.userId === user?.userId);\n            if (tempFav) {\n                setIsFav(true)\n            }\n        }\n\n    }, [recipe, user]);\n\n    const handleDelete = () => {\n        setSpinner(true);\n        if (recipe) {\n            removeRecipe(recipe, token).then((resp) => {\n                deleteRecipe(recipeItems, recipe);\n                setCount(recipeItems.length);\n                setSpinner(false);\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                navigate('/');\n\n            }).catch((err) => {\n                setSpinner(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const confirmCopyRecipe = () => {\n        setCopyOpen(true);\n    };\n\n    const handleCopyClose = () => {\n        setCopyOpen(false);\n    }\n\n    const handleCopy = () => {\n        setCopyOpen(false);\n        if (id && user) {\n            copyRecipe(id, user.userId, user?.token).then((resp) => {\n                let tempItems = recipeItems;\n                tempItems.push(resp.data);\n                setRecipeItems(tempItems);\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                navigate('/recipes');\n            }).catch(err => {\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n    }\n\n    const handleFavorite = () => {\n        setFavDisabled(true);\n        if (isFav) {\n            removeFavorite(id, user?.userId, token).then((resp) => {\n                editRecipe(recipeItems, resp.data);\n                setIsFav(false);\n                setFavDisabled(false);\n            }).catch(err => console.log(err.message));\n        } else {\n            addFavorite(id, user?.userId, token).then((resp) => {\n                setIsFav(true);\n                editRecipe(recipeItems, resp.data);\n                setFavDisabled(false);\n            }).catch(err => console.log(err.message));\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <StyledRecipeActionBar>\n\n                {\n                    isLoggedIn && (\n                        <React.Fragment>\n                            {\n                                isFav ? (\n                                    <UserActionButtonIcon\n                                        title=\"Remove Favorite\"\n                                        clickHandler={() => handleFavorite()}\n                                        disabled={favDisabled}\n                                        icon={ButtonIconTypeEnum.favorite}\n                                    />\n                                ) : (\n                                    <UserActionButtonIcon\n                                        title=\"Add Favorite\"\n                                        clickHandler={() => handleFavorite()}\n                                        disabled={favDisabled}\n                                        icon={ButtonIconTypeEnum.unfavorite}\n                                    />\n                                )\n                            }\n                            {\n                                isOwner && (\n                                    <React.Fragment>\n                                        <UserActionButtonIcon title=\"Delete\" clickHandler={handleClickOpen} icon={ButtonIconTypeEnum.delete} />\n                                        <UserActionButtonIcon title=\"Edit\" clickHandler={() => navigate(`/edit-recipe/${id}`)} icon={ButtonIconTypeEnum.edit} />\n                                    </React.Fragment>\n                                )\n                            }\n                            <UserActionButtonIcon\n                                title=\"Copy this Recipe\"\n                                clickHandler={() => confirmCopyRecipe()}\n                                icon={ButtonIconTypeEnum.copy}\n                            />\n                        </React.Fragment>\n                    )\n                }\n                <UserActionButtonIcon title=\"Print\" clickHandler={() => window.print()} icon={ButtonIconTypeEnum.print} />\n            </StyledRecipeActionBar>\n            <ConfirmDialog\n                open={open}\n                title={\"Are you sure?\"}\n                confirmText={`Delete ${recipe?.r_name} recipe?`}\n                handleCancel={handleClose}\n                handleConfirm={handleDelete}\n            />\n            <ConfirmDialog\n                open={copyOpen}\n                title={\"Are you sure?\"}\n                confirmText={`Copy ${recipe?.r_name} recipe to a new recipe?`}\n                handleCancel={handleCopyClose}\n                handleConfirm={handleCopy}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default RecicipeActionBar;\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { DetailsTopWrapper, MetaInfoWrapper, MetaInfoBottom, MetaInfoTop } from './view-recipe.styles';\nimport RecipeViewDetails from '../../components/molecules/recipe-view-details/recipe-view-details.component';\nimport RecipeRating from '../../components/atoms/rating/rating.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport RecipeActionBar from '../../components/atoms/recipe-action-bar/recipe-action-bar.component';\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { SpinnerOuter } from \"../../components/molecules/spinner/spinner.styles\";\n\nconst RecipeDetailPage = () => {\n    const { id } = useParams();\n\n    const { recipeItems, isLoading, setSpinner } = useContext(RecipesContext);\n    const recipe = recipeItems.find(r => r._id === id);\n\n    return (\n        <MainSection>\n            {\n                isLoading && (\n                    <React.Fragment>\n                        <PageTitle>Recipe Details</PageTitle>\n                        <SpinnerOuter>\n                            <Spinner />\n                        </SpinnerOuter>\n                    </React.Fragment>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <DetailsTopWrapper>\n                            <PageTitle>{recipe?.r_name} </PageTitle>\n                            <MetaInfoWrapper>\n                                <MetaInfoTop>\n                                    <RecipeRating rating={recipe?.rating} />\n                                    <span>Cateory: {recipe?.category}</span>\n                                </MetaInfoTop>\n                                <MetaInfoBottom>\n                                    <RecipeActionBar />\n                                </MetaInfoBottom>\n                            </MetaInfoWrapper>\n                        </DetailsTopWrapper>\n                        <RecipeViewDetails recipe={recipe} id={id} />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipeDetailPage;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n`;\n\nexport const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n    &:disabled {\n        opacity: 0.7;\n        border: none;\n        padding: 0;\n        margin-top: -0.5rem;\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './edit-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { updateRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    user: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst EditRecipeForm: FC<Props> = ({ recipeId }) => {\n    const { addToast } = useToasts();\n    const { recipeItems, getCategoryTags, editRecipe } = useContext(RecipesContext);\n    const { token, user } = useContext(AuthContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n\n        const foundRecipe = recipeItems.find(r => r._id && r._id === recipeId);\n        if (foundRecipe) {\n\n            setFormValuesInitial({\n                _id: foundRecipe._id || '',\n                user_id: foundRecipe.user_id,\n                user: foundRecipe.user_id,\n                r_name: foundRecipe.r_name,\n                shared: foundRecipe.shared,\n                rating: foundRecipe.rating,\n                cat_id: foundRecipe.cat_id.toString(),\n                category: foundRecipe.category,\n                ingredients: foundRecipe.ingredients || [],\n                steps: foundRecipe.steps || [],\n                comments: foundRecipe.comments || []\n            })\n        }\n\n    }, [recipeItems, getCategoryTags, recipeId]);\n\n    return (\n        <StyledFormWrapper>\n            {\n                formValuesInitial && (\n                    <Formik\n                        initialValues={formValuesInitial}\n                        onSubmit={(\n                            values: Values,\n                            { setSubmitting }: FormikHelpers<Values>\n                        ) => {\n\n                            const catName = catData.find(i => i.id === values.cat_id);\n                            const cat_id = Number(values.cat_id);\n                            const vals = {\n                                ...values,\n                                category: catName?.name || '',\n                                cat_id: cat_id\n                            }\n\n                            updateRecipe(vals, token).then((resp) => {\n                                addToast(\n                                    'Success',\n                                    {\n                                        appearance: 'success',\n                                        autoDismiss: true\n                                    }\n                                );\n\n                                setCurrentRecipeItems(editRecipe(currentRecipeItems, resp));\n                                setSubmitting(false);\n                                navigate('/')\n                            }).catch((err) => {\n                                addToast(\n                                    `Error: ${err.message}`,\n                                    {\n                                        appearance: 'error',\n                                        autoDismiss: false\n                                    }\n                                );\n                            })\n                        }}\n                    >\n                        {({ values, resetForm, isValid, dirty }) => (\n                            <Form>\n\n                                <RecipeTextField\n                                    id=\"r_name\"\n                                    label=\"Recipe Name\"\n                                    name=\"r_name\"\n                                    placeholder=\"Ex: Chocolate Cake\"\n                                    required\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"cat_id\"\n                                    name=\"cat_id\"\n                                    required={true}\n                                    label=\"Category\"\n                                    defaultOptionText=\"Select Recipe Category\"\n                                    optionData={catData}\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"rating\"\n                                    name=\"rating\"\n                                    required={true}\n                                    label=\"Rating\"\n                                    defaultOptionText=\"Ex: Four Stars\"\n                                    optionData={[\n                                        { id: '1', name: 'One Star' },\n                                        { id: '2', name: 'Two Stars' },\n                                        { id: '3', name: 'Three Stars' },\n                                        { id: '4', name: 'Four Stars' }\n                                    ]}\n                                />\n\n                                <CheckBoxField\n                                    id=\"shared\"\n                                    name=\"shared\"\n                                    label=\"Share Recipe\"\n                                />\n\n                                <div>\n                                    <FieldArray\n                                        name=\"ingredients\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.ingredients && values.ingredients.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Ingredients'\n                                                            isOpen={isOpenIngredients}\n                                                            toggleHandler={() => handleToggleIngredients()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                            values.ingredients.map((item, index) => (\n                                                                <StyledInputWrapper key={index}>\n                                                                    <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                                    <FieldArrayItem>\n                                                                        <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                        <InputButtonsWrap>\n                                                                            <StyledSubtractInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.remove(index)}\n                                                                            >\n                                                                                -\n                                                                            </StyledSubtractInputBtn>\n                                                                            <StyledAddInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.insert(index, '')}\n                                                                            >\n                                                                                +\n                                                                            </StyledAddInputBtn>\n                                                                        </InputButtonsWrap>\n                                                                    </FieldArrayItem>\n                                                                </StyledInputWrapper>\n                                                            ))\n                                                        }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Ingredients\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"steps\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.steps && values.steps.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Steps'\n                                                            isOpen={isOpenSteps}\n                                                            toggleHandler={() => handleToggleSteps()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.steps.map((item, index) => (\n                                                                    <StyledInputWrapper key={index}>\n                                                                        <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(index, '')}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Steps\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"comments\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.comments && values.comments.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Comments'\n                                                            isOpen={isOpenComments}\n                                                            toggleHandler={() => handleToggleComments()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.comments.map((item, index) => (\n\n                                                                    <StyledInputWrapper key={index}>\n                                                                        {\n                                                                            item.userId !== user?.userId ? (\n                                                                                <StyledLabel>Comment ({item.user})</StyledLabel>\n                                                                            ) : (\n                                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                            )\n                                                                        }\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                            {\n                                                                                item.userId !== user?.userId ? (\n                                                                                    <StyledInput disabled name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                ) : (\n                                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                )\n                                                                            }\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(\n                                                                                        index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                                    )}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() =>\n                                                        arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })}>\n                                                        Add comment\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <StyledHRule />\n                                <FormButton\n                                    type=\"submit\"\n                                    buttonText={'Update Recipe'}\n                                    FormButton={FormButtons.Primary}\n                                    disabled={!dirty || !isValid}\n                                />\n                                <FormButton\n                                    type=\"button\"\n                                    buttonText={'Cancel'}\n                                    FormButton={FormButtons.Secondary}\n                                    onClick={() => navigate(`/recipes/${values._id}`)}\n                                />\n                            </Form>\n\n                        )}\n                    </Formik>\n                )\n            }\n        </StyledFormWrapper >\n    );\n}\n\nexport default EditRecipeForm;\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport Spinner from '../../components/molecules/spinner/spinner.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { SpinnerOuter } from '../../components/molecules/spinner/spinner.styles';\nimport EditRecipeForm from '../../templates/edit-recipe-form/edit-recipe-form.component';\n\n\nconst EditRecipePage = () => {\n    const { id } = useParams();\n\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <PageTitle>Edit Recipe</PageTitle>\n            {\n                isLoading && <SpinnerOuter><Spinner /></SpinnerOuter>\n            }\n            {\n                !isLoading && <EditRecipeForm recipeId={id}></EditRecipeForm>\n            }\n        </MainSection>\n    );\n}\n\nexport default EditRecipePage;","import styled from 'styled-components';\n\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 75vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\nimport { SpinnerWrapper } from './recipes-by-category.styles';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst RecipesByCategory = () => {\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [filtered, setFiltered] = useState<iRecipe[]>([]);\n    const [catName, setCatName] = useState<string>('');\n    const { cat_id } = useParams();\n    const param_id = cat_id ? parseInt(cat_id) : -1;\n\n    useEffect(() => {\n        if (!isLoading && param_id) {\n            const filterList: iRecipe[] = recipeItems.filter((r) => r.cat_id === param_id && (r.shared || r.user_id === user?.userId));\n\n            if (filterList.length > 0) {\n                setFiltered(filterList);\n                setCatName(filterList[0].category);\n            }\n        }\n    }, [recipeItems, isLoading, param_id]);\n\n    return (\n        <MainSection>\n            <PageTitle>{catName}</PageTitle>\n            <RecipesCategoryCardList recipes={filtered} />\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default RecipesByCategory;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\n\ntype iPost = {\n    email: string;\n    password: string;\n}\n\ntype iSignUp = {\n    name: string;\n    password: string;\n    email: string;\n}\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USER_LOGIN;\nconst signupEndpoint = process.env.REACT_APP_USER_SIGNIN;\n\nexport const logInUser = async ({email, password}: iPost) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${endpoint}`, {email, password});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const signUpUser = async ({name, email, password}: iSignUp) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${signupEndpoint}`, {email, password, name});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}","import React, { useContext } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-in-form.styles';\nimport { logInUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n}\n\nconst SignInForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n\n    const formValuesInitial = {\n        email: '',\n        password: ''\n    }\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password } = values;\n                    logInUser({ email, password }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign In'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignInForm;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledSignUpContainer = styled.p`\n    margin: 1rem 0;\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignInForm from '../../templates/sign-in-form/sign-in-form.component';\nimport { StyledNavLink, StyledSignUpContainer } from './sign-in-sign-up.styles';\n\nconst SignInSignUpPage = () => {\n    return (\n        <MainSection>\n            <PageTitle>Sign in</PageTitle>\n            <SignInForm />\n            <StyledSignUpContainer>\n                New to recipes?&nbsp;\n                <StyledNavLink to=\"/sign-up\">Sign up</StyledNavLink>\n            </StyledSignUpContainer>\n        </MainSection>\n    )\n}\n\nexport default SignInSignUpPage;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import React, { useContext, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-up-form.styles';\nimport { signUpUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n    name: string;\n}\n\nconst SignUpForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { addUserItem, userItems } = useContext(UsersContext);\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n    const [isVisible, setIsVisable] = useState(false);\n\n    const formValuesInitial = {\n        email: '',\n        password: '',\n        name: ''\n    }\n\n    const onVisibilityChange = () => {\n        setIsVisable(!isVisible);\n    };\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password, name } = values;\n                    signUpUser({ email, password, name }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n                        const userToAdd: iUserItem = {\n                            _id: userId,\n                            id: userId,\n                            email: email,\n                            name: name\n                        };\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        addUserItem(userToAdd, userItems);\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Ex: John\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type={isVisible ? 'text' : 'password'}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            isVisible={isVisible}\n                            onVisibilityChange={() => onVisibilityChange()}\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign Up'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignUpForm;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component'\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignUpForm from '../../templates/sign-up-form/sign-up-form.component';\n\nconst SignUpPage = () => (\n    <MainSection>\n        <PageTitle>Sign Up</PageTitle>\n        <SignUpForm />\n    </MainSection>\n);\n\nexport default SignUpPage;","import styled from 'styled-components';\n\nimport {NavLink} from 'react-router-dom';\n\nexport const StyledUserCard = styled.div`\n    display: flex;\n    padding: 1rem;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNoSharedRecipes = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n","import React, { FC } from 'react';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\nimport { StyledUserCard, StyledNavLink, StyledNoSharedRecipes } from './user-card.styles';\n\ninterface Props {\n    name: string;\n    id: string;\n    recipes: string[];\n    isContentOwner: boolean;\n}\n\n\nconst UserCard: FC<Props> = ({ name, id, recipes, isContentOwner }) => (\n    <li>\n        <StyledUserCard>\n            <UserAvatar name={name} />\n            <div>\n                <div>{name}</div>\n                {\n                    recipes.length === 0 && (<StyledNoSharedRecipes>no recipes</StyledNoSharedRecipes>)\n                }\n                {\n                    recipes.length !== 0 && !isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>shared {recipes.length} recipes</span>\n                                ) : (\n                                    <span>shared {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n                {\n                    recipes.length !== 0 && isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>view {recipes.length} recipes </span>\n                                ) : (\n                                    <span>view {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n            </div>\n        </StyledUserCard>\n    </li>\n);\n\nexport default UserCard;\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const StyledUserCardList = styled.ul`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n    color: ${props => props.theme.colors.pageForeground1};\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\nimport UserCard from '../user-card/user-card.component';\nimport EmptyMesssage from '../../atoms/empty-message/empty-message.component';\nimport { StyledUserCardList } from './users-list.styles';\n\nconst UsersList = () => {\n    const { recipeItems } = useContext(RecipesContext);\n    const { userItems } = useContext(UsersContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [users, setUsers] = useState<iUserItem[]>([]);\n\n    useEffect(() => {\n        const usersWithRecipe = userItems.map(user => {\n            let recipes: string[] = [];\n            const isAuthUser = () => authUser && authUser.userId === user.id;\n            if (isAuthUser()) {\n                recipes = recipeItems.filter(\n                    r => r.user_id === user.id\n                ).map(r => r.r_name);\n            } else {\n                recipes = recipeItems.filter(\n                    r => r.shared === true && r.user_id === user.id\n                ).map(r => r.r_name);\n            }\n\n            return {\n                ...user,\n                recipes: recipes || []\n            }\n        })\n        setUsers(usersWithRecipe);\n    }, [userItems, authUser]);\n\n    return (\n        <React.Fragment>\n            {\n                users.length !== 0 ? (\n                    <StyledUserCardList>\n                        {\n                            users.map(({ name, id, recipes }, idx) => (\n                                <UserCard\n                                    key={idx}\n                                    name={name}\n                                    id={id}\n                                    isContentOwner={authUser !== null && authUser.userId === id}\n                                    recipes={recipes || []}\n                                />\n                            ))\n                        }\n                    </StyledUserCardList >\n                ) : (\n                    <EmptyMesssage msg={'There are no users.'} />\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default UsersList;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport UsersList from '../../components/molecules/users-list/users-list.component';\n\nconst UsersPage = () => (\n    <MainSection>\n        <PageTitle>Users </PageTitle>\n        <UsersList />\n    </MainSection>\n);\n\nexport default UsersPage;","import styled from 'styled-components';\n\nexport const StyledOuterDiv = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  line-height: 1.5em;\n  background-color: ${(props) => props.theme.colors.pageBackground1};\n  max-width: 100vw;\n  min-height: 100vh;\n  border-bottom: 1rem solid ${(props) => props.theme.colors.navBarBackground};\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport Restaurant from '@material-ui/icons/Restaurant';\n\nexport const StyledNavBrand = styled(Restaurant)`\n    font-size: 2.0rem !important;\n    margin-right: 0.5rem;\n    margin-left: 0.5rem;\n    padding: 0.25rem;\n    color: #fff;\n    flex: 0 0 1;\n    background-color: ${props => props.theme.colors.pageHighLight2};\n    border: 1px solid rgba(255,255,255, 0.75);\n    border-radius: 50%;\n`;\n\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledNavBrand } from './nav-brand.styles';\n\ninterface Props {\n    toggleClose: () => void;\n    isOpen: boolean;\n}\n\nconst NavBrand: FC<Props> = ({ toggleClose, isOpen }) => {\n    const handleClose = () => {\n        if (isOpen) {\n            toggleClose();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Link onClick={() => handleClose()} to='/'>\n                <StyledNavBrand />\n            </Link>\n        </React.Fragment>\n    )\n}\n\n\nexport default NavBrand;","import styled from 'styled-components';\n\nexport const StyledRightItemsWrapper = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledRightListItem = styled.li`\n    margin: 0;\n    > a {\n        color: #fff;\n        text-decoration: none;\n    }\n`;","import styled from 'styled-components';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\ninterface iDropdownStyles {\n    isOpen: boolean;\n}\n\nexport const StyledAccountIcon = styled(AccountCircle)`\n    color: #fff;\n    font-size: 2rem !important;\n    margin-right: 0.25rem;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-size: inherit;\n    font-family: inherit;\n    color: #fff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledDropdownContainer = styled.div<iDropdownStyles>`\n    position: absolute;\n    bottom: -76px;\n    width: 140px;\n    height: 65px;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n    right: 0;\n    z-index: 21;\n    box-sizing: border-box;\n    padding: 0.5rem 1.5rem;\n    display: ${props => props.isOpen ? 'flex': 'none'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledAnchor = styled.a`\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledDropDownWrapper = styled.div`\n    display: flex;\n    position: relative;\n`;","import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport Backdrop from '../../atoms/backdrop/backdrop.component';\nimport {\n    StyledButton,\n    StyledAccountIcon,\n    StyledDropDownWrapper,\n    StyledDropdownContainer,\n    StyledAnchor\n} from './sign-out.styles';\n\n\nconst SignOutButton = () => {\n    const { setLogin, setUserToken, setUserObject, user, setUserAuth } = useContext(AuthContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const navigate = useNavigate();\n\n    const handleSignOut = () => {\n        if (user) {\n            const expires = new Date(new Date().getTime());\n            setUserAuth(user, Number(expires));\n            setUserObject(null);\n            navigate('/');\n        }\n        setLogin(false);\n        setUserToken(null);\n    };\n\n    const toggleExpanded = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <StyledDropDownWrapper>\n                <StyledButton onClick={() => toggleExpanded()}>\n                    <StyledAccountIcon />\n                    <span>{user?.name}</span>\n                </StyledButton>\n                <StyledDropdownContainer isOpen={isOpen}>\n                    <StyledAnchor onClick={() => handleSignOut()}>Sign out</StyledAnchor>\n                </StyledDropdownContainer>\n                <Backdrop isOpen={isOpen} toggleClose={() => toggleExpanded()} />\n            </StyledDropDownWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default SignOutButton;","import React, { FC } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { StyledRightItemsWrapper, StyledRightListItem } from './sign-in-out.styles';\nimport SignOutButton from \"../../atoms/sign-out/sign-out.component\";\n\ninterface Props {\n    isLoggedIn: boolean;\n}\n\nconst SignInSignOut: FC<Props> = ({ isLoggedIn }) => (\n    <StyledRightItemsWrapper>\n        <StyledRightListItem>\n            {\n                isLoggedIn ?\n                    (\n                        <SignOutButton />\n                    )\n                    :\n                    (\n                        <NavLink to=\"/sign-in\">sign in</NavLink>\n                    )\n            }\n        </StyledRightListItem>\n    </StyledRightItemsWrapper>\n)\n\nexport default SignInSignOut;","import styled from 'styled-components';\n\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledMenu = styled(Menu)`\n    font-size: 2.4rem !important;\n    color: #fff;\n    cursor: pointer;\n    border: 1px solid rgba(255,255,255, 0.1);\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n`","import React, { FC } from 'react';\n\nimport { StyledButton, StyledMenu } from './menu-toggle.styles';\n\ninterface Props {\n    toggleHandler: () => void;\n}\n\n\nconst MenuToggle: FC<Props> = ({ toggleHandler }) => {\n    return (\n        <StyledButton onClick={() => toggleHandler()}>\n            <StyledMenu />\n        </StyledButton>\n    )\n}\n\nexport default MenuToggle;\n\n","import styled from 'styled-components';\nimport Close from '@material-ui/icons/Close'\n\n\nexport const StyledClose = styled(Close)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    font-size: 2rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n`;","import React, { FC } from 'react';\n\nimport { StyledClose, StyledButton } from './close-button.styles';\n\n\ninterface Props {\n    closeHandler: () => void;\n}\n\n\nconst CloseButton: FC<Props> = ({ closeHandler }) => (\n    <StyledButton title=\"close\" type=\"button\" onClick={() => closeHandler()}>\n        <StyledClose />\n    </StyledButton>\n)\n\nexport default CloseButton;","import styled from 'styled-components';\n\nimport { DarkMode, LightMode } from '@mui/icons-material';\n\ninterface iButtonProps {\n    Settings: boolean;\n} \n\nexport const StyledThemeButton = styled.button<iButtonProps>`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: inherit;\n    min-width: 100%;\n    padding: 1.5rem;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    ${props => props.Settings === true && `\n        background-color: ${props.theme.colors.navBarBackground};\n        color: #fff;\n        justify-content: center;\n        margin-top: 1.5rem;\n        padding: 0.75rem 1.5rem;\n        font-size: ${props.theme.fontSizes.smallPlus};\n        > span {\n            margin-left: -0.25rem;\n        }\n    `}\n`;\n\nexport const StyledLightModeIcon = styled(LightMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;\n\nexport const StyledDarkModeIcon = styled(DarkMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;","import React, { useContext, FC } from 'react';\nimport { Theme, ThemeContext } from \"../../../providers/theme/theme.provider\";\nimport { StyledThemeButton, StyledDarkModeIcon, StyledLightModeIcon } from './theme-switcher.styles';\n\n\ninterface Props {\n    settingsPresentation?: boolean;\n}\n\nconst ThemeSwitcher: FC<Props> = ({ settingsPresentation = false }) => {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const handleTheme = () => {\n        if (theme === Theme.Dark) {\n            setTheme(Theme.Light);\n        } else {\n            setTheme(Theme.Dark);\n        }\n    };\n\n    return (\n        <StyledThemeButton Settings={settingsPresentation}\n            title={\n                theme === Theme.Dark ?\n                    'Switch to Light Theme'\n                    :\n                    'Switch to Dark Theme'\n            }\n            onClick={() => handleTheme()}\n        >\n            {\n                theme === Theme.Dark ?\n                    (<StyledLightModeIcon />)\n                    :\n                    (<StyledDarkModeIcon />)\n            }\n            <span>theme</span>\n        </StyledThemeButton>\n    )\n}\n\nexport default ThemeSwitcher;","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\nimport {Home, PeopleAlt, MenuBook, Widgets, AddCircle, Settings, Notifications, Favorite} from '@material-ui/icons';\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n    margin-right: 1rem;\n`\n\nexport const StyledNotifications = styled(Notifications)`\n    ${props => common(props)}\n`;\n\nexport const StyledHome = styled(Home)`\n    ${props => common(props)}\n`;\n\nexport const StyledUsers = styled(PeopleAlt)`\n    ${props => common(props)}\n`;\n\nexport const StyledMenu = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledWidget = styled(Widgets)`\n    ${props => common(props)}\n`;\n\nexport const StyledAddCircle = styled(AddCircle)`\n    ${props => common(props)}\n`;\n\nexport const StyledSetting = styled(Settings)`\n    ${props => common(props)}\n`;\n\nexport const StyledFavorite = styled(Favorite)`\n    ${props => common(props)}\n`;\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    display: flex;\n    align-items: center;\n    font-size: inherit;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSizes.smallPlus};\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100%;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\n","\nexport enum ActivityTypeEnum {\n    Recipe = 'Recipe',\n    Favorite = 'Favorite',\n    Comment = 'Comment'\n}\n\nexport enum ActivityActionsEnum {\n    YouRecipe = \"you created a new recipe\",\n    YouFavorite = \"you favorited this recipe\",\n    YouComment = \"you commented on this recipe\",\n    OtherFavorite = \"another user favorited your recipe\",\n    OtherComment = \"another user commented on your recipe\"\n}\n\nexport interface iActivity {\n    type: ActivityTypeEnum;\n    recipeName?: string;\n    recipeId?: String;\n    createdAt?: string;\n    timeNum?: number;\n    timeFormatted?: string;\n    description: ActivityActionsEnum;\n}","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledNavBrandWrap = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    font-size: 1.5rem;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: #fff;\n    }\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100vh;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\nexport const StyledNavBar = styled.div`\n    height: 55px;\n    max-width: 100vw;\n    background-color: ${(props) => props.theme.colors.navBarBackground};\n    margin-bottom: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1.5rem;\n`;","\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport NAV_DATA from './primary-nav.data.json';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport SignInSignOut from \"../sign-in-out/sign-in-out.component\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport Backdrop from \"../../atoms/backdrop/backdrop.component\";\nimport MenuToggle from \"../../atoms/menu-toggle/menu-toggle.component\";\nimport MainMenu from \"../main-menu/main-menu.component\";\nimport { iMainNavItem } from \"../../../interfaces/nav/nav.interface\";\nimport { StyledNavBrandWrap, StyledNavBar } from './primary.nav.styles';\n\nconst PrimaryNav = () => {\n    let logoutTimer: ReturnType<typeof setTimeout>;\n    const navigate = useNavigate();\n    const [isOpen, setIsOpen] = useState(false);\n    const [mainNavItems, setMainNavItems] = useState<iMainNavItem[]>(NAV_DATA);\n    const { isLoggedIn, expireAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration, getRemainingTime } = useContext(AuthContext);\n\n    const logout = useCallback(() => {\n        expireAuth();\n        setUserObject(null);\n        setLogin(false);\n        setUserToken(null);\n        setUserExpiration(null);\n        localStorage.removeItem('userData');\n        navigate('/');\n    }, []);\n\n    const handleIsOpen = () => {\n        setIsOpen(!isOpen);\n    }\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setMainNavItems(mainNavItems.filter(item => item.auth === false));\n            clearTimeout(logoutTimer);\n        } else {\n            setMainNavItems(NAV_DATA);\n            setTimeout(() => {\n                let timeLeft = getRemainingTime();\n                let mins = (timeLeft / (60 * 1000)).toFixed();\n                console.log(`${mins} minutes remaining in session`);\n                logoutTimer = setTimeout(logout, timeLeft);\n            });\n        }\n    }, [isLoggedIn])\n\n    return (\n        <StyledNavBar>\n            <StyledNavBrandWrap>\n                <MenuToggle toggleHandler={handleIsOpen} />\n                <NavBrand isOpen={isOpen} toggleClose={handleIsOpen} />\n            </StyledNavBrandWrap>\n            <MainMenu isOpen={isOpen} toggleIsOpen={handleIsOpen} items={mainNavItems} />\n            <Backdrop isOpen={isOpen} toggleClose={() => handleIsOpen()} />\n            <SignInSignOut isLoggedIn={isLoggedIn} />\n        </StyledNavBar>\n    );\n}\n\nexport default PrimaryNav;","import React, { useContext, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { EmptyMesssage } from '../../components/atoms/empty-message/empty-message.component';\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\n\nconst UserRecipesPage = () => {\n    const { id } = useParams();\n    const { userItems } = useContext(UsersContext);\n    const { recipeItems } = useContext(RecipesContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [user, setUser] = useState<iUserItem | null>(null);\n    const [usersRecipes, setUsersRecipes] = useState<iRecipe[]>([]);\n    const [isContentOwner, setIsContentOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (authUser && authUser.userId === id) {\n            setIsContentOwner(true);\n        }\n    }, [authUser, id]);\n\n    useEffect(() => {\n        const tempUser = userItems.filter(u => u.id === id);\n        if (tempUser) {\n            setUser(tempUser[0]);\n        }\n    }, [userItems, id])\n\n    useEffect(() => {\n        if (user !== null && !isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id && r.shared))\n        } else if (user !== null && isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id))\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <PageTitle>\n                {\n                    user && isContentOwner ? (\n                        <span>{`${user.name} Recipe${usersRecipes.length !== 1 ? 's' : ''} (${usersRecipes.length})`}</span>\n                    ) : (\n                        <span>{`${user?.name} Shared ${usersRecipes.length} Recipe${usersRecipes.length !== 1 ? 's' : ''}`}</span>\n                    )\n                }\n            </PageTitle>\n            {\n                usersRecipes.length !== 0 ? (\n                    <RecipesCategoryCardList recipes={usersRecipes} />\n                ) : (\n                    <EmptyMesssage msg=\"There are no recipes.\" />\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default UserRecipesPage;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n       ${props => props.Required && \"content: '*';\"}\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.select`\n\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n`;","import React, { FC, ChangeEvent } from 'react';\n\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledLabel, StyledSelect } from './select-option-plain.styles';\n\nexport interface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    id: string;\n    name: string;\n    value: string;\n    handleChange: (evt: ChangeEvent<HTMLSelectElement>) => void;\n    optionData: iKeyValuePair[]\n    labelText?: string;\n}\n\nconst SelectOptionPlain: FC<Props> = ({ id, name, value, handleChange, optionData, labelText }) => (\n    <FieldWrapper>\n        {\n            labelText && (<StyledLabel htmlFor={id} Required={false}>{labelText}</StyledLabel>)\n        }\n        <StyledSelect id={id} name={name} value={value} onChange={evt => handleChange(evt)}>\n            {\n                optionData.map((o, idx) => (\n                    <option key={idx} value={o.id}>{o.name}</option>\n                ))\n            }\n        </StyledSelect>\n\n    </FieldWrapper>\n);\n\nexport default SelectOptionPlain;","import React, { useContext, useEffect, useState } from 'react';\nimport { Theme, ThemeContext } from '../../../providers/theme/theme.provider';\nimport SelectOptionPlain, { iKeyValuePair } from '../../atoms/select-option-plain/select-option-plain.component';\nimport { StyledWrapDiv, StyledFormWrapper } from './theme-palette-switcher.styles';\n\n\nconst ThemePaletteSwitcher = () => {\n    const {\n        theme,\n        setPaletteDark,\n        setPaletteLight,\n        paletteItems,\n        currentDark,\n        currentLight,\n        setCurrentDark,\n        setCurrentLight\n    } = useContext(ThemeContext);\n    const [selectValDark, setSelectValDark] = useState(currentDark);\n    const [selectValLight, setSelectValLight] = useState(currentLight);\n    const [themeColors, setThemeColors] = useState<iKeyValuePair[]>([]);\n\n    const handleChangeLight = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setPaletteLight(paletteItems[val])\n        setCurrentLight(val);\n    };\n\n    const handleChangeDark = (evt: any) => {\n        const val = evt.target.value;\n        setPaletteDark(paletteItems[val])\n        setCurrentDark(val);\n    };\n\n    useEffect(() => {\n        const temp: iKeyValuePair[] = Object.keys(paletteItems).map(\n            item => {\n                const name = item.split(/(?=[A-Z])/).join(' ').toLowerCase();\n\n                return {\n                    name: name,\n                    id: item\n                }\n            }\n        ).sort((a: iKeyValuePair, b: iKeyValuePair) => (\n            a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n        ));\n\n        setThemeColors(temp)\n    }, [paletteItems]);\n\n    useEffect(() => {\n        setSelectValLight(currentLight);\n        setSelectValDark(currentDark);\n    }, [currentDark, currentLight]);\n\n    return (\n        <React.Fragment>\n\n            <SelectOptionPlain\n                id=\"dark\"\n                name=\"dark\"\n                value={selectValDark}\n                handleChange={handleChangeDark}\n                optionData={themeColors}\n                labelText=\"Dark Theme Palette\"\n            />\n\n            <SelectOptionPlain\n                id=\"light\"\n                name=\"light\"\n                value={selectValLight}\n                handleChange={handleChangeLight}\n                optionData={themeColors}\n                labelText=\"Light Theme Palette\"\n            />\n\n        </React.Fragment>\n    );\n\n}\n\nexport default ThemePaletteSwitcher;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    margin-bottom: 0.5rem;\n`;\n\nexport const StyledUnderlabel = styled.div`\n    color: ${props => props.theme.colors.pageForeground1};\n    margin-bottom: 0.5rem;\n`\n","import React, { FC, useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\nimport { StyledFormWrapper, StyledUnderlabel } from './remove-user.styles';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nimport { deleteUserAccount } from '../../../services/users/users.service';\nimport AccordionToggle from '../../atoms/accordion-toggle/accordion-toggle.component';\nimport FormButton, { FormButtons } from '../../atoms/form-button/form-button.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\n\nconst RemoveUserComponent = () => {\n    const { addToast } = useToasts();\n    const { user, isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n    const { userCount, userItems, removeUserItem } = useContext(UsersContext);\n    const { makeRequest, makeFreshPull } = useContext(RecipesContext);\n    const [showForm, setShowForm] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n    const handleDelete = () => {\n        if (user) {\n            deleteUserAccount(user).then((resp) => {\n                setOpen(false);\n                let userToRemove = userItems.find(u => u.id === user.userId);\n                if (userToRemove) {\n                    removeUserItem(userToRemove, userItems)\n                }\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                localStorage.removeItem('userData');\n                expireAuth();\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n                makeFreshPull(true)\n\n            }).catch((err) => {\n                setOpen(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                user && (\n                    <div>\n                        {\n                            <AccordionToggle\n                                isOpen={showForm}\n                                toggleHandler={() => toggleForm()}\n                                buttonText=\"Account Settings\"\n                            />\n                        }\n                        {\n                            showForm && (\n                                <StyledFormWrapper>\n                                    <StyledUnderlabel>Close account and remove data</StyledUnderlabel>\n                                    <FormButton\n                                        FormButton={FormButtons.Secondary}\n                                        buttonText=\"Remove Account\"\n                                        type=\"button\"\n                                        onClick={() => { setOpen(true); }}\n                                        disabled={false}\n                                        size=\"small\"\n                                    ></FormButton>\n                                    <ConfirmDialog\n                                        open={open}\n                                        title={\"Are you sure?\"}\n                                        confirmText={`Delete my account and data? This action cannot be undone.`}\n                                        handleCancel={handleClose}\n                                        handleConfirm={handleDelete}\n                                    />\n                                </StyledFormWrapper>\n                            )\n                        }\n                    </div>\n                )\n            }\n        </React.Fragment>\n    )\n};\n\nexport default RemoveUserComponent;","import React from 'react';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport ThemePaletteSwitcher from '../../components/molecules/theme-palette-switcher/theme-palette-switcher.component';\nimport ThemeSwitcher from '../../components/molecules/theme-switcher/theme-switcher.component';\nimport { StyledFormWrapper } from '../../templates/add-recipe-form/add-recipe-form.styles';\nimport RemoveUserComponent from '../../components/molecules/remove-user/remove-user.component';\nconst SettingsPage = () => (\n    <MainSection>\n        <PageTitle>Settings</PageTitle>\n        <StyledFormWrapper>\n            <ThemePaletteSwitcher />\n            <ThemeSwitcher settingsPresentation={true} />\n        </StyledFormWrapper>\n        <RemoveUserComponent></RemoveUserComponent>\n    </MainSection>\n);\n\nexport default SettingsPage;","import styled from 'styled-components';\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PageTitleWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;","\nimport dateFormat, { masks } from \"dateformat\";\n\nimport {iRecipe} from '../../interfaces/recipe/recipe.interface';\nimport { iActivity, ActivityTypeEnum, ActivityActionsEnum } from '../../interfaces/activity/activity.interface';\n\nconst formattedTime = (timestamp: string):string => {\n    const d = new Date(timestamp);\n    return dateFormat(d, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\n};\n\nconst numericTime = (timestamp: string): number => {\n    return new Date(timestamp).getTime();\n};\n\n\nexport const fetchFilterValues = (filter: string, activitesList: iActivity[]): iActivity[] => {\n    let filterRange: number = Infinity;\n\n    switch (filter) {\n        case 'dayOne':\n            filterRange = 1000 * 60 * 60 * 24;\n            break;\n        case 'weekOne':\n            filterRange = 1000 * 60 * 60 * 24 * 7;\n            break;\n        case '30days':\n            filterRange = 1000 * 60 * 60 * 24 * 30;\n            break;\n    }\n\n    const now = new Date().getTime();\n\n    const tempList: iActivity[] = activitesList.filter(a =>\n        a.timeNum && (a.timeNum > now - filterRange)\n    );\n\n    return tempList;\n}\n\nexport const getRecentActivities = (userId: string, recipes: iRecipe[]):iActivity[] => {\n    const ret:iActivity[] = [];\n\n    if (!userId) return ret;\n\n    for (let i = 0; i < recipes.length; i++) {\n        const item = recipes[i];\n\n        // your added recipe\n        if (item.user_id === userId) {\n            if (item.createdAt) {\n                ret.push({\n                    type: ActivityTypeEnum.Recipe,\n                    description: ActivityActionsEnum.YouRecipe,\n                    recipeName: item.r_name,\n                    recipeId: item._id,\n                    createdAt: item.createdAt,\n                    timeFormatted: formattedTime(item.createdAt),\n                    timeNum: numericTime(item.createdAt)\n                });\n            }\n\n\n            if (item.favorites) {\n                // other user favorites YOUR recipe\n                const hasItems = item.favorites.some(fav => fav.userId !== userId);\n                if (hasItems) {\n                    item.favorites.filter(fav => fav.userId !== userId).forEach(fav => {\n                        if (fav.createdAt) {\n                            ret.push({\n                                type: ActivityTypeEnum.Favorite,\n                                description: ActivityActionsEnum.OtherFavorite,\n                                recipeName: item.r_name,\n                                recipeId: item._id,\n                                createdAt: fav.createdAt,\n                                timeFormatted: formattedTime(fav.createdAt),\n                                timeNum: numericTime(fav.createdAt)\n                            })\n                        }\n                    })\n                }\n            }\n\n            if (item.comments) {\n                // other user commented on YOUR recipe\n                const hasItems = item.comments.some(c => c.userId !== userId);\n                item.comments.filter(c => c.userId !== userId).forEach(c => {\n                    if (c.createdAt) {\n                        ret.push({\n                            type: ActivityTypeEnum.Comment,\n                            description: ActivityActionsEnum.OtherComment,\n                            recipeName: item.r_name,\n                            recipeId: item._id,\n                            createdAt: c.createdAt,\n                            timeFormatted: formattedTime(c.createdAt),\n                            timeNum: numericTime(c.createdAt)\n                        })\n                    }\n                })\n            }\n        }\n\n\n        if (item.favorites) {\n            // your favorite on ANY recipe\n            const hasItems = item.favorites.some(fav => fav.userId === userId);\n            if (hasItems) {\n                item.favorites.filter(fav => fav.userId === userId).forEach(fav => {\n                    if (fav.createdAt) {\n                        ret.push({\n                            type: ActivityTypeEnum.Favorite,\n                            description: ActivityActionsEnum.YouFavorite,\n                            recipeName: item.r_name,\n                            recipeId: item._id,\n                            createdAt: fav.createdAt,\n                            timeFormatted: formattedTime(fav.createdAt),\n                            timeNum: numericTime(fav.createdAt)\n                        })\n                    }\n                })\n            }\n        }\n\n        if (item.comments) {\n            // your comments on ANY recipe\n            const hasItems = item.comments.some(c => c.userId === userId);\n            item.comments.filter(c => c.userId === userId).forEach(c => {\n                if (c.createdAt) {\n                    ret.push({\n                        type: ActivityTypeEnum.Comment,\n                        description: ActivityActionsEnum.YouComment,\n                        recipeName: item.r_name,\n                        recipeId: item._id,\n                        createdAt: c.createdAt,\n                        timeFormatted: formattedTime(c.createdAt),\n                        timeNum: numericTime(c.createdAt)\n                    })\n                }\n            })\n        }\n    }\n\n    return ret.sort((a,b) => {\n        if (a.timeNum && b.timeNum) {\n            return b.timeNum - a.timeNum;\n        } else {\n            return 0;\n        }\n    });\n};","import styled from \"styled-components\";\nimport {MenuBook, Favorite, Comment} from '@material-ui/icons';\nimport {NavLink} from 'react-router-dom';\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n\n    @media (min-width: 576px) {\n        font-size: 2.4rem !important;\n    }\n`;\n\nexport const StyledRecipeIcon = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledCommentIcon = styled(Comment)`\n    ${props => common(props)}\n`;\n\nexport const StyledFavoriteIcon = styled(Favorite)`\n    ${props => common(props)}\n`;\n\nexport const StyledListItem = styled.li`\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 1.5rem 1.5rem 1.5rem 0;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    margin-bottom: 1rem;\n    display: flex;\n    width: 100%;\n`;\n\nexport const StyledIconWrap = styled.div`\n    flex: 0 0 4.5rem;\n    @media (min-width: 576px) {\n        flex: 0 0 7.5rem;\n    }\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledCardInner = styled.div`\n    flex: 1;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\n","import React, { FC } from 'react';\nimport { iActivity, ActivityTypeEnum } from \"../../../interfaces/activity/activity.interface\";\nimport {\n    StyledListItem, StyledCardInner, StyledIconWrap, StyledNavLink, StyledCommentIcon, StyledFavoriteIcon, StyledRecipeIcon\n} from \"./activity-item.styles\";\n\n\nconst ActivityItem: FC<iActivity> = ({ type, recipeName, recipeId, createdAt, timeNum, timeFormatted, description }) => {\n    return (\n        <StyledListItem>\n            <StyledIconWrap>\n                {type === ActivityTypeEnum.Comment && <StyledCommentIcon />}\n                {type === ActivityTypeEnum.Favorite && <StyledFavoriteIcon />}\n                {type === ActivityTypeEnum.Recipe && <StyledRecipeIcon />}\n            </StyledIconWrap>\n            <StyledCardInner>\n                <StyledNavLink to={`/recipes/${recipeId}`}>\n                    {recipeName}\n                </StyledNavLink>\n\n                <div>{description}</div>\n                <div>{timeFormatted}</div>\n            </StyledCardInner>\n        </StyledListItem>)\n}\n\nexport default ActivityItem;","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport { StyledSpinnerWrap, PageTitleWrapper } from \"./activities.styles\";\nimport { getRecentActivities, fetchFilterValues } from \"./activities.util\";\nimport { iActivity } from \"../../interfaces/activity/activity.interface\";\nimport ActivityItem from \"../../components/molecules/activity-item/activity-item.component\";\nimport SelectOptionPlain, { iKeyValuePair } from \"../../components/atoms/select-option-plain/select-option-plain.component\";\n\nconst ActivitiesPage = () => {\n    const { isLoading, recipeItems } = useContext(RecipesContext);\n    const [activitesList, setActivitiesList] = useState<iActivity[]>([]);\n    const [filterdActivitiesList, setFilteredActivitiesList] = useState<iActivity[]>([]);\n    const { user } = useContext(AuthContext);\n    const [filterValue, setFilterValue] = useState<string>('all');\n\n    const filterChange = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setFilterValue(val);\n        const tempList = fetchFilterValues(val, activitesList);\n        setFilteredActivitiesList(tempList);\n    };\n\n    useEffect(() => {\n        if (user) {\n            const tempList = getRecentActivities(user?.userId, recipeItems)\n            setActivitiesList(tempList);\n            setFilteredActivitiesList(tempList);\n        }\n\n    }, [recipeItems, user]);\n\n    return (\n        <MainSection>\n            <PageTitleWrapper>\n                <PageTitle>Activity <span>({filterdActivitiesList.length})</span></PageTitle>\n                <SelectOptionPlain\n                    optionData={[\n                        {\n                            id: 'all',\n                            name: 'Show All'\n                        },\n                        {\n                            id: 'dayOne',\n                            name: 'One Day',\n                        }, {\n                            id: 'weekOne',\n                            name: 'One Week'\n                        }, {\n                            id: '30days',\n                            name: '30 Days'\n                        }\n                    ]}\n                    id=\"activityFilter\"\n                    name=\"Filters\"\n                    value={filterValue}\n                    handleChange={filterChange}\n                />\n            </PageTitleWrapper>\n            <ul>\n                {\n                    !isLoading && filterdActivitiesList.length > 0 &&\n                    filterdActivitiesList.map((item, key) => (\n                        <ActivityItem key={key} {...item} />\n                    ))\n                }\n                {\n                    !isLoading && filterdActivitiesList.length === 0 &&\n                    <EmptyMesssage msg={'There are no activites'} />\n                }\n            </ul>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n        </MainSection >\n    );\n};\n\nexport default ActivitiesPage;","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/home/home.component';\nimport RecipesPage from './pages/recipes/recipes.component';\nimport FavoritesPage from './pages/favorites/favorites.component';\nimport AddRecipePage from './pages/add-recipe/add-recipe.component';\nimport RecipeDetailPage from './pages/view-recipe/view-recipe.component';\nimport EditRecipePage from './pages/edit-recipe/edit-recipe.component';\nimport RecipesByCategory from './pages/recipes-by-category/recipes-by-category.component';\nimport SignInSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport SignUpPage from './pages/sign-up/sign-up.component';\nimport UsersPage from './pages/users/users.component';\nimport { StyledOuterDiv } from './App.styles';\nimport PrimaryNav from './components/molecules/primary-nav/primary.nav.component';\nimport UserRecipesPage from './pages/user-recipes/user-recipes.component';\nimport SettingsPage from './pages/setting/settings-page.component';\nimport ActivitiesPage from './pages/activities/activities.component';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <StyledOuterDiv>\n        <PrimaryNav />\n        <Routes>\n          <Route path='/' element={<HomePage />} />\n          <Route path='/activities' element={<ActivitiesPage />} />\n          <Route path='/settings' element={<SettingsPage />} />\n          <Route path='/add-recipe' element={<AddRecipePage />} />\n          <Route path='/users' element={<UsersPage />} />\n          <Route path='/user-recipes/:id' element={<UserRecipesPage />} />\n          <Route path='/recipes' element={<RecipesPage />} />\n          <Route path='/favorites' element={<FavoritesPage />} />\n          <Route path='/sign-in' element={<SignInSignUpPage />} />\n          <Route path='/sign-up' element={<SignUpPage />} />\n          <Route path='/recipes/:id' element={<RecipeDetailPage />} />\n          <Route path='/edit-recipe/:id' element={<EditRecipePage />} />\n          <Route path='/recipes/category/:cat_id' element={<RecipesByCategory />} />\n          <Route path='*' element={<Navigate to=\"/\" />} />\n        </Routes>\n      </StyledOuterDiv>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\nimport {Close} from '@material-ui/icons';\n\ninterface iStyledToast {\n    Appearance: string;\n}\n\nexport const StyledCloseIcon = styled(Close)`\ncursor: pointer;\nfont-size: 1rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #fff;\n    position: absolute;\n    top: 0.1rem;\n    right: 0.1rem;\n`;\n\nexport const StyledToast = styled.div<iStyledToast>`\n    background: ${props => props.Appearance === 'success' ?\n        props.theme.colors.pageToastSuccess :\n        props.theme.colors.pageToastError};\n    position: fixed;\n    top: 55px;\n    left: 45%;\n    left: ${props => props.Appearance === 'success' ?\n    '45%' : 'calc(50% - 275px/2)'};\n    padding: 0.75rem 2.5rem;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 400;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${props => props.Appearance === 'success' ?\n    'auto' : '275px'};\n`;\n","import React, { FC } from 'react';\nimport { ToastProps } from 'react-toast-notifications';\nimport { StyledToast, StyledButton, StyledCloseIcon } from './toasts-styles'\n\n\n\n\n\nconst CustomToasts: FC<ToastProps> = ({ children, appearance, onDismiss, ...props }) => (\n    <StyledToast Appearance={appearance}>\n        <div>{children}</div>\n        <StyledButton onClick={(id) => onDismiss()}>\n            <StyledCloseIcon />\n        </StyledButton>\n    </StyledToast>\n);\n\nexport default CustomToasts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MyTheme from './providers/theme/theme.provider';\nimport RecipesProvider from './providers/recipes/recipes.provider';\nimport { ToastProvider } from 'react-toast-notifications';\nimport CustomToast from './components/molecules/toasts/toasts.component';\nimport AuthProvider from './providers/auth/auth.provider';\nimport UsersProvider from './providers/users/users.provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <UsersProvider>\n        <RecipesProvider>\n          <MyTheme>\n            <ToastProvider components={{ Toast: CustomToast }}>\n              <BrowserRouter>\n                <App />\n              </BrowserRouter>\n            </ToastProvider>\n          </MyTheme>\n        </RecipesProvider>\n      </UsersProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}