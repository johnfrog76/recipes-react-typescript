{"version":3,"sources":["providers/theme/theme.provider.tsx","pages/home/home.styles.ts","components/molecules/category-tags/category-tabs.styles.ts","providers/recipes/recipes.utils.ts","services/recipes/recipes.services.ts","providers/recipes/recipes.provider.tsx","providers/auth/auth.utilities.ts","providers/auth/auth.provider.tsx","components/molecules/category-tags/category-tags.component.tsx","components/atoms/main-section/main-section.styles.ts","components/atoms/main-section/main-section.component.tsx","components/molecules/featured-recipes/featured-recipes.styles.ts","components/atoms/rating/rating.styles.ts","components/atoms/rating/rating.component.tsx","providers/theme/themes.ts","components/atoms/form-button/form-button.component.tsx","components/atoms/recipe-card-item/recipe-card-item.styles.ts","components/atoms/recipe-card-item/recipe-card-item.component.tsx","components/molecules/featured-recipes/featured-recipes.component.tsx","components/molecules/spinner/spinner.styles.ts","components/molecules/spinner/spinner.component.tsx","pages/home/home.component.tsx","components/atoms/page-title/page-title.styles.ts","components/atoms/page-title/page-title.component.tsx","components/molecules/recipes-list/recipe-list.styles.ts","components/molecules/recipes-list/recipes-list.component.tsx","components/atoms/list-grid-toggle/list-grid-toggle.styles.ts","components/atoms/list-grid-toggle/list-grid-toggle.component.tsx","components/molecules/recipes-category-card-list/recipes-category-card-list.styles.ts","components/molecules/recipes-category-card-list/recipes-category-card-list.component.tsx","pages/recipes/recipes.styles.ts","components/atoms/empty-message/empty-message.styles.ts","components/atoms/empty-message/empty-message.component.tsx","pages/recipes/recipes.component.tsx","providers/users/users.utilities.ts","services/users/users.service.ts","providers/users/users.provider.tsx","pages/favorites/favorites.styles.ts","pages/favorites/favorites.component.tsx","components/atoms/field-wrapper/field-wrapper.styles.ts","components/atoms/field-wrapper/field-wrapper.component.tsx","components/atoms/select-option-field/select-option-field.styles.ts","components/atoms/select-option-field/select-option-field.component.tsx","components/atoms/text-field/text-field.styles.ts","components/atoms/text-field/text-field.component.tsx","components/atoms/checkbox-field/checkbox-field.styles.ts","components/atoms/checkbox-field/checkbox-field.component.tsx","components/atoms/form-button/form-button.styles.ts","components/molecules/main-menu/main-menu.component.tsx","templates/add-recipe-form/add-recipe-form.styles.ts","components/atoms/accordion-toggle/accordion-toggle.styles.ts","components/atoms/accordion-toggle/accordion-toggle.component.tsx","templates/add-recipe-form/add-recipe-form.component.tsx","pages/add-recipe/add-recipe.component.tsx","pages/view-recipe/view-recipe.styles.ts","components/atoms/comments-list-item/comments-list-item.styles.ts","components/atoms/user-avatar/user-avatar.styles.ts","components/atoms/user-avatar/user-avatar.component.tsx","components/atoms/comments-list-item/comments-list-item.component.tsx","components/atoms/recipe-content-owner/recipe-content-owner.styles.ts","components/atoms/recipe-content-owner/recipe-content-owner.component.tsx","components/molecules/recipe-view-details/recipe-view-details.styles.ts","templates/add-comment/add-comment.styles.ts","templates/add-comment/add-comment.component.tsx","components/molecules/recipe-view-details/recipe-view-details.component.tsx","components/molecules/confirm-dialog/confirm-dialog.styles.ts","components/molecules/confirm-dialog/confirm-dialog.component.tsx","components/atoms/recipe-action-bar/recipe-action-bar.styles.ts","components/atoms/recipe-action-bar/recipe-action-bar.component.tsx","pages/view-recipe/view-recipe.component.tsx","templates/edit-recipe-form/edit-recipe-form.styles.ts","templates/edit-recipe-form/edit-recipe-form.component.tsx","pages/edit-recipe/edit-recipe.component.tsx","pages/recipes-by-category/recipes-by-category.styles.ts","pages/recipes-by-category/recipes-by-category.component.tsx","templates/sign-in-form/sign-in-form.styles.ts","services/auth/auth.services.ts","templates/sign-in-form/sign-in-form.component.tsx","pages/sign-in-sign-up/sign-in-sign-up.styles.ts","pages/sign-in-sign-up/sign-in-sign-up.component.tsx","templates/sign-up-form/sign-up-form.styles.ts","templates/sign-up-form/sign-up-form.component.tsx","pages/sign-up/sign-up.component.tsx","components/molecules/user-card/user-card.styles.ts","components/molecules/user-card/user-card.component.tsx","components/molecules/users-list/users-list.styles.ts","components/molecules/users-list/users-list.component.tsx","pages/users/users.component.tsx","App.styles.tsx","components/atoms/nav-brand/nav-brand.styles.ts","components/atoms/nav-brand/nav-brand-component.tsx","components/molecules/sign-in-out/sign-in-out.styles.ts","components/atoms/backdrop/backdrop.styles.ts","components/atoms/backdrop/backdrop.component.tsx","components/atoms/sign-out/sign-out.styles.ts","components/atoms/sign-out/sign-out.component.tsx","components/molecules/sign-in-out/sign-in-out.component.tsx","components/atoms/menu-toggle/menu-toggle.styles.ts","components/atoms/menu-toggle/menu-toggle.component.tsx","components/atoms/close-button/close-button.styles.ts","components/atoms/close-button/close-button.component.tsx","components/molecules/theme-switcher/theme-switcher.styles.ts","components/molecules/theme-switcher/theme-switcher.component.tsx","components/molecules/main-menu/main-menu.styles.ts","components/molecules/primary-nav/primary.nav.styles.ts","components/molecules/primary-nav/primary.nav.component.tsx","pages/user-recipes/user-recipes.component.tsx","components/atoms/select-option-plain/select-option-plain.styles.ts","components/atoms/select-option-plain/select-option-plain.component.tsx","components/molecules/theme-palette-switcher/theme-palette-switcher.component.tsx","components/molecules/remove-user/remove-user.styles.ts","components/molecules/remove-user/remove-user.component.tsx","pages/setting/settings-page.component.tsx","App.tsx","reportWebVitals.ts","components/molecules/toasts/toasts-styles.ts","components/molecules/toasts/toasts.component.tsx","index.tsx"],"names":["Theme","HeroStyles","styled","h1","props","theme","fontSizes","large","colors","pageHighLight2","SpinnerWrapper","div","HeroSubTitle","h2","pageForeground1","HeroWrapper","pageBackground2","pageBackground1","navBarBackground","StyledHeroGraphic","Widgets","TagContainer","small","TagList","ul","getFeaturedRecipes","recipes","items","copy","slice","i","length","random","Math","floor","push","splice","getCategoryTags","temp","find","item","category","sort","a","b","addRecipeToList","recipe","editRecipe","index","findIndex","_id","updated","deleteRecipe","baseURL","process","endpoint","getRecipes","axios","get","resp","data","addRecipe","token","method","url","headers","Authorization","updateRecipe","removeRecipe","message","addFavorite","recipeId","userId","removeFavorite","addRecipeComment","commentItem","RecipesContext","createContext","recipeItems","recipeCount","setSpinner","setCount","makeFreshPull","isLoading","makeRequest","RecipesProvider","children","useState","setRecipeItems","setRecipeCount","setMakeRequest","setIsLoading","val","useEffect","then","setTimeout","catch","err","console","error","Provider","value","setUserAuth","user","expires","localStorage","setItem","JSON","stringify","expireAuth","getItem","parse","Date","getTime","removeItem","getUserAuth","authData","AuthContext","isLoggedIn","setLogin","setUserToken","setUserObject","expiration","setUserExpiration","AuthProvider","setUser","setIsLoggedIn","setToken","setExpiration","storageUser","CategoryTags","useContext","uniques","setUniques","filterList","filter","r","shared","user_id","Fragment","map","key","to","cat_id","StyledMain","main","MainSection","CardList","StyledRatingContainer","StarFilled","Star","inverse","StarOutlined","StarBorder","RecipeRating","rating","title","idx","paletteItems","pink","purple","green","cyan","deepPurple","indigo","teal","blue","lightGreen","deepOrange","lightBlue","yellow","getLightTheme","palette","grey","pageBackground3","pageBorderColor1","pageLinkColor1","pageHighLight1","A100","A700","pageSecondaryColor1","pageToastSuccess","pageToastError","fonts","smallPlus","regular","medium","FormButtons","ThemeContext","Dark","setTheme","setPaletteDark","setPaletteLight","currentDark","currentLight","setCurrentDark","setCurrentLight","MyTheme","paletteDark","paletteLight","str","parsed","A200","CardItem","ThemeStyle","ThemEnum","Light","CardCopy","p","CardTitle","h3","CardBottomWrapper","CardMetaInfo","RecipeCardItem","r_name","steps","join","ChevronRight","FeaturedRecipes","featured","setFeatured","StyledCircularProgress","CircularProgress","SpinnerOuter","Spinner","HomePage","StyledPageTitle","PageTitle","StyledList","StyledListItem","li","RecipeList","StyledButton","button","StyledGridOnIcon","GridOn","StyledListIcon","List","ListGridToggleButton","grid","onClick","StyledCardContainer","RecipesCategoryCardList","StyledTitleWrapper","StyledSpinnerWrap","StyledEmptyMessage","EmptyMesssage","msg","RecipesPage","isGridView","setIsGridView","filteredRecipes","setFilteredRecipes","filteredItems","addUserItem","userList","name","toUpperCase","removeUserItem","u","id","getUsers","deleteUserAccount","UsersContext","userItems","userCount","UsersProvider","setUserItems","setUserCount","users","sorted","log","FavoritesPage","favorites","includes","StyledFieldWrapper","FieldWrapper","StyledLabel","label","Required","StyledSelect","SelectOptionField","as","dataType","optionData","defaultOptionText","required","disabled","useField","field","setValue","htmlFor","className","datatype","StyledVisibility","Visibility","StyledVisibilityOff","VisibilityOff","StyledEyeButton","StyledInput","input","StyledEyeLabel","RecipeTextField","placeholder","type","onVisibilityChange","isVisible","CheckBoxIcon","Check","ison","StyledCheckBox","CheckBoxField","StyledPrimaryButton","FormButton","Primary","Size","Icons","buttonText","size","StyledFormWrapper","StyledInputWrapper","InputButtonsWrap","FieldArrayItem","StyledAddInputBtn","StyledSubtractInputBtn","StyledAccordionContent","Collapsed","Field","StyledHRule","hr","StyledFieldArrayEmptyButton","StyledButtonToggle","StyledToggleWrap","Space","StyledArrowDown","KeyboardArrowDown","StyledArrowUp","KeyboardArrowUp","AccordionToggle","isOpen","toggleHandler","spacing","AddRecipeForm","addToast","useToasts","catData","setCatData","currentRecipeItems","setCurrentRecipeItems","isOpenIngredients","setIsOpenIngredients","isOpenSteps","setIsOpenSteps","isOpenComments","setIsOpenComments","navigate","useNavigate","formValuesInitial","ingredients","comments","String","initialValues","onSubmit","values","setSubmitting","catName","Number","vals","appearance","autoDismiss","dirty","resetForm","isValid","render","arrayHelpers","remove","insert","comment","Secondary","AddRecipePage","DetailsTopWrapper","MetaInfoTop","MetaInfoBottom","pageForegroundColor1","MetaInfoWrapper","UserWrapper","StyledAvatar","span","UserAvatar","CommentItem","StyledDiv","RecipeContentOwner","action","findUser","StyledDetailsDiv","StyledH4","h4","AddCommentForm","handleSubmit","undefined","setFormValuesInitial","showForm","setShowForm","RecipeViewDetails","setRecipe","tempRecipe","StyledConfirmButton","StyledCancelButton","StyledDialog","Dialog","ConfirmDialog","confirmText","handleCancel","handleConfirm","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","StyledTextarea","textarea","StyledFavoriteIcon","Favorite","StyledFavoriteOutlineIcon","FavoriteBorderOutlined","StyledEditIcon","Edit","StyledDeleteIcon","Delete","StyledShareIcon","Share","StyledPrintIcon","Print","StyledRecipeActionBar","RecicipeActionBar","useParams","favDisabled","setFavDisabled","isFav","setIsFav","setOpen","copied","setCopied","isOwner","setIsOwner","f","handleFavorite","onCopy","text","window","print","onChange","e","target","RecipeDetailPage","EditRecipeForm","foundRecipe","toString","EditRecipePage","RecipesByCategory","filtered","setFiltered","setCatName","param_id","parseInt","logInUser","email","password","post","signUpUser","SignInForm","StyledNavLink","NavLink","StyledSignUpContainer","SignInSignUpPage","SignUpForm","setIsVisable","userToAdd","SignUpPage","StyledUserCard","StyledNoSharedRecipes","UserCard","isContentOwner","StyledUserCardList","UsersList","authUser","setUsers","usersWithRecipe","UsersPage","StyledOuterDiv","StyledNavBrand","Restaurant","NavBrand","toggleClose","StyledRightItemsWrapper","StyledRightListItem","StyledBackdrop","Backdrop","StyledAccountIcon","AccountCircle","StyledDropdownContainer","StyledAnchor","StyledDropDownWrapper","SignOutButton","setIsOpen","toggleExpanded","handleSignOut","SignInSignOut","StyledMenu","Menu","MenuToggle","StyledClose","Close","CloseButton","closeHandler","StyledThemeButton","Settings","StyledLightModeIcon","LightMode","StyledDarkModeIcon","DarkMode","ThemeSwitcher","settingsPresentation","common","StyledHome","Home","StyledUsers","PeopleAlt","MenuBook","StyledWidget","StyledAddCircle","AddCircle","StyledSetting","StyledFavorite","StyledNavUl","StyledMenuHeader","StyledMenuOuter","MainMenu","toggleIsOpen","itemsWithIcons","icon","svgIcon","params","route","StyledNavBrandWrap","StyledNavBar","PrimaryNav","NAV_DATA","mainNavItems","setMainNavItems","handleIsOpen","auth","UserRecipesPage","usersRecipes","setUsersRecipes","setIsContentOwner","tempUser","select","SelectOptionPlain","handleChange","labelText","evt","o","ThemePaletteSwitcher","selectValDark","setSelectValDark","selectValLight","setSelectValLight","themeColors","setThemeColors","Object","keys","split","toLowerCase","StyledUnderlabel","RemoveUserComponent","userToRemove","SettingsPage","App","path","element","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StyledCloseIcon","StyledToast","Appearance","CustomToasts","onDismiss","ReactDOM","StrictMode","components","Toast","CustomToast","document","getElementById"],"mappings":"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","file":"static/js/main.5c9b4daf.chunk.js","sourcesContent":["import React, { useContext, createContext, useState, FC, useEffect } from \"react\";\nimport { getDarkTheme, getLightTheme, paletteItems } from './themes';\nimport { ThemeProvider } from \"styled-components\";\n\nexport enum Theme {\n    Dark = 'Dark',\n    Light = 'Light',\n}\n\nexport type ThemeContextType = {\n    theme: Theme;\n    setTheme: (Theme: Theme) => void;\n    setPaletteDark: (val: any) => void;\n    setPaletteLight: (val: any) => void;\n    paletteItems: any;\n    currentDark: string;\n    currentLight: string;\n    setCurrentDark: (val: string) => void;\n    setCurrentLight: (val: string) => void;\n}\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const ThemeContext = createContext<ThemeContextType>({\n    theme: Theme.Dark,\n    setTheme: theme => { },\n    setPaletteDark: () => { },\n    setPaletteLight: () => { },\n    paletteItems,\n    currentDark: '',\n    currentLight: '',\n    setCurrentDark: (val: string) => { },\n    setCurrentLight: (val: string) => { }\n});\nexport const useTheme = () => useContext(ThemeContext);\n\nconst MyTheme: FC<Props> = ({ children }) => {\n    const [currentDark, setCurrentDark] = useState('pink');\n    const [currentLight, setCurrentLight] = useState('blue');\n    const [theme, setTheme] = useState(Theme.Dark);\n    const [paletteDark, setPaletteDark] = useState(paletteItems['pink']);\n    const [paletteLight, setPaletteLight] = useState(paletteItems['blue']);\n\n\n    useEffect(() => {\n        const str = localStorage.getItem('storedTheme');\n\n        if (str) {\n            const parsed = JSON.parse(str);\n            setPaletteLight(parsed.paletteLight);\n            setPaletteDark(parsed.paletteDark);\n            setCurrentDark(parsed.currentDark);\n            setCurrentLight(parsed.currentLight);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('storedTheme', JSON.stringify(({ currentDark, currentLight, paletteDark, paletteLight })))\n    }, [paletteDark, paletteLight, currentLight, currentDark]);\n\n\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme, setPaletteDark, setPaletteLight, paletteItems, currentDark, currentLight, setCurrentDark, setCurrentLight }}>\n            <ThemeProvider theme={theme === Theme.Dark ? getDarkTheme(paletteDark) : getLightTheme(paletteLight)}>{children}</ThemeProvider>\n        </ThemeContext.Provider>\n    );\n\n}\n\nexport default MyTheme;","import styled from 'styled-components';\nimport { Widgets } from '@material-ui/icons';\n\nexport const HeroStyles = styled.h1`\n    font-size: ${(props) => props.theme.fontSizes.large};\n    font-weight: 300;\n    line-height: 0.9em;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const HeroSubTitle = styled.h2`\n    font-size: 1.5rem;\n    font-weight: 300;\n    line-height: 1.2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const HeroWrapper = styled.div`\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.pageBackground2};\n    background: linear-gradient(\n        to right,\n        ${props => props.theme.colors.pageBackground1},\n        75%,\n        ${props => props.theme.colors.navBarBackground}\n    );\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledHeroGraphic = styled(Widgets)`\n    color: ${(props) => props.theme.colors.pageHighLight2};\n    font-size: 5.6rem !important;\n    margin: -6vw 1.25rem 0 -2.6rem;\n    @media (min-width: 576px) {\n        font-size: 11.6rem !important;\n        margin: 0 1.25rem 0 -1.25rem;\n    }\n`;","import styled from 'styled-components';\n\nexport const TagContainer = styled.div`\n    background-color: ${props => props.theme.colors.pageBackground2};\n    font-size: ${props => props.theme.fontSizes.small};\n    color: #fff;\n    padding: 1.5rem 1.5rem 0.75rem 1.5rem;\n`;\n\nexport const TagList = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    list-style: none;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    li {\n        background-color: ${props => props.theme.colors.pageHighLight2};\n        padding: 0.5rem 1rem;\n        margin: 0 0.5rem 1rem 0.5rem;\n        border-radius: 0 1rem 0 1rem;\n        @media (min-width: 1400px) {\n            &:nth-child(even) {\n                border-radius: 1rem 0 1rem 0;\n            }\n        }\n        a {\n            color: #fff;\n            text-decoration: none;\n        }\n    }\n`;","import React from 'react';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\n\n\nexport const getFeaturedRecipes = (recipes: iRecipe[]):iRecipe[] => {\n    const items: iRecipe[] = [];\n    const copy = recipes.slice(0);\n    const NUM = 3;\n\n    for (let i = copy.length; i > 0; i--) {\n        if (items.length < NUM) {\n            let random = Math.floor(Math.random() * copy.length);\n            items.push(copy[random]);\n            copy.splice(random, 1);\n        } else {\n            break;\n        }\n    }\n    return items;\n};\n\nexport const getCategoryTags = (recipes: iRecipe[]):iRecipe[] => {\n    const temp: iRecipe[] = [];\n\n    for (let i = 0; i < recipes.length; i++) {\n        if (!temp.find(item => recipes[i].category === item.category)) {\n            temp.push(recipes[i]);\n        }\n    }\n\n    return temp.sort((a, b) => {\n        if (a.category < b.category) {\n            return -1;\n        }\n        if (a.category > b.category) {\n            return 1;\n        }\n        return 0;\n    })\n}\n\nexport const addRecipeToList = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        recipes.push(recipe);\n        return recipes;\n    }\n}\n\nexport const editRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1, recipe);\n        return updated;\n    }\n}\n\nexport const deleteRecipe = ( recipes: iRecipe[] = [], recipe?: iRecipe) => {\n    if (!recipe) {\n        return recipes;\n    } else {\n        const index = recipes.findIndex(index => index._id === recipe._id);\n        const updated = recipes.splice(index, 1);\n        return updated;\n    }\n}\n\n","import axios from 'axios';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_RECIPE_ENDPOINT;\nconst commentEndpoint = process.env.REACT_APP_RECIPE_COMMENT_ENDPOINT;\nconst addFavoriteEndpoint = process.env.REACT_APP_FAVORITE_ADD;\nconst removeFavoriteEndpoint = process.env.REACT_APP_FAVORITE_REMOVE;\n\nexport const getRecipes = async () => {\n    try {\n\n        const resp = await axios.get<iRecipe[]>(`${baseURL}${endpoint}`);\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const addRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${endpoint}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const updateRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            data: recipe,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const removeRecipe = async (recipe: iRecipe, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${endpoint}/${recipe._id}`,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        })\n\n        return resp.data.message;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const addFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${addFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId,\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const removeFavorite = async (recipeId: string | undefined, userId:string | undefined, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'post',\n            url: `${baseURL}${removeFavoriteEndpoint}`,\n            data: {\n                recipeId: recipeId || 'none',\n                userId: userId || 'none'\n            },\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const addRecipeComment = async (commentItem: iRecipeComment, recipeId: string, token: string | null) => {\n    try {\n        const resp = await axios({\n            method: 'patch',\n            url: `${baseURL}${commentEndpoint}/${recipeId}`,\n            data: commentItem,\n            headers: {\n                Authorization: `Bearer ${token ? token : 'none'}`\n            }\n        });\n\n        return resp.data.recipe;\n    } catch (err) {\n        throw(err)\n    }\n}\n","import React, { FC, createContext, useState, useEffect } from 'react';\nimport {\n    getFeaturedRecipes, getCategoryTags, addRecipeToList, editRecipe, deleteRecipe\n} from './recipes.utils';\n\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { getRecipes } from '../../services/recipes/recipes.services';\n\ntype RecipeContextType = {\n    recipeItems: iRecipe[];\n    recipeCount: number;\n    getFeaturedRecipes: (recipes: iRecipe[]) => iRecipe[];\n    getCategoryTags: (recipes: iRecipe[]) => iRecipe[];\n    addRecipeToList: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    editRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    deleteRecipe: (recipes: iRecipe[], recipe?: iRecipe) => iRecipe[];\n    setSpinner: (val: boolean) => void;\n    makeFreshPull: (val: boolean) => void;\n    setCount: (val: number) => void;\n    isLoading: boolean;\n    makeRequest: boolean;\n}\n\nexport const RecipesContext = createContext<RecipeContextType>({\n    recipeItems: [],\n    recipeCount: 0,\n    getFeaturedRecipes: ([]) => [],\n    getCategoryTags: ([]) => [],\n    addRecipeToList: ([]) => [],\n    editRecipe: ([]) => [],\n    deleteRecipe: ([]) => [],\n    setSpinner: () => { },\n    setCount: () => { },\n    makeFreshPull: () => { },\n    isLoading: true,\n    makeRequest: true\n});\n\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst RecipesProvider: FC<Props> = ({ children }) => {\n    const [recipeItems, setRecipeItems] = useState<iRecipe[]>([]);\n    const [recipeCount, setRecipeCount] = useState<number>(0);\n    const [makeRequest, setMakeRequest] = useState<boolean>(true);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const setSpinner = (val = true) => setIsLoading(val);\n    const makeFreshPull = (val = true) => setMakeRequest(val);\n    const setCount = (val = 0) => setRecipeCount(val);\n\n    useEffect(() => {\n        if (makeRequest) {\n            setMakeRequest(false);\n            getRecipes().then((resp) => {\n                // delay is to see spinner\n                setTimeout(() => {\n                    setSpinner(false);\n                    if (resp) {\n                        setRecipeItems(resp);\n                        setCount(resp.length);\n                    }\n                }, 1500);\n            }).catch((err) => {\n                setSpinner(false);\n                console.error(err);\n            })\n        }\n\n    }, [makeRequest])\n\n    return (<RecipesContext.Provider\n        value={{\n            recipeItems,\n            recipeCount,\n            getFeaturedRecipes,\n            getCategoryTags,\n            addRecipeToList,\n            editRecipe,\n            deleteRecipe,\n            setSpinner,\n            setCount,\n            isLoading,\n            makeRequest,\n            makeFreshPull\n        }}\n    >{children}</RecipesContext.Provider>)\n};\n\nexport default RecipesProvider;","\nimport { iUser } from '../../interfaces/user/user.interface';\n\nexport type StoredAuthType = {\n    user: iUser;\n    expires: number;\n}\n\nexport const setUserAuth = (user: iUser, expires: number):void => {\n\n    localStorage.setItem(\n        'userData',\n        JSON.stringify({\n            user,\n            expires\n        })\n    )\n}\n\nexport const expireAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        if (expires - currentTime < 0) {\n            localStorage.removeItem('userData');\n        }\n    } else {\n        localStorage.removeItem('userData');\n    }\n}\n\nexport const getUserAuth = () => {\n    const data:string | null = localStorage.getItem('userData');\n\n    if (data) {\n        const authData: StoredAuthType = JSON.parse(data);\n        const { expires } = authData;\n        const currentTime = new Date().getTime();\n        return expires - currentTime > 0 ? authData : null;\n    } else {\n        return null;\n    }\n}","import React, { FC, createContext, useState, useEffect } from 'react';\n\nimport { iUser } from '../../interfaces/user/user.interface';\nimport { setUserAuth, getUserAuth, expireAuth } from './auth.utilities';\n\ntype UserContextType = {\n    user: iUser | null;\n    isLoggedIn: boolean,\n    token: string | null;\n    setLogin: (val: boolean) => void;\n    setUserToken: (val: any) => void;\n    setUserObject: (val: any) => void;\n    setUserExpiration: (val: any) => void;\n    expiration: number | null;\n    setUserAuth: (user: iUser, expires: number) => void;\n    getUserAuth: () => void;\n    expireAuth: () => void;\n}\n\nexport const AuthContext = createContext<UserContextType>({\n    user: null,\n    isLoggedIn: false,\n    token: null,\n    setLogin: () => { },\n    setUserToken: (val) => { },\n    setUserObject: (val) => { },\n    expiration: null,\n    setUserExpiration: (val) => { },\n    setUserAuth: () => { },\n    getUserAuth: () => { },\n    expireAuth: () => { }\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst AuthProvider: FC<Props> = ({ children }) => {\n\n    const [user, setUser] = useState<iUser | null>(null);\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [token, setToken] = useState<string | null>(null);\n    const [expiration, setExpiration] = useState<number | null>(null);\n    const setLogin = (val = false) => setIsLoggedIn(val);\n    const setUserToken = (val = null) => setToken(val);\n    const setUserObject = (val = null) => setUser(val);\n    const setUserExpiration = (val = null) => setExpiration(val);\n\n    useEffect(() => {\n        expireAuth();\n        const storageUser = getUserAuth();\n\n        if (storageUser) {\n            setUser(storageUser.user);\n            setIsLoggedIn(true);\n            setToken(storageUser.user.token);\n            setExpiration(storageUser.expires);\n        }\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            isLoggedIn,\n            token,\n            expiration,\n            setLogin,\n            setUserToken,\n            setUserObject,\n            setUserExpiration,\n            setUserAuth,\n            getUserAuth,\n            expireAuth\n        }}>{children}</AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TagContainer, TagList } from './category-tabs.styles';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\nconst CategoryTags = () => {\n    const { recipeItems, getCategoryTags } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [uniques, setUniques] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setUniques(getCategoryTags(filterList))\n    }, [recipeItems, getCategoryTags, user])\n\n    return (\n        <React.Fragment>\n            {\n                uniques.length > 0 && (\n                    <TagContainer>\n                        <TagList>\n                            {\n                                uniques.map((item, key) => (<li key={key}>\n                                    <Link to={`/recipes/category/${item.cat_id}`}>{item.category}</Link>\n                                </li>))\n                            }\n                        </TagList>\n                    </TagContainer>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CategoryTags;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    padding: 0 1.5rem 1.5rem 1.5rem;\n    overflow: hidden;\n`;","import React, { FC } from \"react\";\nimport { StyledMain } from \"./main-section.styles\";\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const MainSection: FC<Props> = ({ children }) => (\n    <StyledMain children={children} />\n);","import styled from 'styled-components';\n\nexport const CardList = styled.div`\n    width: 100%;\n    margin: 0;\n    padding: 1.5rem 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;\n\n","import styled from \"styled-components\";\n\nimport { StarBorder, Star } from \"@material-ui/icons\";\nimport {Theme as ThemeEnum } from '../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle?: ThemeEnum;\n    inverse: string;\n}\n\nexport const StyledRatingContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    max-width: 90px;\n`;\n\nexport const StarFilled = styled(Star)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\nexport const StarOutlined = styled(StarBorder)<iThemeStyleProp>`\n    color: #fff;\n    ${props => props.inverse === 'yes' && `\n        color: ${props.theme.colors.navBarBackground};\n    `};\n`;\n\n","import React, { FC } from \"react\";\nimport { StyledRatingContainer, StarFilled, StarOutlined } from \"./rating.styles\";\n\ninterface Props {\n    rating?: number;\n    inverse?: boolean;\n}\n\nconst RecipeRating: FC<Props> = ({ rating = 0, inverse = false }) => {\n    let stars: any[] = [true, true, true, true];\n\n    return (\n        <StyledRatingContainer title={`rated ${rating} stars`}>\n            {stars.map((item, idx) => idx < rating ?\n                (<StarFilled inverse={inverse ? 'yes' : 'no'} key={idx} />)\n                :\n                (<StarOutlined inverse={inverse ? 'yes' : 'no'} key={idx} />)\n            )}\n        </StyledRatingContainer>\n    );\n}\n\nexport default RecipeRating;","import {\n    grey,\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightBlue,\n    lightGreen,\n    yellow,\n    deepOrange\n} from 'material-colors-ts';\n\nexport const paletteItems = {\n    pink,\n    purple,\n    green,\n    cyan,\n    deepPurple,\n    indigo,\n    teal,\n    blue,\n    lightGreen,\n    deepOrange,\n    lightBlue,\n    yellow\n}\n\nexport const getDarkTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[900],\n            pageBackground2: grey[800],\n            pageBackground3: grey[700],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[50],\n            pageLinkColor1: palette.A200,\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}\n\nexport const getLightTheme = (palette: any) => {\n    return {\n        colors: {\n            pageBackground1: grey[50],\n            pageBackground2: grey[200],\n            pageBackground3: grey[300],\n            pageBorderColor1: grey[500],\n            pageForeground1: grey[900],\n            pageLinkColor1: palette[900],\n            pageHighLight1: palette.A100,\n            pageHighLight2: palette.A700,\n            navBarBackground: palette[800],\n            pageSecondaryColor1: palette[700],\n            pageToastSuccess: '#2E7D32',\n            pageToastError: '#C62828'\n        },\n        fonts: [\"sans-serif\", \"Roboto\"],\n        fontSizes: {\n            small: \"1em\",\n            smallPlus: \"1.2em\",\n            regular: \"1.5em\",\n            medium: \"2em\",\n            large: \"3em\"\n        }\n    }\n}","import React, { FC } from 'react';\n\nimport { StyledPrimaryButton } from './form-button.styles';\n\nexport enum FormButtons {\n    Primary = \"Primary\",\n    Secondary = \"Secondary\"\n}\n\ninterface Props {\n    buttonText: string;\n    type: 'button' | 'submit';\n    FormButton: FormButtons;\n    onClick?: () => void;\n    disabled?: boolean;\n    size?: 'small' | undefined;\n}\n\n\n\nconst FormButton: FC<Props> = ({ buttonText, type = 'button', FormButton, onClick, disabled = false, size }) => {\n    return (\n        <StyledPrimaryButton\n            Size={size}\n            onClick={onClick}\n            FormButton={FormButton}\n            type={type}\n            disabled={disabled}\n        >\n            {buttonText}\n        </StyledPrimaryButton>\n    )\n}\n\nexport default FormButton;","import { Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {Theme as ThemEnum} from '../.../../../../providers/theme/theme.provider';\n\ninterface iThemeStyleProp {\n    ThemeStyle: ThemEnum;\n}\n\nexport const CardItem = styled.div<iThemeStyleProp>`\n    background-color: ${(props) => props.theme.colors.pageSecondaryColor1};\n    padding: 1rem;\n    color: #fff;\n    min-height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        background-color: #fff;\n        border: 2px solid ${props.theme.colors.pageSecondaryColor1};\n        border-top: 0.5rem solid ${props.theme.colors.pageSecondaryColor1};\n        color: ${props.theme.colors.pageForeground1};\n    `}\n`;\n\nexport const CardCopy = styled.p`\n    font-weight: 300;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n`;\n\nexport const CardTitle = styled.h3`\nfont-weight: 400;\ndisplay: -webkit-box;\n-webkit-line-clamp: 2;\n-webkit-box-orient: vertical;  \noverflow: hidden;\n`;\n\nexport const CardBottomWrapper = styled.div<iThemeStyleProp>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    * { flex: 1}\n    a {\n        color: #fff;\n        text-decoration: none;\n        flex: 0 0 1;\n        text-align: right;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        svg {\n            flex: 0 0 24px;\n        }\n    }\n    ${props => props.ThemeStyle === ThemEnum.Light && `\n        a {\n            color: ${props.theme.colors.pageLinkColor1};\n        }\n    `}\n`;\n\nexport const CardMetaInfo = styled.div<iThemeStyleProp>`\n    display: flex;\n    align-items: top;\n    justify-content: left;\n    * {\n        flex: 1;\n    }\n\n    span {\n        position: relative;\n        padding-right: 8px;\n        margin-right: 8px;\n        flex: 0;\n        &:before {\n            position: absolute;\n            content: '';\n            right: 0;\n            width: 1px;\n            height: 100%;\n            background-color: #fff;\n            opacity: 0.5;\n        }\n        ${props => props.ThemeStyle === ThemEnum.Light && `\n            &::before {\n                background-color: ${props.theme.colors.pageForeground1};\n            }\n        `}\n    }\n`;","import React, { FC, useContext } from 'react';\n\nimport RecipeRating from '../../atoms/rating/rating.component';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight } from \"@material-ui/icons\";\n\nimport { ThemeContext, Theme } from '../../../providers/theme/theme.provider';\nimport { CardItem, CardCopy, CardBottomWrapper, CardMetaInfo, CardTitle } from './recipe-card-item.styles';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ntype Props = {\n    item: iRecipe;\n}\n\n\nconst RecipeCardItem: FC<Props> = ({ item }) => {\n    const { theme } = useContext(ThemeContext)\n    return (\n        <CardItem ThemeStyle={theme}>\n            <CardTitle>{item.r_name}</CardTitle>\n            <CardCopy>{item?.steps?.join(' ')}</CardCopy>\n            <CardBottomWrapper ThemeStyle={theme}>\n                <CardMetaInfo ThemeStyle={theme}>\n                    <span>{item.category}</span>\n                    <RecipeRating inverse={theme === Theme.Light} rating={item.rating} />\n                </CardMetaInfo>\n                <Link to={`/recipes/${item._id}`}>View More <ChevronRight /></Link>\n            </CardBottomWrapper>\n        </CardItem>\n    );\n}\n\nexport default RecipeCardItem;","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { CardList } from \"./featured-recipes.styles\";\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\n\nconst FeaturedRecipes = () => {\n    const { recipeItems, getFeaturedRecipes } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [featured, setFeatured] = useState<iRecipe[]>([]);\n\n    useEffect(() => {\n        const filterList: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFeatured(getFeaturedRecipes(filterList));\n    }, [recipeItems, user, getFeaturedRecipes])\n\n\n    return (\n        <CardList>\n            {\n                featured.map((item, key) => (\n                    <RecipeCardItem key={key} item={item} />\n                ))\n            }\n        </CardList>\n    );\n}\n\nexport default FeaturedRecipes;","import React from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const SpinnerWrapper = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n    color: ${props => props.theme.colors.pageHighLight2} !important;\n`;\n\n\nexport const SpinnerOuter = styled.div`\n    min-height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React from 'react';\n\nimport { SpinnerWrapper, StyledCircularProgress } from './spinner.styles';\n\n\nconst Spinner = () => (\n    <SpinnerWrapper>\n        <StyledCircularProgress />\n    </SpinnerWrapper>\n);\n\nexport default Spinner;","import React, { useContext } from \"react\";\n\nimport { HeroStyles, HeroSubTitle, HeroWrapper, StyledHeroGraphic, SpinnerWrapper } from \"./home.styles\";\nimport CategoryTags from '../../components/molecules/category-tags/category-tags.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport FeaturedRecipes from \"../../components/molecules/featured-recipes/featured-recipes.component\";\nimport { RecipesContext } from \"../../providers/recipes/recipes.provider\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst HomePage = () => {\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <HeroWrapper>\n                <StyledHeroGraphic />\n                <div>\n                    <HeroStyles>Recipe Box</HeroStyles>\n                    <HeroSubTitle>A collection of my favorite recipes</HeroSubTitle>\n                </div>\n            </HeroWrapper>\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <FeaturedRecipes />\n                        <CategoryTags />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default HomePage;\n\n","import styled from 'styled-components';\n\nexport const StyledPageTitle = styled.h2`\n    font-size: ${(props) => props.theme.fontSizes.medium};\n    line-height: normal;\n    font-weight: 300;\n    margin-bottom: 0.5em;\n    color: ${(props) => props.theme.colors.pageHighLight2};\n`;","import React, { FC } from 'react';\nimport { StyledPageTitle } from './page-title.styles';\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nconst PageTitle: FC<Props> = ({ children }) => (\n    <StyledPageTitle children={children} />\n);\n\nexport default PageTitle;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n    margin-top: 1rem;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75rem 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n    &>a {\n        color: ${(props) => props.theme.colors.pageLinkColor1};\n        text-decoration: none;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`;","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledList, StyledListItem } from './recipe-list.styles';\n\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipeList: FC<Props> = ({ recipes = [] }) => {\n\n    return (\n        <StyledList>\n            {\n                recipes.map(item => (\n                    <StyledListItem key={item._id}>\n                        <Link to={`/recipes/${item._id}`}>\n                            {item.r_name}\n                        </Link>\n                    </StyledListItem>\n                ))\n            }\n        </StyledList>\n    )\n}\n\nexport default RecipeList;","import styled from 'styled-components';\n\nimport {GridOn, List} from '@material-ui/icons';\n\nexport const StyledButton = styled.button`\n    background: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n`;\n\nexport const StyledGridOnIcon = styled(GridOn)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`\n\nexport const StyledListIcon = styled(List)`\n    color: ${props => props.theme.colors.pageHighLight2};\n`\n","import React, { FC } from \"react\";\n\nimport { StyledGridOnIcon, StyledListIcon, StyledButton } from './list-grid-toggle.styles'\n\ninterface Props {\n    grid: boolean;\n    onClick: VoidFunction\n}\n\nconst ListGridToggleButton: FC<Props> = ({ grid, onClick }) => (\n    <StyledButton title={grid ? 'View list' : 'View cards'} onClick={onClick}>\n        {\n            grid ? (\n                <StyledListIcon />\n            ) : (\n                <StyledGridOnIcon />\n            )\n        }\n    </StyledButton>\n);\n\nexport default ListGridToggleButton;","import styled from 'styled-components';\n\nexport const StyledCardContainer = styled.div`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n`;","import React, { FC } from 'react';\n\nimport { StyledCardContainer } from './recipes-category-card-list.styles';\nimport RecipeCardItem from '../../atoms/recipe-card-item/recipe-card-item.component';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\ninterface Props {\n    recipes?: iRecipe[]\n}\n\nconst RecipesCategoryCardList: FC<Props> = ({ recipes = [] }) => (\n    <StyledCardContainer>\n        {\n            recipes.map((item, key) => (<RecipeCardItem key={key} item={item} />))\n        }\n        {\n            recipes.length < 3 && (\n                <React.Fragment>\n                    <div></div>\n                    <div></div>\n                </React.Fragment>\n            )\n        }\n    </StyledCardContainer>\n\n);\n\nexport default RecipesCategoryCardList;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n","import styled from 'styled-components';\n\nexport const StyledEmptyMessage = styled.p`\n  text-align: center;\n  margin: 2rem 0;\n  color: ${props => props.theme.colors.pageBorderColor1};\n`;","import React, { FC } from 'react';\n\nimport { StyledEmptyMessage } from './empty-message.styles';\n\ninterface Props {\n    msg: string;\n}\n\nexport const EmptyMesssage: FC<Props> = ({ msg }) => (\n    <StyledEmptyMessage>\n        {msg}\n    </StyledEmptyMessage>\n)\n\nexport default EmptyMesssage;","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap } from './recipes.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst RecipesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [filteredRecipes, setFilteredRecipes] = useState<iRecipe[]>([]);\n    const { recipeItems, recipeCount, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n\n    const onButtonClick = () => setIsGridView(!isGridView);\n\n    useEffect(() => {\n        const filteredItems: iRecipe[] = recipeItems.filter((r) => r.shared || r.user_id === user?.userId);\n        setFilteredRecipes(filteredItems);\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Recipes ({filteredRecipes.length})</PageTitle>\n                <ListGridToggleButton grid={isGridView} onClick={onButtonClick} />\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={filteredRecipes} />\n                ) : (\n                    <RecipeList recipes={filteredRecipes} />\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length === 0 &&\n                <EmptyMesssage msg={'There are no recipes.'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipesPage;","import { iUserItem } from \"../../interfaces/users/users.interface\";\n\nexport const addUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   userList.push(user);\n   const sorted = userList.sort(\n      (a: iUserItem, b: iUserItem) => (\n          a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n      ));\n   return sorted;\n}\n\nexport const removeUserItem = (user:iUserItem, userList: iUserItem[]):iUserItem[] => {\n   const idx = userList.findIndex(u => u.id === user.id);\n   userList.splice(idx, 1);\n   return userList;\n}\n\n","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\nimport {iUserItem} from '../../interfaces/users/users.interface'\n\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USERS_ENDPOINT;\nconst deleteUserEndpoint = process.env.REACT_APP_USER_DELETE;\n\ninterface iGetUsersResp  {\n    users: iUserItem[];\n}\n\n\nexport const getUsers = async () => {\n    try {\n\n        const resp = await axios.get(`${baseURL}${endpoint}`);\n        return resp.data\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const deleteUserAccount = async (user: iUser) => {\n\n    try {\n        const resp = await axios({\n            method: 'delete',\n            url: `${baseURL}${deleteUserEndpoint}/${user.userId}`,\n            headers: {\n                Authorization: `Bearer ${user.token ? user.token : 'none'}`\n            }\n        })\n    } catch (err) {\n        throw(err);\n    }\n}\n","import React, { createContext, FC, useState, useEffect } from 'react';\n\nimport USERS_LIST from './users-collection.data.json';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { addUserItem, removeUserItem } from './users.utilities';\nimport { getUsers } from '../../services/users/users.service';\n\n\ntype UsersContextType = {\n    userItems: iUserItem[];\n    isLoading: boolean;\n    userCount: number;\n    addUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n    removeUserItem: (val1: iUserItem, val2: iUserItem[]) => iUserItem[];\n}\n\nexport const UsersContext = createContext<UsersContextType>({\n    userItems: [],\n    userCount: 0,\n    isLoading: true,\n    addUserItem: addUserItem,\n    removeUserItem: removeUserItem\n});\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\n\nconst UsersProvider: FC<Props> = ({ children }) => {\n    const [userItems, setUserItems] = useState<iUserItem[]>([]);\n    const [userCount, setUserCount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n\n        getUsers().then(({ users }) => {\n            if (users) {\n                const sorted = users.sort(\n                    (a: iUserItem, b: iUserItem) => (\n                        a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n                    ));\n                setUserItems(sorted);\n                setUserCount(users.length);\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, [])\n\n    return (<UsersContext.Provider value={{\n        userItems,\n        userCount,\n        isLoading,\n        addUserItem,\n        removeUserItem\n    }}>\n        {children}\n    </UsersContext.Provider>)\n}\n\nexport default UsersProvider;","import styled from 'styled-components';\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n`;\n\nexport const StyledSpinnerWrap = styled.div`\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipeList from \"../../components/molecules/recipes-list/recipes-list.component\";\nimport ListGridToggleButton from \"../../components/atoms/list-grid-toggle/list-grid-toggle.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { UsersContext } from \"../../providers/users/users.provider\";\nimport RecipeCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { StyledTitleWrapper, StyledSpinnerWrap } from './favorites.styles';\nimport EmptyMesssage from \"../../components/atoms/empty-message/empty-message.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\n\nconst FavoritesPage = () => {\n    const [isGridView, setIsGridView] = useState<boolean>(true);\n    const [filteredRecipes, setFilteredRecipes] = useState<iRecipe[]>([]);\n    const { recipeItems, recipeCount, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const { userItems } = useContext(UsersContext);\n\n    const onButtonClick = () => setIsGridView(!isGridView);\n\n    useEffect(() => {\n        if (user) {\n            let filteredItems: iRecipe[] = recipeItems.filter(r => r.favorites?.length && user && r.favorites.includes(user.userId))\n            setFilteredRecipes(filteredItems);\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <StyledTitleWrapper>\n                <PageTitle>Favorite Recipes ({filteredRecipes.length})</PageTitle>\n                <ListGridToggleButton grid={isGridView} onClick={onButtonClick} />\n            </StyledTitleWrapper>\n            {\n                isLoading && (\n                    <StyledSpinnerWrap>\n                        <Spinner />\n                    </StyledSpinnerWrap>\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length !== 0 &&\n                    isGridView ? (\n                    <RecipeCardList recipes={filteredRecipes} />\n                ) : (\n                    <RecipeList recipes={filteredRecipes} />\n                )\n            }\n            {\n                !isLoading && filteredRecipes.length === 0 &&\n                <EmptyMesssage msg={'There are no recipes.'} />\n            }\n        </MainSection>\n    );\n}\n\nexport default FavoritesPage;","import styled from 'styled-components';\n\nexport const StyledFieldWrapper = styled.div`\n    margin-bottom: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledFieldWrapper } from './field-wrapper.styles'\n\ninterface Props {\n    children?: React.ReactNode\n}\n\n\nconst FieldWrapper: FC<Props> = ({ children }) => {\n\n    return (\n        <StyledFieldWrapper>\n            {children}\n        </StyledFieldWrapper>\n    );\n}\n\nexport default FieldWrapper;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.div`\n    .select {\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n    }\n`;\n","import React, { useState, FC } from \"react\";\n\nimport { useField, Field } from \"formik\";\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledSelect, StyledLabel } from './select-option-field.styles';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    as?: string;\n    id: string;\n    label?: string;\n    name: string;\n    dataType?: string;\n    optionData: iKeyValuePair[] | undefined;\n    defaultOptionText?: string;\n    required?: boolean;\n    disabled?: boolean;\n}\n\nconst SelectOptionField: FC<Props> = ({\n    as,\n    id,\n    label,\n    name,\n    dataType,\n    optionData,\n    defaultOptionText,\n    required = false,\n    disabled = false,\n}) => {\n    const [field, meta, helpers] = useField({ name, id });\n    const { setValue } = helpers;\n\n    if (!optionData) {\n        optionData = [];\n    }\n\n    if (dataType === 'boolean') {\n        if (field.value === 'true' || field.value === 'false') {\n            field.value === 'true' ? setValue(true, false) : setValue(false, false);\n        }\n    }\n\n\n    return (\n        <FieldWrapper>\n            {label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledSelect>\n                <Field\n                    as=\"select\"\n                    className='select'\n                    {...field}\n                    id={id}\n                    name={name}\n                    datatype={dataType || \"string\"}\n                    disabled={disabled}\n                    required={required}\n                >\n                    {defaultOptionText && <option value=\"\">{defaultOptionText}</option>}\n                    {\n                        optionData.map((item: iKeyValuePair) => (\n                            <option key={item.id} value={item.id}>\n                                {item.name}\n                            </option>\n                        ))\n                    }\n                </Field>\n            </StyledSelect>\n        </FieldWrapper>\n    );\n}\n\nexport default SelectOptionField;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledVisibility = styled(Visibility)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledVisibilityOff = styled(VisibilityOff)`\n    color: ${props => props.theme.colors.pageForeground1};\n    font-size: 1.2rem !important;\n`;\n\nexport const StyledEyeButton = styled.button`\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    width: 100%;\n    font-size: 1rem;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledEyeLabel = styled(StyledLabel)`\n    display: flex;\n    align-items: center;\n    > span {\n        margin-right: 0.5rem;\n    }\n`;\n","import React from 'react';\nimport { useField } from 'formik';\n\nimport { StyledInput, StyledLabel, StyledVisibility, StyledVisibilityOff, StyledEyeButton, StyledEyeLabel } from './text-field.styles';\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\n\ninterface iTextField {\n    name: string;\n    id: string;\n    placeholder?: string;\n    required?: boolean;\n    label?: string;\n    type?: 'text' | 'password';\n    isVisible?: boolean;\n    onVisibilityChange?: () => void;\n}\n\n\nconst RecipeTextField = ({\n    name, id, placeholder, type = \"text\", required = false, label, onVisibilityChange, isVisible }: iTextField) => {\n\n    const [field, meta] = useField({ name, id });\n    return (\n        <FieldWrapper>\n            {onVisibilityChange && (\n                <StyledEyeLabel Required={required} htmlFor={id}>\n                    <span>{label}</span>\n                    {\n                        isVisible ? (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"hide content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibilityOff />\n                            </StyledEyeButton>\n                        ) : (\n                            <StyledEyeButton\n                                type=\"button\"\n                                title=\"show content\"\n                                onClick={() => onVisibilityChange()}\n                            >\n                                <StyledVisibility />\n                            </StyledEyeButton>\n                        )\n                    }\n\n                </StyledEyeLabel>\n            )}\n            {!onVisibilityChange && label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)}\n            <StyledInput\n                id={id}\n                placeholder={placeholder}\n                required={required}\n                {...field}\n                type={type}\n            />\n        </FieldWrapper>\n    );\n}\n\nexport default RecipeTextField;","import styled from 'styled-components';\nimport Check from '@mui/icons-material/Check';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\ninterface iStyledProps {\n    ison: string;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '*' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledFieldWrapper = styled.div`\n    margin: 1.5rem 0 1rem 0;\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n`;\n\nexport const CheckBoxIcon = styled(Check)<iStyledProps>`\n    color: ${props => props.ison === 'yes' ? '#fff': 'transparent'};\n    background-color: ${props => props.ison === 'yes' ? props.theme.colors.navBarBackground : 'transparent' };\n    font-size: 2rem !important;\n    padding: 0;\n    margin: 0 0.5rem 0 0;\n`;\n\nexport const StyledCheckBox = styled.input`\n    appearance: none;\n    position: absolute;\n    width: 1.2rem;\n    height 1.2rem;\n    background-color: transparent;\n    top: 4px;\n    left: 2px;\n    outline: 2px solid ${props => props.value ? props.theme.colors.navBarBackground : props.theme.colors.pageBorderColor1};\n    outline-offset: 5px;\n    &:focus {\n        outline: 2px solid ${props => props.value? props.theme.colors.pageBorderColor1 : props.theme.colors.navBarBackground};\n        outline-offset: 5px;\n    }\n`;","import React, { FC } from 'react';\n\nimport { useField } from 'formik';\nimport FieldWrapper from '../field-wrapper/field-wrapper.component';\nimport { StyledFieldWrapper, StyledCheckBox, StyledLabel, CheckBoxIcon } from './checkbox-field.styles';\n\ninterface Props {\n    name: string;\n    required?: boolean;\n    label?: string;\n    id: string;\n}\n\nconst CheckBoxField: FC<Props> = ({ required = false, label, name, id }) => {\n    const [field, meta] = useField({ name, id, type: 'checkbox' });\n    return (\n        <StyledFieldWrapper>\n            {\n                label && (<StyledLabel Required={required} htmlFor={id}>{label}</StyledLabel>)\n            }\n            <label htmlFor={id}>\n                <CheckBoxIcon ison={field.value ? 'yes' : 'no'} />\n            </label>\n            <StyledCheckBox\n                type=\"checkbox\"\n                required={required}\n                id={id}\n                {...field}\n            />\n        </StyledFieldWrapper>\n    )\n}\n\nexport default CheckBoxField;","import { Size } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport {FormButtons } from './form-button.component';\n\n\ninterface iButtonStyleProps {\n    FormButton: FormButtons;\n    Size?: Size;\n}\n\nexport const StyledPrimaryButton = styled.button<iButtonStyleProps>`\n    margin: 0 0 1rem 0;\n    width: 100%;\n\n    @media (min-width: 414px) {\n        margin: 0 0 0 0;\n        margin-right: ${props => props.FormButton === FormButtons.Primary ? '1rem' : 0 };\n        width: auto;\n    }\n    font-size: ${props => props.Size ? props.theme.fontSizes.small : props.theme.fontSizes.regular};\n    background-color: ${props => props.FormButton === FormButtons.Primary ?\n        props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n    border: 0;\n    padding: 0.5rem 1rem;\n    color: ${props => props.FormButton === FormButtons.Primary ?\n        '#fff' : props.theme.colors.pageForeground1};\n    cursor: pointer;\n    &:hover {\n        background-color: ${props => props.FormButton === FormButtons.Primary ?\n            props.theme.colors.pageHighLight2 : props.theme.colors.pageBorderColor1};\n    }\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        &:hover {\n            background-color: ${props => props.FormButton === FormButtons.Primary ?\n                props.theme.colors.navBarBackground : props.theme.colors.pageBackground3};\n        }\n    }\n\n`;","import React, { FC, useContext } from 'react';\nimport { iMainNavItem } from '../../../interfaces/nav/nav.interface';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport CloseButton from '../../atoms/close-button/close-button.component';\nimport ThemeSwitcher from '../theme-switcher/theme-switcher.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport {\n    StyledMenuOuter,\n    StyledMenuHeader,\n    StyledNavUl,\n    StyledListItem,\n    StyledNavLink,\n    StyledFavorite,\n    StyledHome, StyledUsers, StyledMenu, StyledWidget, StyledSetting, StyledAddCircle\n} from './main-menu.styles';\n\ntype Props = {\n    isOpen: boolean;\n    toggleIsOpen: () => void;\n    items: iMainNavItem[];\n}\n\nexport enum Icons {\n    home = 0,\n    users = 1,\n    list = 2,\n    my = 3,\n    add = 4,\n    settings = 5\n}\n\nconst returnIconsByKey = (id: Icons) => {\n    const map = {\n        \"0\": StyledHome,\n        \"1\": StyledUsers,\n        \"2\": StyledMenu,\n        \"3\": StyledWidget,\n        \"4\": StyledAddCircle,\n        \"5\": StyledSetting,\n        \"6\": StyledFavorite\n    };\n    return map[id] || null;\n}\n\nconst MainMenu: FC<Props> = ({ isOpen, toggleIsOpen, items }) => {\n    const { user } = useContext(AuthContext);\n\n    const itemsWithIcons = items.map((i, idx) => {\n        return {\n            ...i,\n            icon: returnIconsByKey(i.svgIcon)\n        }\n    });\n\n    return (\n        <StyledMenuOuter isOpen={isOpen}>\n            <div>\n                <StyledMenuHeader>\n                    <NavBrand isOpen={isOpen} toggleClose={toggleIsOpen} />\n                    <CloseButton closeHandler={toggleIsOpen} />\n                </StyledMenuHeader>\n                <StyledNavUl>\n                    {\n                        itemsWithIcons.map((item, idx) => (\n                            <StyledListItem key={`item${idx}`} onClick={() => toggleIsOpen()}>\n                                <StyledNavLink to={\n                                    item.params ? `${item.route}/${user?.userId}` : item.route\n                                }>\n                                    {item.icon !== null && <item.icon />}\n                                    {item.text}\n                                </StyledNavLink>\n                            </StyledListItem>\n                        ))\n                    }\n                </StyledNavUl>\n            </div>\n            <StyledNavUl>\n                <StyledListItem>\n                    <ThemeSwitcher />\n                </StyledListItem>\n            </StyledNavUl>\n        </StyledMenuOuter>\n    );\n}\n\nexport default MainMenu;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    `;\n    \n    export const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    `;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n`;\n\nexport const StyledPrimaryButton = styled.button`\n    font-size: ${props => props.theme.fontSizes.regular};\n    background-color: ${props => props.theme.colors.navBarBackground};\n    border: 0;\n    padding: 0.5rem 1rem;\n    margin: 0 0 0 0;\n    color: #fff;\n    cursor: pointer;\n    &:hover {\n        background: ${props => props.theme.colors.pageHighLight2}\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n\n\n","import styled from 'styled-components';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\n\r\n\r\nexport const StyledButtonToggle = styled.button`\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: ${props => props.theme.colors.pageLinkColor1};\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\ninterface iStyledToggleWrap {\r\n    Space: 'yes' | 'no';\r\n}\r\n\r\nexport const StyledToggleWrap = styled.div<iStyledToggleWrap>`\r\n    color: ${(props) => props.theme.colors.pageForeground1};\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n    padding: ${props => props.Space === 'yes' ? '1rem 0' : '0 0 1rem 0'};\r\n`;\r\n\r\nexport const StyledArrowDown = styled(KeyboardArrowDown)`\r\n    font-size: 1.5rem !important;\r\n`;\r\n\r\nexport const StyledArrowUp = styled(KeyboardArrowUp)`\r\n    font-size: 1.5rem !important;\r\n`;","import React, { FC } from 'react';\r\n\r\nimport { StyledButtonToggle, StyledToggleWrap, StyledArrowDown, StyledArrowUp } from './accordion-toggle.styles'\r\n\r\ntype Props = {\r\n    isOpen: boolean;\r\n    toggleHandler: () => void;\r\n    buttonText: string;\r\n    spacing?: boolean;\r\n}\r\n\r\nconst AccordionToggle: FC<Props> = ({ isOpen, toggleHandler, buttonText, spacing = true }) => (\r\n    <StyledToggleWrap Space={spacing ? 'yes' : 'no'}>\r\n        <StyledButtonToggle\r\n            type=\"button\"\r\n            onClick={() => toggleHandler()}\r\n        >\r\n            <span>{buttonText}</span>\r\n            {\r\n                isOpen ? (\r\n                    <StyledArrowUp />\r\n                ) : (\r\n                    <StyledArrowDown />\r\n                )\r\n            }\r\n        </StyledButtonToggle>\r\n    </StyledToggleWrap>\r\n)\r\n\r\nexport default AccordionToggle;","import React, { useContext, useState, useEffect } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './add-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst AddRecipeForm = () => {\n    const { addToast } = useToasts();\n    const { token, user } = useContext(AuthContext);\n    const { recipeItems, setCount, getCategoryTags, addRecipeToList } = useContext(RecipesContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n    let navigate = useNavigate();\n    const formValuesInitial = {\n        user_id: user?.userId || '1',\n        user: user ? user.name : 'none',\n        r_name: '',\n        shared: false,\n        rating: 0,\n        cat_id: '',\n        category: '',\n        ingredients: [''],\n        steps: [''],\n        comments: []\n    };\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n    }, [recipeItems, getCategoryTags]);\n\n\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n\n                    const catName = catData.find(i => i.id === values.cat_id);\n                    const cat_id = Number(values.cat_id);\n                    const vals = {\n                        ...values,\n                        category: catName?.name || '',\n                        cat_id: cat_id\n                    }\n\n                    addRecipe(vals, token).then((resp) => {\n                        setSubmitting(false);\n                        setCurrentRecipeItems(addRecipeToList(currentRecipeItems, resp));\n                        setCount(currentRecipeItems.length)\n                        addToast(\n                            'Success',\n                            {\n                                appearance: 'success',\n                                autoDismiss: true\n                            }\n                        );\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    })\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"r_name\"\n                            label=\"Recipe Name\"\n                            name=\"r_name\"\n                            placeholder=\"Ex: Chocolate Cake\"\n                            required\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"cat_id\"\n                            name=\"cat_id\"\n                            label=\"Category\"\n                            required={true}\n                            defaultOptionText=\"Select Recipe Category\"\n                            optionData={catData}\n                        />\n\n                        <SelectOptionField\n                            as=\"select\"\n                            id=\"rating\"\n                            name=\"rating\"\n                            label=\"Rating\"\n                            required={true}\n                            defaultOptionText=\"Ex: Four Stars\"\n                            optionData={[\n                                { id: '1', name: 'One Star' },\n                                { id: '2', name: 'Two Stars' },\n                                { id: '3', name: 'Three Stars' },\n                                { id: '4', name: 'Four Stars' }\n                            ]}\n                        />\n\n                        <CheckBoxField\n                            id=\"shared\"\n                            name=\"shared\"\n                            label=\"Share Recipe\"\n                        />\n\n                        <div>\n                            <FieldArray\n                                name=\"ingredients\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.ingredients && values.ingredients.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Ingredients'\n                                                    isOpen={isOpenIngredients}\n                                                    toggleHandler={() => handleToggleIngredients()}\n                                                />\n                                                <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                    values.ingredients.map((item, index) => (\n                                                        <StyledInputWrapper key={index}>\n                                                            <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                            <FieldArrayItem>\n                                                                <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                <InputButtonsWrap>\n                                                                    <StyledSubtractInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.remove(index)}\n                                                                    >\n                                                                        -\n                                                                    </StyledSubtractInputBtn>\n                                                                    <StyledAddInputBtn\n                                                                        type=\"button\"\n                                                                        onClick={() => arrayHelpers.insert(index, '')}\n                                                                    >\n                                                                        +\n                                                                    </StyledAddInputBtn>\n                                                                </InputButtonsWrap>\n                                                            </FieldArrayItem>\n                                                        </StyledInputWrapper>\n                                                    ))\n                                                }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Ingredients\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"steps\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.steps && values.steps.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Steps'\n                                                    isOpen={isOpenSteps}\n                                                    toggleHandler={() => handleToggleSteps()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.steps.map((item, index) => (\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(index, '')}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                Add Steps\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n\n                        <div>\n                            <FieldArray\n                                name=\"comments\"\n                                render={arrayHelpers => (\n                                    <div>\n                                        {values.comments && values.comments.length > 0 ? (\n                                            <React.Fragment>\n                                                <AccordionToggle\n                                                    buttonText='Comments'\n                                                    isOpen={isOpenComments}\n                                                    toggleHandler={() => handleToggleComments()}\n                                                />\n                                                <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                    {\n                                                        values.comments.map((item, index) => (\n\n                                                            <StyledInputWrapper key={index}>\n                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                <FieldArrayItem>\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                    <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                    <InputButtonsWrap>\n                                                                        <StyledSubtractInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.remove(index)}\n                                                                        >\n                                                                            -\n                                                                        </StyledSubtractInputBtn>\n                                                                        <StyledAddInputBtn\n                                                                            type=\"button\"\n                                                                            onClick={() => arrayHelpers.insert(\n                                                                                index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                            )}\n                                                                        >\n                                                                            +\n                                                                        </StyledAddInputBtn>\n                                                                    </InputButtonsWrap>\n                                                                </FieldArrayItem>\n                                                            </StyledInputWrapper>\n                                                        ))\n                                                    }\n                                                </StyledAccordionContent>\n                                            </React.Fragment>\n                                        ) : (\n                                            <StyledFieldArrayEmptyButton\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })\n                                                }>\n                                                Add comment\n                                            </StyledFieldArrayEmptyButton>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </div>\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Add Recipe'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                        <FormButton\n                            type=\"button\"\n                            buttonText={'Cancel'}\n                            FormButton={FormButtons.Secondary}\n                            onClick={() => navigate(`/`)}\n                            disabled={false}\n                        />\n                    </Form>\n\n                )}\n            </Formik>\n        </StyledFormWrapper >\n    );\n}\n\nexport default AddRecipeForm;\n","import React from \"react\";\n\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport AddRecipeForm from \"../../templates/add-recipe-form/add-recipe-form.component\";\n\nconst AddRecipePage = () => (\n    <MainSection>\n        <PageTitle>Add Recipe</PageTitle>\n        <AddRecipeForm />\n    </MainSection>\n);\n\nexport default AddRecipePage;","import styled from 'styled-components';\n\nexport const DetailsTopWrapper = styled.div`\n    position: relative;\n    > h2 {\n        max-width: 60%;\n    }\n`;\n\nexport const MetaInfoTop = styled.div`\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    min-width: 200px;\n    padding: 1rem;\n`;\n\nexport const MetaInfoBottom = styled.div`\n    padding: 1rem;\n    color: ${(props) => props.theme.colors.pageForegroundColor1};\n`;\n\nexport const MetaInfoWrapper = styled.div`\n    @media (min-width: 595px) {\n        position: absolute;\n        top: 0;\n        right: 0;\n    }\n    color: #fff;\n    padding: 0 0 1rem 0;\n`;","import styled from \"styled-components\";\n\nexport const StyledListItem = styled.li`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${(props) => props.theme.colors.pageBackground2};\n`;\n\nexport const UserWrapper = styled.div`\n    display: flex;\n    justify-conent: flex-start;\n    align-items: center;\n`;","import styled from 'styled-components';\n\nexport const StyledAvatar = styled.span`\n    text-transform: capitalize;\n    background-color: ${(props) => props.theme.colors.pageHighLight2};\n    color: #fff;\n    font-size: 1.3em;\n    padding: 0.5rem;\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 1rem;\n`;","import React, { FC } from 'react';\n\nimport { StyledAvatar } from './user-avatar.styles';\n\ninterface Props {\n    name: string;\n}\n\n\nconst UserAvatar: FC<Props> = ({ name }) => (\n    <StyledAvatar>{name.slice(0, 1)}</StyledAvatar>\n);\n\nexport default UserAvatar;","import React, { FC } from \"react\";\n\nimport { StyledListItem, UserWrapper } from \"./comments-list-item.styles\";\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\n\ninterface Props {\n    item: { comment: string, user: string }\n}\n\nconst CommentItem: FC<Props> = ({ item }) => {\n\n    const { user, comment } = item;\n    return (\n        <StyledListItem>\n            <UserWrapper>\n                <UserAvatar name={user} />\n                <div>\n                    <div>{user}</div>\n                    <div>\n                        {comment}\n                    </div>\n                </div>\n            </UserWrapper>\n        </StyledListItem>\n    );\n}\n\nexport default CommentItem;","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n    text-align: right;\n    font-size: 14px;\n    float: right;\n`;","import React, { FC, useContext, useEffect, useState } from 'react';\n\nimport { StyledDiv } from './recipe-content-owner.styles';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\ninterface Props {\n    userId: string;\n    shared: boolean;\n}\n\nconst RecipeContentOwner: FC<Props> = ({ userId, shared }) => {\n    const [user, setUser] = useState<iUserItem | null>(null);\n\n    const { userItems } = useContext(UsersContext);\n    const action = shared ? 'Shared by' : 'Posted by';\n\n    useEffect(() => {\n        const findUser = userItems.find(u => u.id === userId);\n\n        if (findUser) {\n            setUser(findUser);\n        }\n    }, [userItems])\n\n    return (\n        <StyledDiv>\n            <span>{action} {user?.name || 'admin'}</span>\n        </StyledDiv>\n    );\n}\n\nexport default RecipeContentOwner;","import styled from \"styled-components\";\n\nexport const StyledDetailsDiv = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledH4 = styled.h4`\n    font-size: 1.25rem;\n    margin: 0.5em 0;\n    color: ${(props) => props.theme.colors.pageForeground1};\n`;\n\nexport const StyledList = styled.ul`\n    list-style: disc;\n`;\n\nexport const StyledListItem = styled.li`\n    list-style: outside;\n    margin: 0.75em 0 0.75em 2em;\n    color: ${(props) => props.theme.colors.pageForeground1};\n    &::marker {\n        color: ${(props) => props.theme.colors.navBarBackground};\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground2};\n    margin-bottom: 0.5rem;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        overflow: hidden;\n    `}\n`;\n\n\n\n\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useToasts } from 'react-toast-notifications';\n\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { StyledFormWrapper, StyledAccordionContent } from './add-comment.styles';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { addRecipeComment } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n    handleSubmit: (recipe: iRecipe) => void;\n}\n\ninterface Values {\n    comment: string;\n    user: string;\n    userId: string;\n}\n\nconst AddCommentForm: FC<Props> = ({ recipeId, handleSubmit }) => {\n    const { addToast } = useToasts();\n\n    const { token, user } = useContext(AuthContext);\n\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [showForm, setShowForm] = useState(false);\n\n    useEffect(() => {\n        if (user) {\n            setFormValuesInitial({\n                user: user.name,\n                comment: '',\n                userId: user.userId\n            })\n        }\n    }, [user, setFormValuesInitial]);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n\n    return (\n        <React.Fragment>\n            <AccordionToggle\n                toggleHandler={() => toggleForm()}\n                isOpen={showForm}\n                buttonText=\"Add Comment\"\n                spacing={false}\n            />\n            {\n                showForm && (<StyledAccordionContent Collapsed={showForm ? 'expanded' : 'collapsed'}>\n                    <StyledFormWrapper>\n                        {\n                            formValuesInitial && (\n                                <Formik\n                                    initialValues={formValuesInitial}\n                                    onSubmit={(\n                                        values: Values,\n                                        { setSubmitting }: FormikHelpers<Values>\n                                    ) => {\n                                        addRecipeComment(values, recipeId || '', token).then((resp) => {\n                                            setSubmitting(false);\n                                            handleSubmit(resp);\n                                            setShowForm(false);\n                                        }).catch((err) => {\n                                            addToast(\n                                                `Error: ${err.message}`,\n                                                {\n                                                    appearance: 'error',\n                                                    autoDismiss: false\n                                                }\n                                            );\n                                        })\n                                    }}\n                                >\n                                    {({ values, resetForm, isValid, dirty }) => (\n                                        <Form>\n\n                                            <RecipeTextField\n                                                id=\"comment\"\n                                                name=\"comment\"\n                                                placeholder=\"Add a comment\"\n                                                required\n                                            />\n\n                                            <FormButton\n                                                type=\"submit\"\n                                                buttonText={'Ok'}\n                                                FormButton={FormButtons.Primary}\n                                                disabled={!dirty || !isValid}\n                                            />\n                                        </Form>\n                                    )}\n                                </Formik>\n                            )\n                        }\n                    </StyledFormWrapper>\n                </StyledAccordionContent>)\n            }\n        </React.Fragment>\n    );\n}\n\nexport default AddCommentForm;\n","import React, { FC, useEffect, useContext, useState } from \"react\";\n\nimport CommentItem from '../../atoms/comments-list-item/comments-list-item.component';\nimport RecipeContentOwner from '../../atoms/recipe-content-owner/recipe-content-owner.component';\nimport { StyledDetailsDiv, StyledH4, StyledListItem, StyledList, StyledHRule } from './recipe-view-details.styles';\nimport { RecipesContext } from \"../../../providers/recipes/recipes.provider\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport AddCommentForm from \"../../../templates/add-comment/add-comment.component\";\nimport { iRecipe } from \"../../../interfaces/recipe/recipe.interface\";\n\ninterface Props {\n    recipe?: iRecipe;\n    id?: string;\n}\n\nconst RecipeViewDetails: FC<Props> = ({ id }) => {\n\n    const { recipeItems, editRecipe } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [recipe, setRecipe] = useState<iRecipe | undefined | null>(undefined);\n\n    const onCommentSubmit = (recipe: iRecipe) => {\n        editRecipe(recipeItems, recipe);\n        setRecipe(recipe);\n    }\n\n    useEffect(() => {\n        const tempRecipe = recipeItems.find(r => r._id === id);\n        if (tempRecipe) {\n            setRecipe(tempRecipe);\n        } else {\n            setRecipe(null);\n        }\n    }, [recipeItems])\n\n    if (!recipe) {\n        return (\n            <StyledDetailsDiv>\n                <p>No recipe found</p>\n            </StyledDetailsDiv>\n        )\n    }\n\n    return (\n        <StyledDetailsDiv>\n            <StyledH4>Ingredients</StyledH4>\n            <StyledList>\n                {\n                    recipe.ingredients?.map((item, key) => (\n                        <StyledListItem key={key}>{item}</StyledListItem>\n                    ))\n                }\n            </StyledList>\n            <StyledH4>Steps</StyledH4>\n            <ul>\n                {\n                    recipe.steps?.map((item, key) => (<StyledListItem key={key}>{item}</StyledListItem>))\n                }\n            </ul>\n            <StyledHRule />\n            <ul>\n                {\n                    recipe.comments?.map((item, key) => (\n                        <CommentItem key={key} item={item} />\n                    ))\n                }\n            </ul>\n            <RecipeContentOwner shared={recipe.shared} userId={recipe.user_id} />\n            {\n                user !== null && (\n                    <AddCommentForm recipeId={id} handleSubmit={onCommentSubmit} />\n                )\n            }\n        </StyledDetailsDiv>\n    );\n}\n\nexport default RecipeViewDetails;","import styled from 'styled-components';\nimport { Dialog } from '@material-ui/core';\n\n\nexport const StyledConfirmButton = styled.button`\n    color: #fff;\n    border: 0;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledCancelButton = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n`;\n\nexport const StyledDialog = styled(Dialog)`\n    .MuiPaper-root {\n        border: 1px solid ${props => props.theme.colors.pageBorderColor1};\n        border-radius: 0px;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        color: ${props => props.theme.colors.pageHighLight2}\n    }\n    \n    .MuiDialogContentText-root {\n        \n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n","import React, { FC } from 'react';\n\nimport { DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\n\nimport { StyledDialog, StyledCancelButton, StyledConfirmButton } from './confirm-dialog.styles';\n\ninterface Props {\n    title: string;\n    confirmText: string;\n    open: boolean;\n    handleCancel: () => void;\n    handleConfirm: () => void;\n}\n\nexport const ConfirmDialog: FC<Props> = ({ title, confirmText, handleCancel, handleConfirm, open }) => {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleCancel}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {confirmText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <StyledCancelButton onClick={handleCancel}>No</StyledCancelButton>\n                <StyledConfirmButton onClick={handleConfirm} autoFocus>Yes</StyledConfirmButton>\n            </DialogActions>\n        </StyledDialog>\n    );\n}\n\nexport default ConfirmDialog;\n","import styled from 'styled-components';\nimport { Delete, Edit, Share, Print, Favorite, FavoriteBorderOutlined } from '@material-ui/icons';\n\nexport const StyledTextarea = styled.textarea`\n    width: 1px;\n    height: 1px;\n    margin: 0;\n    visibility: hidden;\n`;\n\nexport const StyledFavoriteIcon = styled(Favorite)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledFavoriteOutlineIcon = styled(FavoriteBorderOutlined)`\n    font-size: 1.5rem !important;\n`;\n\n\nexport const StyledEditIcon = styled(Edit)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledDeleteIcon = styled(Delete)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledShareIcon = styled(Share)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledPrintIcon = styled(Print)`\n    font-size: 1.5rem !important;\n`;\n\nexport const StyledRecipeActionBar = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`;\n\nexport const StyledButton = styled.button`\n    opacity: 0.5;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    transition: opacity ease-in-out 300ms;\n    cursor: pointer;\n    background-color: transparent;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    margin: 0 1rem 0 0;\n    &:last-child {\n        margin: 0;\n    }\n    &:hover {\n        transition: opacity ease-in-out 300ms;\n        opacity: 1;\n    }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { useToasts } from 'react-toast-notifications';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\nimport { removeRecipe, addFavorite, removeFavorite } from '../../../services/recipes/recipes.services';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nimport {\n    StyledDeleteIcon,\n    StyledEditIcon,\n    StyledPrintIcon,\n    StyledShareIcon,\n    StyledRecipeActionBar,\n    StyledButton,\n    StyledTextarea,\n    StyledFavoriteOutlineIcon,\n    StyledFavoriteIcon\n} from './recipe-action-bar.styles';\n\nconst RecicipeActionBar = () => {\n    let { id } = useParams();\n    let navigate = useNavigate();\n    const { addToast } = useToasts();\n    const { recipeItems, deleteRecipe, setSpinner, setCount,\n        editRecipe } = useContext(RecipesContext);\n    const { token, isLoggedIn, user } = useContext(AuthContext);\n\n    const [favDisabled, setFavDisabled] = useState<boolean>(false);\n    const [isFav, setIsFav] = useState<boolean>(false);\n    const [recipe, setRecipe] = useState<iRecipe | undefined>(undefined);\n    const [open, setOpen] = useState<boolean>(false);\n    const [copied, setCopied] = useState<boolean>(false);\n    const [value, setValue] = useState<string>('');\n    const [isOwner, setIsOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        const recipe = recipeItems.find(r => r._id === id);\n        const base = process.env.REACT_APP_SHARE_URL;\n\n        if (recipe) {\n            setRecipe(recipe);\n            setValue(`${base}/recipes/${recipe._id}`)\n        }\n    }, [recipeItems, id]);\n\n    useEffect(() => {\n        if (recipe && user && recipe.user_id === user.userId) {\n            setIsOwner(true);\n        }\n    }, [user, recipe]);\n\n    useEffect(() => {\n        if (recipe?.favorites) {\n            let tempFav = recipe.favorites.find(f => f === user?.userId);\n            if (tempFav) {\n                setIsFav(true)\n            }\n        }\n\n    }, [recipe, user]);\n\n    const handleDelete = () => {\n        setSpinner(true);\n        if (recipe) {\n            removeRecipe(recipe, token).then((resp) => {\n                deleteRecipe(recipeItems, recipe);\n                setCount(recipeItems.length);\n                setSpinner(false);\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                navigate('/');\n\n            }).catch((err) => {\n                setSpinner(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleFavorite = () => {\n        setFavDisabled(true);\n        if (isFav) {\n            removeFavorite(id, user?.userId, token).then((resp) => {\n\n                if (resp.message === 'favorite removed') {\n                    setIsFav(false);\n\n                    if (user && recipe) {\n                        let tempRecipe: iRecipe = recipe;\n                        if (!tempRecipe.favorites) {\n                            tempRecipe.favorites = [];\n                        }\n                        let idx = tempRecipe?.favorites.findIndex(item => item = user.userId);\n                        tempRecipe.favorites?.splice(idx, 1);\n                        setIsFav(false);\n                        editRecipe(recipeItems, tempRecipe);\n                    }\n                }\n                setFavDisabled(false);\n            });\n        } else {\n            addFavorite(id, user?.userId, token).then((resp) => {\n\n                if (resp.message === 'favorite added') {\n                    if (user && recipe) {\n                        let tempRecipe: iRecipe = recipe;\n                        tempRecipe.favorites?.push(user?.userId);\n                        setIsFav(true);\n                        editRecipe(recipeItems, tempRecipe);\n                    }\n                }\n                setFavDisabled(false);\n            });\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <StyledRecipeActionBar>\n\n                {\n                    isLoggedIn && (\n                        <React.Fragment>\n                            {\n                                isFav ? (\n                                    <StyledButton title=\"Remove Favorite\" disabled={favDisabled} onClick={() => handleFavorite()}>\n                                        <StyledFavoriteIcon />\n                                    </StyledButton>\n                                ) : (\n                                    <StyledButton title=\"Add Favorite\" disabled={favDisabled} onClick={() => handleFavorite()}>\n                                        <StyledFavoriteOutlineIcon />\n                                    </StyledButton>\n                                )\n                            }\n                            {\n                                isOwner && (\n                                    <React.Fragment>\n                                        <StyledButton title=\"Delete\" onClick={() => handleClickOpen()}>\n                                            <StyledDeleteIcon />\n                                        </StyledButton>\n\n                                        <StyledButton title=\"Edit\" onClick={() => navigate(`/edit-recipe/${id}`)}>\n                                            <StyledEditIcon />\n                                        </StyledButton>\n                                    </React.Fragment>\n                                )\n                            }\n                        </React.Fragment>\n                    )\n                }\n\n                <CopyToClipboard\n                    onCopy={() => setCopied(true)}\n                    text={value}\n                >\n                    <StyledButton title={copied ? `Copied URL` : 'Share'}>\n                        <StyledShareIcon />\n                    </StyledButton>\n                </CopyToClipboard>\n\n                <StyledButton title=\"Print\" onClick={() => window.print()}>\n                    <StyledPrintIcon />\n                </StyledButton>\n            </StyledRecipeActionBar>\n            <ConfirmDialog\n                open={open}\n                title={\"Are you sure?\"}\n                confirmText={`Delete ${recipe?.r_name} recipe?`}\n                handleCancel={handleClose}\n                handleConfirm={handleDelete}\n            />\n            <StyledTextarea\n                value={value}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    setCopied(false);\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default RecicipeActionBar;\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { DetailsTopWrapper, MetaInfoWrapper, MetaInfoBottom, MetaInfoTop } from './view-recipe.styles';\nimport RecipeViewDetails from '../../components/molecules/recipe-view-details/recipe-view-details.component';\nimport RecipeRating from '../../components/atoms/rating/rating.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport RecipeActionBar from '../../components/atoms/recipe-action-bar/recipe-action-bar.component';\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\nimport { SpinnerOuter } from \"../../components/molecules/spinner/spinner.styles\";\n\nconst RecipeDetailPage = () => {\n    const { id } = useParams();\n\n    const { recipeItems, isLoading, setSpinner } = useContext(RecipesContext);\n    const recipe = recipeItems.find(r => r._id === id);\n\n    return (\n        <MainSection>\n            {\n                isLoading && (\n                    <React.Fragment>\n                        <PageTitle>Recipe Details</PageTitle>\n                        <SpinnerOuter>\n                            <Spinner />\n                        </SpinnerOuter>\n                    </React.Fragment>\n                )\n            }\n            {\n                !isLoading && (\n                    <React.Fragment>\n                        <DetailsTopWrapper>\n                            <PageTitle>{recipe?.r_name} </PageTitle>\n                            <MetaInfoWrapper>\n                                <MetaInfoTop>\n                                    <RecipeRating rating={recipe?.rating} />\n                                    <span>Cateory: {recipe?.category}</span>\n                                </MetaInfoTop>\n                                <MetaInfoBottom>\n                                    <RecipeActionBar />\n                                </MetaInfoBottom>\n                            </MetaInfoWrapper>\n                        </DetailsTopWrapper>\n                        <RecipeViewDetails recipe={recipe} id={id} />\n                    </React.Fragment>\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default RecipeDetailPage;","import styled from 'styled-components';\n\nimport {Field} from 'formik';\n\ninterface iRequiredLabel {\n    Required?: 'required'\n}\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledInputWrapper = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const InputButtonsWrap = styled.div`\n    display: flex;\n    margin-left: 1rem;\n`\n\nexport const FieldArrayItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledAddInputBtn = styled.button`\n    color: #fff;\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.navBarBackground};\n    cursor: pointer;\n`;\n\nexport const StyledSubtractInputBtn = styled.button`\n    color: ${props => props.theme.colors.pageForeground1};\n    border: 0;\n    width: 2rem;\n    height: 2rem;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${props => props.theme.colors.pageBackground3};\n    cursor: pointer;\n`;\n\ninterface iStyledAccordionContent {\n    Collapsed: 'expanded' | 'collapsed';\n}\n\nexport const StyledAccordionContent = styled.div<iStyledAccordionContent>`\n    height: auto;\n\n    @media (min-width: 576px) {\n        padding: 1.5rem;\n        border: 1px solid ${props => props.theme.colors.pageBackground3};\n    }\n\n    ${props => props.Collapsed === 'collapsed' && `\n        height: 0;\n        padding: 0 !important;\n        overflow: hidden;\n        border: none !important;\n    `}\n`;\n\nexport const StyledLabel = styled.label<iRequiredLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n        content: '${props => props.Required ? '* ' : ''}';\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n    }\n`;\n\nexport const StyledInput = styled(Field)`\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n    color: ${props => props.theme.colors.pageForeground1};\n    background-color: ${props => props.theme.colors.pageBackground1};\n    font-size: 1rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: .25rem .5rem;\n    &:focus {\n        border: 2px solid ${props => props.theme.colors.navBarBackground};\n        outline: 0;\n    }\n    &:disabled {\n        opacity: 0.7;\n        border: none;\n        padding: 0;\n        margin-top: -0.5rem;\n    }\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;\n\nexport const StyledFieldArrayEmptyButton = styled.button`\n    background-color: ${props => props.theme.colors.pageBackground3};\n    border: 0;\n    font-size: 1rem;\n    color: ${props => props.theme.colors.pageForeground1};\n    padding: 0.5rem 1rem;\n    margin: 1.5rem 0;\n    cursor: pointer;\n`;\n\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Formik, FieldArray, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport SelectOptionField from '../../components/atoms/select-option-field/select-option-field.component';\nimport CheckBoxField from '../../components/atoms/checkbox-field/checkbox-field.component';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport {\n    StyledFormWrapper,\n    StyledAddInputBtn,\n    StyledSubtractInputBtn,\n    StyledInputWrapper,\n    StyledInput,\n    StyledLabel,\n    InputButtonsWrap,\n    FieldArrayItem,\n    StyledHRule,\n    StyledFieldArrayEmptyButton,\n    StyledAccordionContent\n} from './edit-recipe-form.styles';\nimport { iRecipe, iRecipeComment } from '../../interfaces/recipe/recipe.interface';\nimport { updateRecipe } from '../../services/recipes/recipes.services';\nimport AccordionToggle from '../../components/atoms/accordion-toggle/accordion-toggle.component';\n\ninterface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    recipeId?: string;\n}\n\ninterface Values {\n    _id?: string;\n    user_id: string;\n    user: string;\n    r_name: string;\n    cat_id?: string;\n    shared: boolean;\n    rating: number;\n    category?: string;\n    ingredients?: string[];\n    steps?: string[];\n    comments?: iRecipeComment[];\n}\n\nconst EditRecipeForm: FC<Props> = ({ recipeId }) => {\n    const { addToast } = useToasts();\n    const { recipeItems, getCategoryTags, editRecipe } = useContext(RecipesContext);\n    const { token, user } = useContext(AuthContext);\n    const [catData, setCatData] = useState<iKeyValuePair[]>([]);\n    const [currentRecipeItems, setCurrentRecipeItems] = useState<iRecipe[]>(recipeItems);\n    const [formValuesInitial, setFormValuesInitial] = useState<Values | undefined>(undefined);\n    const [isOpenIngredients, setIsOpenIngredients] = useState<boolean>(true);\n    const [isOpenSteps, setIsOpenSteps] = useState<boolean>(true);\n    const [isOpenComments, setIsOpenComments] = useState<boolean>(true);\n\n    const handleToggleIngredients = () => {\n        setIsOpenIngredients(!isOpenIngredients);\n    };\n\n    const handleToggleSteps = () => {\n        setIsOpenSteps(!isOpenSteps);\n    };\n\n    const handleToggleComments = () => {\n        setIsOpenComments(!isOpenComments);\n    };\n\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        const uniques = getCategoryTags(recipeItems);\n        const data = uniques.map((item: iRecipe) => {\n            const { cat_id, category } = item;\n            const strId = String(cat_id);\n            return { id: strId, name: category }\n        });\n        setCatData(data);\n\n        const foundRecipe = recipeItems.find(r => r._id && r._id === recipeId);\n        if (foundRecipe) {\n\n            setFormValuesInitial({\n                _id: foundRecipe._id || '',\n                user_id: foundRecipe.user_id,\n                user: foundRecipe.user_id,\n                r_name: foundRecipe.r_name,\n                shared: foundRecipe.shared,\n                rating: foundRecipe.rating,\n                cat_id: foundRecipe.cat_id.toString(),\n                category: foundRecipe.category,\n                ingredients: foundRecipe.ingredients || [],\n                steps: foundRecipe.steps || [],\n                comments: foundRecipe.comments || []\n            })\n        }\n\n    }, [recipeItems, getCategoryTags, recipeId]);\n\n    return (\n        <StyledFormWrapper>\n            {\n                formValuesInitial && (\n                    <Formik\n                        initialValues={formValuesInitial}\n                        onSubmit={(\n                            values: Values,\n                            { setSubmitting }: FormikHelpers<Values>\n                        ) => {\n\n                            const catName = catData.find(i => i.id === values.cat_id);\n                            const cat_id = Number(values.cat_id);\n                            const vals = {\n                                ...values,\n                                category: catName?.name || '',\n                                cat_id: cat_id\n                            }\n\n                            updateRecipe(vals, token).then((resp) => {\n                                addToast(\n                                    'Success',\n                                    {\n                                        appearance: 'success',\n                                        autoDismiss: true\n                                    }\n                                );\n\n                                setCurrentRecipeItems(editRecipe(currentRecipeItems, resp));\n                                setSubmitting(false);\n                                navigate('/')\n                            }).catch((err) => {\n                                addToast(\n                                    `Error: ${err.message}`,\n                                    {\n                                        appearance: 'error',\n                                        autoDismiss: false\n                                    }\n                                );\n                            })\n                        }}\n                    >\n                        {({ values, resetForm, isValid, dirty }) => (\n                            <Form>\n\n                                <RecipeTextField\n                                    id=\"r_name\"\n                                    label=\"Recipe Name\"\n                                    name=\"r_name\"\n                                    placeholder=\"Ex: Chocolate Cake\"\n                                    required\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"cat_id\"\n                                    name=\"cat_id\"\n                                    required={true}\n                                    label=\"Category\"\n                                    defaultOptionText=\"Select Recipe Category\"\n                                    optionData={catData}\n                                />\n\n                                <SelectOptionField\n                                    as=\"select\"\n                                    id=\"rating\"\n                                    name=\"rating\"\n                                    required={true}\n                                    label=\"Rating\"\n                                    defaultOptionText=\"Ex: Four Stars\"\n                                    optionData={[\n                                        { id: '1', name: 'One Star' },\n                                        { id: '2', name: 'Two Stars' },\n                                        { id: '3', name: 'Three Stars' },\n                                        { id: '4', name: 'Four Stars' }\n                                    ]}\n                                />\n\n                                <CheckBoxField\n                                    id=\"shared\"\n                                    name=\"shared\"\n                                    label=\"Share Recipe\"\n                                />\n\n                                <div>\n                                    <FieldArray\n                                        name=\"ingredients\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.ingredients && values.ingredients.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Ingredients'\n                                                            isOpen={isOpenIngredients}\n                                                            toggleHandler={() => handleToggleIngredients()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={!isOpenIngredients ? 'collapsed' : 'expanded'}> {\n                                                            values.ingredients.map((item, index) => (\n                                                                <StyledInputWrapper key={index}>\n                                                                    <StyledLabel Required={'required'}>Ingredient {index + 1}</StyledLabel>\n                                                                    <FieldArrayItem>\n                                                                        <StyledInput required name={`ingredients.${index}`} placeholder=\"Ex: 1 cup milk\" />\n                                                                        <InputButtonsWrap>\n                                                                            <StyledSubtractInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.remove(index)}\n                                                                            >\n                                                                                -\n                                                                            </StyledSubtractInputBtn>\n                                                                            <StyledAddInputBtn\n                                                                                type=\"button\"\n                                                                                onClick={() => arrayHelpers.insert(index, '')}\n                                                                            >\n                                                                                +\n                                                                            </StyledAddInputBtn>\n                                                                        </InputButtonsWrap>\n                                                                    </FieldArrayItem>\n                                                                </StyledInputWrapper>\n                                                            ))\n                                                        }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Ingredients\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"steps\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.steps && values.steps.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Steps'\n                                                            isOpen={isOpenSteps}\n                                                            toggleHandler={() => handleToggleSteps()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenSteps ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.steps.map((item, index) => (\n                                                                    <StyledInputWrapper key={index}>\n                                                                        <StyledLabel Required={'required'}>Step {index + 1}</StyledLabel>\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput required name={`steps.${index}`} placeholder=\"Add step\" />\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(index, '')}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                                        Add Steps\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n\n                                <div>\n                                    <FieldArray\n                                        name=\"comments\"\n                                        render={arrayHelpers => (\n                                            <div>\n                                                {values.comments && values.comments.length > 0 ? (\n                                                    <React.Fragment>\n                                                        <AccordionToggle\n                                                            buttonText='Comments'\n                                                            isOpen={isOpenComments}\n                                                            toggleHandler={() => handleToggleComments()}\n                                                        />\n                                                        <StyledAccordionContent Collapsed={isOpenComments ? 'expanded' : 'collapsed'}>\n                                                            {\n                                                                values.comments.map((item, index) => (\n\n                                                                    <StyledInputWrapper key={index}>\n                                                                        {\n                                                                            item.userId !== user?.userId ? (\n                                                                                <StyledLabel>Comment ({item.user})</StyledLabel>\n                                                                            ) : (\n                                                                                <StyledLabel Required={'required'}>Comment {index + 1}</StyledLabel>\n                                                                            )\n                                                                        }\n                                                                        <FieldArrayItem>\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.user`} />\n                                                                            <StyledInput type=\"hidden\" name={`comments.${index}.userId`} />\n                                                                            {\n                                                                                item.userId !== user?.userId ? (\n                                                                                    <StyledInput disabled name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                ) : (\n                                                                                    <StyledInput name={`comments.${index}.comment`} placeholder=\"Add comment\" />\n                                                                                )\n                                                                            }\n                                                                            <InputButtonsWrap>\n                                                                                <StyledSubtractInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.remove(index)}\n                                                                                >\n                                                                                    -\n                                                                                </StyledSubtractInputBtn>\n                                                                                <StyledAddInputBtn\n                                                                                    type=\"button\"\n                                                                                    onClick={() => arrayHelpers.insert(\n                                                                                        index, { user: user?.name, comment: '', userId: user?.userId }\n                                                                                    )}\n                                                                                >\n                                                                                    +\n                                                                                </StyledAddInputBtn>\n                                                                            </InputButtonsWrap>\n                                                                        </FieldArrayItem>\n                                                                    </StyledInputWrapper>\n                                                                ))\n                                                            }\n                                                        </StyledAccordionContent>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <StyledFieldArrayEmptyButton type=\"button\" onClick={() =>\n                                                        arrayHelpers.push({ user: user?.name, comment: '', userId: user?.userId })}>\n                                                        Add comment\n                                                    </StyledFieldArrayEmptyButton>\n                                                )}\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <StyledHRule />\n                                <FormButton\n                                    type=\"submit\"\n                                    buttonText={'Update Recipe'}\n                                    FormButton={FormButtons.Primary}\n                                    disabled={!dirty || !isValid}\n                                />\n                                <FormButton\n                                    type=\"button\"\n                                    buttonText={'Cancel'}\n                                    FormButton={FormButtons.Secondary}\n                                    onClick={() => navigate(`/recipes/${values._id}`)}\n                                />\n                            </Form>\n\n                        )}\n                    </Formik>\n                )\n            }\n        </StyledFormWrapper >\n    );\n}\n\nexport default EditRecipeForm;\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport Spinner from '../../components/molecules/spinner/spinner.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { SpinnerOuter } from '../../components/molecules/spinner/spinner.styles';\nimport EditRecipeForm from '../../templates/edit-recipe-form/edit-recipe-form.component';\n\n\nconst EditRecipePage = () => {\n    const { id } = useParams();\n\n    const { isLoading } = useContext(RecipesContext);\n\n    return (\n        <MainSection>\n            <PageTitle>Edit Recipe</PageTitle>\n            {\n                isLoading && <SpinnerOuter><Spinner /></SpinnerOuter>\n            }\n            {\n                !isLoading && <EditRecipeForm recipeId={id}></EditRecipeForm>\n            }\n        </MainSection>\n    );\n}\n\nexport default EditRecipePage;","import styled from 'styled-components';\n\n\nexport const SpinnerWrapper = styled.div`\n    min-height: 75vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport PageTitle from \"../../components/atoms/page-title/page-title.component\";\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from \"../../providers/auth/auth.provider\";\nimport { iRecipe } from \"../../interfaces/recipe/recipe.interface\";\nimport { SpinnerWrapper } from './recipes-by-category.styles';\nimport { MainSection } from \"../../components/atoms/main-section/main-section.component\";\nimport Spinner from \"../../components/molecules/spinner/spinner.component\";\n\nconst RecipesByCategory = () => {\n    const { recipeItems, isLoading } = useContext(RecipesContext);\n    const { user } = useContext(AuthContext);\n    const [filtered, setFiltered] = useState<iRecipe[]>([]);\n    const [catName, setCatName] = useState<string>('');\n    const { cat_id } = useParams();\n    const param_id = cat_id ? parseInt(cat_id) : -1;\n\n    useEffect(() => {\n        if (!isLoading && param_id) {\n            const filterList: iRecipe[] = recipeItems.filter((r) => r.cat_id === param_id && (r.shared || r.user_id === user?.userId));\n\n            if (filterList.length > 0) {\n                setFiltered(filterList);\n                setCatName(filterList[0].category);\n            }\n        }\n    }, [recipeItems, isLoading, param_id]);\n\n    return (\n        <MainSection>\n            <PageTitle>{catName}</PageTitle>\n            <RecipesCategoryCardList recipes={filtered} />\n            {\n                isLoading && (\n                    <SpinnerWrapper>\n                        <Spinner />\n                    </SpinnerWrapper>\n                )\n            }\n        </MainSection>\n    )\n}\n\nexport default RecipesByCategory;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import axios from 'axios';\nimport { iUser } from '../../interfaces/user/user.interface';\n\ntype iPost = {\n    email: string;\n    password: string;\n}\n\ntype iSignUp = {\n    name: string;\n    password: string;\n    email: string;\n}\n\nconst baseURL = process.env.REACT_APP_BASEURL;\nconst endpoint = process.env.REACT_APP_USER_LOGIN;\nconst signupEndpoint = process.env.REACT_APP_USER_SIGNIN;\n\nexport const logInUser = async ({email, password}: iPost) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${endpoint}`, {email, password});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}\n\nexport const signUpUser = async ({name, email, password}: iSignUp) => {\n\n    try {\n        const resp = await axios.post<iUser>(`${baseURL}${signupEndpoint}`, {email, password, name});\n        return resp.data;\n    } catch (err) {\n        throw(err)\n    }\n}","import React, { useContext } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-in-form.styles';\nimport { logInUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n}\n\nconst SignInForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext)\n\n    const formValuesInitial = {\n        email: '',\n        password: ''\n    }\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password } = values;\n                    logInUser({ email, password }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign In'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignInForm;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledSignUpContainer = styled.p`\n    margin: 1rem 0;\n    color: ${props => props.theme.colors.pageForeground1};\n`;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignInForm from '../../templates/sign-in-form/sign-in-form.component';\nimport { StyledNavLink, StyledSignUpContainer } from './sign-in-sign-up.styles';\n\nconst SignInSignUpPage = () => {\n    return (\n        <MainSection>\n            <PageTitle>Sign in</PageTitle>\n            <SignInForm />\n            <StyledSignUpContainer>\n                New to recipes?&nbsp;\n                <StyledNavLink to=\"/sign-up\">Sign up</StyledNavLink>\n            </StyledSignUpContainer>\n        </MainSection>\n    )\n}\n\nexport default SignInSignUpPage;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n`;\n\nexport const StyledHRule = styled.hr`\n    border: 1px solid ${(props) => props.theme.colors.navBarBackground};\n    margin: 1.5rem 0;\n`;","import React, { useContext, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport RecipeTextField from '../../components/atoms/text-field/text-field.component';\nimport FormButton, { FormButtons } from '../../components/atoms/form-button/form-button.component';\nimport { StyledFormWrapper, StyledHRule } from './sign-up-form.styles';\nimport { signUpUser } from '../../services/auth/auth.services';\n\ninterface Values {\n    email: string;\n    password: string;\n    name: string;\n}\n\nconst SignUpForm = () => {\n    const { addToast } = useToasts();\n    const navigate = useNavigate();\n    const { addUserItem, userItems } = useContext(UsersContext);\n    const { setLogin, setUserToken, setUserObject, setUserExpiration, setUserAuth } = useContext(AuthContext);\n    const [isVisible, setIsVisable] = useState(false);\n\n    const formValuesInitial = {\n        email: '',\n        password: '',\n        name: ''\n    }\n\n    const onVisibilityChange = () => {\n        setIsVisable(!isVisible);\n    };\n\n    return (\n        <StyledFormWrapper>\n            <Formik\n                initialValues={formValuesInitial}\n                onSubmit={(\n                    values: Values,\n                    { setSubmitting }: FormikHelpers<Values>\n                ) => {\n                    const { email, password, name } = values;\n                    signUpUser({ email, password, name }).then((resp) => {\n                        const { token, email, userId, name } = resp;\n                        const expires = new Date(new Date().getTime() + 1000 * 60 * 60);\n                        const userToAdd: iUserItem = {\n                            _id: userId,\n                            id: userId,\n                            email: email,\n                            name: name\n                        };\n                        setUserToken(token);\n                        setLogin(true);\n                        setUserObject({ token, email, userId, name });\n                        setUserExpiration(Number(expires));\n                        setUserAuth(resp, Number(expires));\n                        addUserItem(userToAdd, userItems);\n                        navigate('/')\n                    }).catch((err) => {\n                        addToast(\n                            `Error: ${err.message}`,\n                            {\n                                appearance: 'error',\n                                autoDismiss: false\n                            }\n                        );\n                    });\n                }}\n            >\n                {({ values, resetForm, dirty, isValid }) => (\n                    <Form>\n\n                        <RecipeTextField\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Ex: John\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <RecipeTextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type={isVisible ? 'text' : 'password'}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            isVisible={isVisible}\n                            onVisibilityChange={() => onVisibilityChange()}\n                            required\n                        />\n                        <StyledHRule />\n                        <FormButton\n                            type=\"submit\"\n                            buttonText={'Sign Up'}\n                            FormButton={FormButtons.Primary}\n                            disabled={!dirty || !isValid}\n                        />\n                    </Form>\n                )}\n\n            </Formik>\n        </StyledFormWrapper>\n    )\n};\n\nexport default SignUpForm;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component'\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport SignUpForm from '../../templates/sign-up-form/sign-up-form.component';\n\nconst SignUpPage = () => (\n    <MainSection>\n        <PageTitle>Sign Up</PageTitle>\n        <SignUpForm />\n    </MainSection>\n);\n\nexport default SignUpPage;","import styled from 'styled-components';\n\nimport {NavLink} from 'react-router-dom';\n\nexport const StyledUserCard = styled.div`\n    display: flex;\n    padding: 1rem;\n    border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNoSharedRecipes = styled.div`\n    color: ${props => props.theme.colors.pageBorderColor1};\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n","import React, { FC } from 'react';\nimport { iRecipe } from '../../../interfaces/recipe/recipe.interface';\n\nimport UserAvatar from '../../atoms/user-avatar/user-avatar.component';\nimport { StyledUserCard, StyledNavLink, StyledNoSharedRecipes } from './user-card.styles';\n\ninterface Props {\n    name: string;\n    id: string;\n    recipes: string[];\n    isContentOwner: boolean;\n}\n\n\nconst UserCard: FC<Props> = ({ name, id, recipes, isContentOwner }) => (\n    <li>\n        <StyledUserCard>\n            <UserAvatar name={name} />\n            <div>\n                <div>{name}</div>\n                {\n                    recipes.length === 0 && (<StyledNoSharedRecipes>no recipes</StyledNoSharedRecipes>)\n                }\n                {\n                    recipes.length !== 0 && !isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>shared {recipes.length} recipes</span>\n                                ) : (\n                                    <span>shared {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n                {\n                    recipes.length !== 0 && isContentOwner && (\n                        <StyledNavLink to={`/user-recipes/${id}`}>\n                            {\n                                recipes.length !== 1 ? (\n                                    <span>view {recipes.length} recipes </span>\n                                ) : (\n                                    <span>view {recipes.length} recipe</span>\n                                )\n                            }\n                        </StyledNavLink>\n                    )\n                }\n            </div>\n        </StyledUserCard>\n    </li>\n);\n\nexport default UserCard;\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const StyledUserCardList = styled.ul`\n    width: 100%;\n    margin: 1.5em 0 0 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(80vw, 1fr));\n    @media (min-width: 991px) {\n        grid-template-columns: repeat(auto-fit, minmax(23.75rem, 1fr));\n    }\n    grid-gap: 1.2rem;\n    overflow: hidden;\n    color: ${props => props.theme.colors.pageForeground1};\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { iUserItem } from '../../../interfaces/users/users.interface';\n\nimport UserCard from '../user-card/user-card.component';\nimport EmptyMesssage from '../../atoms/empty-message/empty-message.component';\nimport { StyledUserCardList } from './users-list.styles';\n\nconst UsersList = () => {\n    const { recipeItems } = useContext(RecipesContext);\n    const { userItems } = useContext(UsersContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [users, setUsers] = useState<iUserItem[]>([]);\n\n    useEffect(() => {\n        const usersWithRecipe = userItems.map(user => {\n            let recipes: string[] = [];\n            const isAuthUser = () => authUser && authUser.userId === user.id;\n            if (isAuthUser()) {\n                recipes = recipeItems.filter(\n                    r => r.user_id === user.id\n                ).map(r => r.r_name);\n            } else {\n                recipes = recipeItems.filter(\n                    r => r.shared === true && r.user_id === user.id\n                ).map(r => r.r_name);\n            }\n\n            return {\n                ...user,\n                recipes: recipes || []\n            }\n        })\n        setUsers(usersWithRecipe);\n    }, [userItems, authUser]);\n\n    return (\n        <React.Fragment>\n            {\n                users.length !== 0 ? (\n                    <StyledUserCardList>\n                        {\n                            users.map(({ name, id, recipes }, idx) => (\n                                <UserCard\n                                    key={idx}\n                                    name={name}\n                                    id={id}\n                                    isContentOwner={authUser !== null && authUser.userId === id}\n                                    recipes={recipes || []}\n                                />\n                            ))\n                        }\n                    </StyledUserCardList >\n                ) : (\n                    <EmptyMesssage msg={'There are no users.'} />\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default UsersList;","import React from 'react';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport UsersList from '../../components/molecules/users-list/users-list.component';\n\nconst UsersPage = () => (\n    <MainSection>\n        <PageTitle>Users </PageTitle>\n        <UsersList />\n    </MainSection>\n);\n\nexport default UsersPage;","import styled from 'styled-components';\n\nexport const StyledOuterDiv = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  line-height: 1.5em;\n  background-color: ${(props) => props.theme.colors.pageBackground1};\n  max-width: 100vw;\n  min-height: 100vh;\n  border-bottom: 1rem solid ${(props) => props.theme.colors.navBarBackground};\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport Restaurant from '@material-ui/icons/Restaurant';\n\nexport const StyledNavBrand = styled(Restaurant)`\n    font-size: 2.0rem !important;\n    margin-right: 0.5rem;\n    margin-left: 0.5rem;\n    padding: 0.25rem;\n    color: #fff;\n    flex: 0 0 1;\n    background-color: ${props => props.theme.colors.pageHighLight2};\n    border: 1px solid rgba(255,255,255, 0.75);\n    border-radius: 50%;\n`;\n\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledNavBrand } from './nav-brand.styles';\n\ninterface Props {\n    toggleClose: () => void;\n    isOpen: boolean;\n}\n\nconst NavBrand: FC<Props> = ({ toggleClose, isOpen }) => {\n    const handleClose = () => {\n        if (isOpen) {\n            toggleClose();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Link onClick={() => handleClose()} to='/'>\n                <StyledNavBrand />\n            </Link>\n        </React.Fragment>\n    )\n}\n\n\nexport default NavBrand;","import styled from 'styled-components';\n\nexport const StyledRightItemsWrapper = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledRightListItem = styled.li`\n    margin: 0;\n    > a {\n        color: #fff;\n        text-decoration: none;\n    }\n`;","import styled from 'styled-components';\n\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledBackdrop = styled.div<iStyledMenuOuter>`\n    background-color: rgba(0, 0, 0, 0.2);\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 19;\n    display: ${props => props.isOpen ? 'block' : 'none'};\n`;","import React, { FC } from 'react';\n\nimport { StyledBackdrop } from './backdrop.styles'\n\ntype Props = {\n    isOpen: boolean;\n    toggleClose: () => void;\n}\n\nconst Backdrop: FC<Props> = ({ isOpen, toggleClose }) => (\n    <StyledBackdrop isOpen={isOpen} onClick={() => toggleClose()} />\n)\n\nexport default Backdrop;","import styled from 'styled-components';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\ninterface iDropdownStyles {\n    isOpen: boolean;\n}\n\nexport const StyledAccountIcon = styled(AccountCircle)`\n    color: #fff;\n    font-size: 2rem !important;\n    margin-right: 0.25rem;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-size: inherit;\n    font-family: inherit;\n    color: #fff;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledDropdownContainer = styled.div<iDropdownStyles>`\n    position: absolute;\n    bottom: -76px;\n    width: 140px;\n    height: 65px;\n    background-color: ${props => props.theme.colors.pageBackground1};\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    color: ${props => props.theme.colors.pageForeground1};\n    right: 0;\n    z-index: 21;\n    box-sizing: border-box;\n    padding: 0.5rem 1.5rem;\n    display: ${props => props.isOpen ? 'flex': 'none'};\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledAnchor = styled.a`\n    cursor: pointer;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const StyledDropDownWrapper = styled.div`\n    display: flex;\n    position: relative;\n`;","import React, { useContext, useState } from 'react';\n\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport Backdrop from '../../atoms/backdrop/backdrop.component';\nimport {\n    StyledButton,\n    StyledAccountIcon,\n    StyledDropDownWrapper,\n    StyledDropdownContainer,\n    StyledAnchor\n} from './sign-out.styles';\n\n\nconst SignOutButton = () => {\n    const { setLogin, setUserToken, setUserObject, user, setUserAuth } = useContext(AuthContext);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    const handleSignOut = () => {\n        if (user) {\n            const expires = new Date(new Date().getTime());\n            setUserAuth(user, Number(expires));\n            setUserObject(null);\n        }\n        setLogin(false);\n        setUserToken(null);\n    };\n\n    const toggleExpanded = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <StyledDropDownWrapper>\n                <StyledButton onClick={() => toggleExpanded()}>\n                    <StyledAccountIcon />\n                    <span>{user?.name}</span>\n                </StyledButton>\n                <StyledDropdownContainer isOpen={isOpen}>\n                    <StyledAnchor onClick={() => handleSignOut()}>Sign out</StyledAnchor>\n                </StyledDropdownContainer>\n                <Backdrop isOpen={isOpen} toggleClose={() => toggleExpanded()} />\n            </StyledDropDownWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default SignOutButton;","import React, { FC } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { StyledRightItemsWrapper, StyledRightListItem } from './sign-in-out.styles';\nimport SignOutButton from \"../../atoms/sign-out/sign-out.component\";\n\ninterface Props {\n    isLoggedIn: boolean;\n}\n\nconst SignInSignOut: FC<Props> = ({ isLoggedIn }) => (\n    <StyledRightItemsWrapper>\n        <StyledRightListItem>\n            {\n                isLoggedIn ?\n                    (\n                        <SignOutButton />\n                    )\n                    :\n                    (\n                        <NavLink to=\"/sign-in\">sign in</NavLink>\n                    )\n            }\n        </StyledRightListItem>\n    </StyledRightItemsWrapper>\n)\n\nexport default SignInSignOut;","import styled from 'styled-components';\n\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledMenu = styled(Menu)`\n    font-size: 2.4rem !important;\n    color: #fff;\n    cursor: pointer;\n    border: 1px solid rgba(255,255,255, 0.1);\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n`","import React, { FC } from 'react';\n\nimport { StyledButton, StyledMenu } from './menu-toggle.styles';\n\ninterface Props {\n    toggleHandler: () => void;\n}\n\n\nconst MenuToggle: FC<Props> = ({ toggleHandler }) => {\n    return (\n        <StyledButton onClick={() => toggleHandler()}>\n            <StyledMenu />\n        </StyledButton>\n    )\n}\n\nexport default MenuToggle;\n\n","import styled from 'styled-components';\nimport Close from '@material-ui/icons/Close'\n\n\nexport const StyledClose = styled(Close)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    font-size: 2rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n`;","import React, { FC } from 'react';\n\nimport { StyledClose, StyledButton } from './close-button.styles';\n\n\ninterface Props {\n    closeHandler: () => void;\n}\n\n\nconst CloseButton: FC<Props> = ({ closeHandler }) => (\n    <StyledButton title=\"close\" type=\"button\" onClick={() => closeHandler()}>\n        <StyledClose />\n    </StyledButton>\n)\n\nexport default CloseButton;","import styled from 'styled-components';\n\nimport { DarkMode, LightMode } from '@mui/icons-material';\n\ninterface iButtonProps {\n    Settings: boolean;\n} \n\nexport const StyledThemeButton = styled.button<iButtonProps>`\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: inherit;\n    min-width: 100%;\n    padding: 1.5rem;\n    color: ${props => props.theme.colors.pageLinkColor1};\n    ${props => props.Settings === true && `\n        background-color: ${props.theme.colors.navBarBackground};\n        color: #fff;\n        justify-content: center;\n        margin-top: 1.5rem;\n        padding: 0.75rem 1.5rem;\n        font-size: ${props.theme.fontSizes.smallPlus};\n        > span {\n            margin-left: -0.25rem;\n        }\n    `}\n`;\n\nexport const StyledLightModeIcon = styled(LightMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;\n\nexport const StyledDarkModeIcon = styled(DarkMode)`\n    font-size: 2rem !important;\n    margin-right: 1rem;\n`;","import React, { useContext, FC } from 'react';\nimport { Theme, ThemeContext } from \"../../../providers/theme/theme.provider\";\nimport { StyledThemeButton, StyledDarkModeIcon, StyledLightModeIcon } from './theme-switcher.styles';\n\n\ninterface Props {\n    settingsPresentation?: boolean;\n}\n\nconst ThemeSwitcher: FC<Props> = ({ settingsPresentation = false }) => {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const handleTheme = () => {\n        if (theme === Theme.Dark) {\n            setTheme(Theme.Light);\n        } else {\n            setTheme(Theme.Dark);\n        }\n    };\n\n    return (\n        <StyledThemeButton Settings={settingsPresentation}\n            title={\n                theme === Theme.Dark ?\n                    'Switch to Light Theme'\n                    :\n                    'Switch to Dark Theme'\n            }\n            onClick={() => handleTheme()}\n        >\n            {\n                theme === Theme.Dark ?\n                    (<StyledLightModeIcon />)\n                    :\n                    (<StyledDarkModeIcon />)\n            }\n            <span>theme</span>\n        </StyledThemeButton>\n    )\n}\n\nexport default ThemeSwitcher;","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\nimport {Home, PeopleAlt, MenuBook, Widgets, AddCircle, Settings, Favorite} from '@material-ui/icons';\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nconst common = (props: any) => `\n    color: ${props.theme.colors.navBarBackground};\n    font-size: 1.75rem !important;\n    margin-right: 1rem;\n`\n\nexport const StyledHome = styled(Home)`\n    ${props => common(props)}\n`;\n\nexport const StyledUsers = styled(PeopleAlt)`\n    ${props => common(props)}\n`;\n\nexport const StyledMenu = styled(MenuBook)`\n    ${props => common(props)}\n`;\n\nexport const StyledWidget = styled(Widgets)`\n    ${props => common(props)}\n`;\n\nexport const StyledAddCircle = styled(AddCircle)`\n    ${props => common(props)}\n`;\n\nexport const StyledSetting = styled(Settings)`\n    ${props => common(props)}\n`;\n\nexport const StyledFavorite = styled(Favorite)`\n    ${props => common(props)}\n`;\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    display: flex;\n    align-items: center;\n    font-size: inherit;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSizes.smallPlus};\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100%;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\n","import styled from 'styled-components';\n\nimport { NavLink } from \"react-router-dom\";\n\ninterface iStyledMenuOuter {\n    isOpen: boolean;\n}\n\nexport const StyledNavUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledNavBrandWrap = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    font-size: 1.5rem;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: #fff;\n    }\n`;\n\nexport const StyledMenuHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    min-height: 55px;\n    > a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: ${props => props.theme.colors.pageForeground1};\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    color: ${props => props.theme.colors.pageLinkColor1};\n    padding: 1.5rem;\n    text-decoration: none;\n    min-width: 100%;\n    display: inline-block;\n    &.active {\n        background-color: ${props => props.theme.colors.pageBackground2};\n    }\n`\n\nexport const StyledListItem = styled.li`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${props => props.theme.colors.pageBackground1};\n`;\n\nexport const StyledMenuOuter = styled.div<iStyledMenuOuter>`\n    background-color: ${props => props.theme.colors.pageBackground1};\n    position: fixed;\n    top: 0;\n    left: ${props => props.isOpen ? '0px' : '-300px' };\n    width: 300px;\n    height: 100vh;\n    border-right: 1px solid ${props => props.theme.colors.pageBorderColor1};\n    z-index: 20;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: left 300ms ease-in-out;\n`;\n\nexport const StyledNavBar = styled.div`\n    height: 55px;\n    max-width: 100vw;\n    background-color: ${(props) => props.theme.colors.navBarBackground};\n    margin-bottom: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1.5rem;\n`;","\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport NAV_DATA from './primary-nav.data.json';\nimport NavBrand from '../../atoms/nav-brand/nav-brand-component';\nimport SignInSignOut from \"../sign-in-out/sign-in-out.component\";\nimport { AuthContext } from \"../../../providers/auth/auth.provider\";\nimport Backdrop from \"../../atoms/backdrop/backdrop.component\";\nimport MenuToggle from \"../../atoms/menu-toggle/menu-toggle.component\";\nimport MainMenu from \"../main-menu/main-menu.component\";\nimport { iMainNavItem } from \"../../../interfaces/nav/nav.interface\";\nimport { StyledNavBrandWrap, StyledNavBar } from './primary.nav.styles';\n\nconst PrimaryNav = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [mainNavItems, setMainNavItems] = useState<iMainNavItem[]>(NAV_DATA);\n    const { isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n\n    const handleIsOpen = () => {\n        setIsOpen(!isOpen);\n        if (isLoggedIn) {\n            expireAuth();\n            if (getUserAuth() === null) {\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setMainNavItems(mainNavItems.filter(item => item.auth === false));\n        } else {\n            setMainNavItems(NAV_DATA);\n        }\n    }, [isLoggedIn])\n\n    return (\n        <StyledNavBar>\n            <StyledNavBrandWrap>\n                <MenuToggle toggleHandler={handleIsOpen} />\n                <NavBrand isOpen={isOpen} toggleClose={handleIsOpen} />\n            </StyledNavBrandWrap>\n            <MainMenu isOpen={isOpen} toggleIsOpen={handleIsOpen} items={mainNavItems} />\n            <Backdrop isOpen={isOpen} toggleClose={() => handleIsOpen()} />\n            <SignInSignOut isLoggedIn={isLoggedIn} />\n        </StyledNavBar>\n    );\n}\n\nexport default PrimaryNav;","import React, { useContext, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport { UsersContext } from '../../providers/users/users.provider';\nimport { RecipesContext } from '../../providers/recipes/recipes.provider';\nimport { AuthContext } from '../../providers/auth/auth.provider';\nimport { iUserItem } from '../../interfaces/users/users.interface';\nimport { iRecipe } from '../../interfaces/recipe/recipe.interface';\nimport { EmptyMesssage } from '../../components/atoms/empty-message/empty-message.component';\nimport RecipesCategoryCardList from '../../components/molecules/recipes-category-card-list/recipes-category-card-list.component';\n\nconst UserRecipesPage = () => {\n    const { id } = useParams();\n    const { userItems } = useContext(UsersContext);\n    const { recipeItems } = useContext(RecipesContext);\n    const { user: authUser } = useContext(AuthContext);\n    const [user, setUser] = useState<iUserItem | null>(null);\n    const [usersRecipes, setUsersRecipes] = useState<iRecipe[]>([]);\n    const [isContentOwner, setIsContentOwner] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (authUser && authUser.userId === id) {\n            setIsContentOwner(true);\n        }\n    }, [authUser, id]);\n\n    useEffect(() => {\n        const tempUser = userItems.filter(u => u.id === id);\n        if (tempUser) {\n            setUser(tempUser[0]);\n        }\n    }, [userItems, id])\n\n    useEffect(() => {\n        if (user !== null && !isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id && r.shared))\n        } else if (user !== null && isContentOwner) {\n            setUsersRecipes(recipeItems.filter(r => r.user_id === user.id))\n        }\n    }, [user, recipeItems]);\n\n    return (\n        <MainSection>\n            <PageTitle>\n                {\n                    user && isContentOwner ? (\n                        <span>{`${user.name} recipe${usersRecipes.length !== 1 ? 's' : ''} (${usersRecipes.length})`}</span>\n                    ) : (\n                        <span>{`${user?.name} shared ${usersRecipes.length} recipe${usersRecipes.length !== 1 ? 's' : ''}`}</span>\n                    )\n                }\n            </PageTitle>\n            {\n                usersRecipes.length !== 0 ? (\n                    <RecipesCategoryCardList recipes={usersRecipes} />\n                ) : (\n                    <EmptyMesssage msg=\"There are no recipes.\" />\n                )\n            }\n        </MainSection>\n    );\n}\n\nexport default UserRecipesPage;","import styled from 'styled-components';\n\ninterface iStyledLabel {\n    Required: boolean;\n}\n\nexport const StyledLabel = styled.label<iStyledLabel>`\n    color: ${props => props.theme.colors.pageForeground1};\n    display: block;\n    margin-bottom: 0.25rem;\n    &::before {\n       ${props => props.Required && \"content: '*';\"}\n        color: ${props => props.theme.colors.pageHighLight2};\n        font-size: 18px;\n        font-weight: 700;\n        padding-right: 0.3rem;\n    }\n`;\n\nexport const StyledSelect = styled.select`\n\n        width: 100%;\n        color: ${props => props.theme.colors.pageForeground1};\n        height: 2.5rem;\n        font-size: 1rem;\n        background-color: ${props => props.theme.colors.pageBackground1};\n        border: 2px solid ${props => props.theme.colors.pageBorderColor1};\n        padding: 0.25rem 0.5rem;\n        border-radius: 0;\n        outline: none;\n        margin: 0;\n        &:focus {\n            border: 2px solid ${props => props.theme.colors.navBarBackground};\n            outline: 0;\n        }\n`;","import React, { FC, ChangeEvent } from 'react';\n\nimport FieldWrapper from '../../atoms/field-wrapper/field-wrapper.component';\nimport { StyledLabel, StyledSelect } from './select-option-plain.styles';\n\nexport interface iKeyValuePair {\n    id: string;\n    name: string;\n}\n\ninterface Props {\n    id: string;\n    name: string;\n    value: string;\n    handleChange: (evt: ChangeEvent<HTMLSelectElement>) => void;\n    optionData: iKeyValuePair[]\n    labelText?: string;\n}\n\nconst SelectOptionPlain: FC<Props> = ({ id, name, value, handleChange, optionData, labelText }) => (\n    <FieldWrapper>\n        {\n            labelText && (<StyledLabel htmlFor={id} Required={false}>{labelText}</StyledLabel>)\n        }\n        <StyledSelect id={id} name={name} value={value} onChange={evt => handleChange(evt)}>\n            {\n                optionData.map((o, idx) => (\n                    <option key={idx} value={o.id}>{o.name}</option>\n                ))\n            }\n        </StyledSelect>\n\n    </FieldWrapper>\n);\n\nexport default SelectOptionPlain;","import React, { useContext, useEffect, useState } from 'react';\nimport { Theme, ThemeContext } from '../../../providers/theme/theme.provider';\nimport SelectOptionPlain, { iKeyValuePair } from '../../atoms/select-option-plain/select-option-plain.component';\nimport { StyledWrapDiv, StyledFormWrapper } from './theme-palette-switcher.styles';\n\n\nconst ThemePaletteSwitcher = () => {\n    const {\n        theme,\n        setPaletteDark,\n        setPaletteLight,\n        paletteItems,\n        currentDark,\n        currentLight,\n        setCurrentDark,\n        setCurrentLight\n    } = useContext(ThemeContext);\n    const [selectValDark, setSelectValDark] = useState(currentDark);\n    const [selectValLight, setSelectValLight] = useState(currentLight);\n    const [themeColors, setThemeColors] = useState<iKeyValuePair[]>([]);\n\n    const handleChangeLight = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n        const val = evt.target.value;\n        setPaletteLight(paletteItems[val])\n        setCurrentLight(val);\n    };\n\n    const handleChangeDark = (evt: any) => {\n        const val = evt.target.value;\n        setPaletteDark(paletteItems[val])\n        setCurrentDark(val);\n    };\n\n    useEffect(() => {\n        const temp: iKeyValuePair[] = Object.keys(paletteItems).map(\n            item => {\n                const name = item.split(/(?=[A-Z])/).join(' ').toLowerCase();\n\n                return {\n                    name: name,\n                    id: item\n                }\n            }\n        ).sort((a: iKeyValuePair, b: iKeyValuePair) => (\n            a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n        ));\n\n        setThemeColors(temp)\n    }, [paletteItems]);\n\n    useEffect(() => {\n        setSelectValLight(currentLight);\n        setSelectValDark(currentDark);\n    }, [currentDark, currentLight]);\n\n    return (\n        <React.Fragment>\n\n            <SelectOptionPlain\n                id=\"dark\"\n                name=\"dark\"\n                value={selectValDark}\n                handleChange={handleChangeDark}\n                optionData={themeColors}\n                labelText=\"Dark Theme Palette\"\n            />\n\n            <SelectOptionPlain\n                id=\"light\"\n                name=\"light\"\n                value={selectValLight}\n                handleChange={handleChangeLight}\n                optionData={themeColors}\n                labelText=\"Light Theme Palette\"\n            />\n\n        </React.Fragment>\n    );\n\n}\n\nexport default ThemePaletteSwitcher;","import styled from 'styled-components';\n\nexport const StyledFormWrapper = styled.div`\n    color: ${(props) => props.theme.colors.pageForeground1};\n    padding: 1.5rem;\n    border: 1px solid ${props => props.theme.colors.pageBackground3};\n    margin-bottom: 0.5rem;\n`;\n\nexport const StyledUnderlabel = styled.div`\n    color: ${props => props.theme.colors.pageForeground1};\n    margin-bottom: 0.5rem;\n`\n","import React, { FC, useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\nimport { StyledFormWrapper, StyledUnderlabel } from './remove-user.styles';\nimport ConfirmDialog from '../../molecules/confirm-dialog/confirm-dialog.component';\n\nimport { deleteUserAccount } from '../../../services/users/users.service';\nimport AccordionToggle from '../../atoms/accordion-toggle/accordion-toggle.component';\nimport FormButton, { FormButtons } from '../../atoms/form-button/form-button.component';\nimport { AuthContext } from '../../../providers/auth/auth.provider';\nimport { UsersContext } from '../../../providers/users/users.provider';\nimport { RecipesContext } from '../../../providers/recipes/recipes.provider';\n\nconst RemoveUserComponent = () => {\n    const { addToast } = useToasts();\n    const { user, isLoggedIn, expireAuth, getUserAuth, setLogin,\n        setUserToken, setUserObject, setUserExpiration } = useContext(AuthContext);\n    const { userCount, userItems, removeUserItem } = useContext(UsersContext);\n    const { makeRequest, makeFreshPull } = useContext(RecipesContext);\n    const [showForm, setShowForm] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    }\n\n    const handleDelete = () => {\n        if (user) {\n            deleteUserAccount(user).then((resp) => {\n                setOpen(false);\n                let userToRemove = userItems.find(u => u.id === user.userId);\n                if (userToRemove) {\n                    removeUserItem(userToRemove, userItems)\n                }\n                addToast(\n                    'Success',\n                    {\n                        appearance: 'success',\n                        autoDismiss: true\n                    }\n                );\n                localStorage.removeItem('userData');\n                expireAuth();\n                setUserObject(null);\n                setLogin(false);\n                setUserToken(null);\n                setUserExpiration(null);\n                makeFreshPull(true)\n\n            }).catch((err) => {\n                setOpen(false);\n                addToast(\n                    `Error: ${err.message}`,\n                    {\n                        appearance: 'error',\n                        autoDismiss: false\n                    }\n                );\n            });\n        }\n\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                user && (\n                    <div>\n                        {\n                            <AccordionToggle\n                                isOpen={showForm}\n                                toggleHandler={() => toggleForm()}\n                                buttonText=\"Account Settings\"\n                            />\n                        }\n                        {\n                            showForm && (\n                                <StyledFormWrapper>\n                                    <StyledUnderlabel>Close account and remove data</StyledUnderlabel>\n                                    <FormButton\n                                        FormButton={FormButtons.Secondary}\n                                        buttonText=\"Remove Account\"\n                                        type=\"button\"\n                                        onClick={() => { setOpen(true); }}\n                                        disabled={false}\n                                        size=\"small\"\n                                    ></FormButton>\n                                    <ConfirmDialog\n                                        open={open}\n                                        title={\"Are you sure?\"}\n                                        confirmText={`Delete my account and data? This action cannot be undone.`}\n                                        handleCancel={handleClose}\n                                        handleConfirm={handleDelete}\n                                    />\n                                </StyledFormWrapper>\n                            )\n                        }\n                    </div>\n                )\n            }\n        </React.Fragment>\n    )\n};\n\nexport default RemoveUserComponent;","import React from 'react';\nimport { MainSection } from '../../components/atoms/main-section/main-section.component';\nimport PageTitle from '../../components/atoms/page-title/page-title.component';\nimport ThemePaletteSwitcher from '../../components/molecules/theme-palette-switcher/theme-palette-switcher.component';\nimport ThemeSwitcher from '../../components/molecules/theme-switcher/theme-switcher.component';\nimport { StyledFormWrapper } from '../../templates/add-recipe-form/add-recipe-form.styles';\nimport RemoveUserComponent from '../../components/molecules/remove-user/remove-user.component';\nconst SettingsPage = () => (\n    <MainSection>\n        <PageTitle>Settings</PageTitle>\n        <StyledFormWrapper>\n            <ThemePaletteSwitcher />\n            <ThemeSwitcher settingsPresentation={true} />\n        </StyledFormWrapper>\n        <RemoveUserComponent></RemoveUserComponent>\n    </MainSection>\n);\n\nexport default SettingsPage;","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/home/home.component';\nimport RecipesPage from './pages/recipes/recipes.component';\nimport FavoritesPage from './pages/favorites/favorites.component';\nimport AddRecipePage from './pages/add-recipe/add-recipe.component';\nimport RecipeDetailPage from './pages/view-recipe/view-recipe.component';\nimport EditRecipePage from './pages/edit-recipe/edit-recipe.component';\nimport RecipesByCategory from './pages/recipes-by-category/recipes-by-category.component';\nimport SignInSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport SignUpPage from './pages/sign-up/sign-up.component';\nimport UsersPage from './pages/users/users.component';\nimport { StyledOuterDiv } from './App.styles';\nimport PrimaryNav from './components/molecules/primary-nav/primary.nav.component';\nimport UserRecipesPage from './pages/user-recipes/user-recipes.component';\nimport SettingsPage from './pages/setting/settings-page.component';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <StyledOuterDiv>\n        <PrimaryNav />\n        <Routes>\n          <Route path='/' element={<HomePage />} />\n          <Route path='/settings' element={<SettingsPage />} />\n          <Route path='/add-recipe' element={<AddRecipePage />} />\n          <Route path='/users' element={<UsersPage />} />\n          <Route path='/user-recipes/:id' element={<UserRecipesPage />} />\n          <Route path='/recipes' element={<RecipesPage />} />\n          <Route path='/favorites' element={<FavoritesPage />} />\n          <Route path='/sign-in' element={<SignInSignUpPage />} />\n          <Route path='/sign-up' element={<SignUpPage />} />\n          <Route path='/recipes/:id' element={<RecipeDetailPage />} />\n          <Route path='/edit-recipe/:id' element={<EditRecipePage />} />\n          <Route path='/recipes/category/:cat_id' element={<RecipesByCategory />} />\n          <Route path='*' element={<Navigate to=\"/\" />} />\n        </Routes>\n      </StyledOuterDiv>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\nimport {Close} from '@material-ui/icons';\n\ninterface iStyledToast {\n    Appearance: string;\n}\n\nexport const StyledCloseIcon = styled(Close)`\ncursor: pointer;\nfont-size: 1rem !important;\n`;\n\nexport const StyledButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #fff;\n    position: absolute;\n    top: 0.1rem;\n    right: 0.1rem;\n`;\n\nexport const StyledToast = styled.div<iStyledToast>`\n    background: ${props => props.Appearance === 'success' ?\n        props.theme.colors.pageToastSuccess :\n        props.theme.colors.pageToastError};\n    position: fixed;\n    top: 55px;\n    left: 45%;\n    left: ${props => props.Appearance === 'success' ?\n    '45%' : 'calc(50% - 275px/2)'};\n    padding: 0.75rem 2.5rem;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 400;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${props => props.Appearance === 'success' ?\n    'auto' : '275px'};\n`;\n","import React, { FC } from 'react';\nimport { ToastProps } from 'react-toast-notifications';\nimport { StyledToast, StyledButton, StyledCloseIcon } from './toasts-styles'\n\n\n\n\n\nconst CustomToasts: FC<ToastProps> = ({ children, appearance, onDismiss, ...props }) => (\n    <StyledToast Appearance={appearance}>\n        <div>{children}</div>\n        <StyledButton onClick={(id) => onDismiss()}>\n            <StyledCloseIcon />\n        </StyledButton>\n    </StyledToast>\n);\n\nexport default CustomToasts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MyTheme from './providers/theme/theme.provider';\nimport RecipesProvider from './providers/recipes/recipes.provider';\nimport { ToastProvider } from 'react-toast-notifications';\nimport CustomToast from './components/molecules/toasts/toasts.component';\nimport AuthProvider from './providers/auth/auth.provider';\nimport UsersProvider from './providers/users/users.provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <UsersProvider>\n        <RecipesProvider>\n          <MyTheme>\n            <ToastProvider components={{ Toast: CustomToast }}>\n              <BrowserRouter>\n                <App />\n              </BrowserRouter>\n            </ToastProvider>\n          </MyTheme>\n        </RecipesProvider>\n      </UsersProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}